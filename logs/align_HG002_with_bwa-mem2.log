Looking to launch executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx", simd = .avx
Launching executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx"
-----------------------------
Executing in AVX mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Entering FMI_search
* Index file found. Loading index from /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.bwt.2bit.64
* Reference seq len for bi-index = 6274909011
* sentinel-index: 2668688548
* Count:
0,	1
1,	1832527715
2,	3137454506
3,	4442381297
4,	6274909011

* Reading other elements of the index from files /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Index prefix: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.0123
* Reference genome size: 6274909010 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 3344.1250 MB
2. Memory pre-allocation for BSW: 5750.8086 MB
3. Memory pre-allocation for BWT: 1855.5402 MB
------------------------------------------
* Threads used (compute): 24
* No. of pipeline threads: 2

[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 668807, 38, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 471, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1490)
[0000][PE] mean and std.dev: (426.97, 256.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 580, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1067)
[0000][PE] mean and std.dev: (579.89, 157.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 1066, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1369.06, 1459.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1175, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1528.67, 1146.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.216 CPU sec, 28.377 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[W::sam_hrecs_update_hashes] PG line with multiple ID tags. The first encountered was preferred - ID:bwa-mem2
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 669340, 32, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 416, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (412.87, 213.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1048)
[0000][PE] mean and std.dev: (568.30, 155.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (258, 865, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (794.11, 745.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1097, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1002.85, 773.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.980 CPU sec, 28.433 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 668357, 25, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 414, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (402.03, 207.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1063)
[0000][PE] mean and std.dev: (578.59, 157.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1256)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 1694, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1757.25, 1777.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8909)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.864 CPU sec, 28.610 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 668339, 36, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 358, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (401.05, 249.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 1046)
[0000][PE] mean and std.dev: (566.23, 155.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (685, 1240, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1507.03, 1219.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 731, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (725.33, 480.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.284 CPU sec, 28.364 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 669005, 46, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 409, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1215)
[0000][PE] mean and std.dev: (402.22, 217.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.43, 152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 1199, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5360)
[0000][PE] mean and std.dev: (1113.41, 996.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.220 CPU sec, 28.430 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668695, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 427, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (416.03, 214.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1052)
[0000][PE] mean and std.dev: (574.96, 154.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (409, 801, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (982.09, 821.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.164 CPU sec, 27.906 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 669012, 38, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 413, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1254)
[0000][PE] mean and std.dev: (396.66, 240.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 1046)
[0000][PE] mean and std.dev: (565.87, 155.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 1095, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1258.26, 1006.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 937, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (806.23, 393.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.404 CPU sec, 28.629 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 668477, 35, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 420, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (381.24, 189.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1060)
[0000][PE] mean and std.dev: (578.11, 156.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (613, 1405, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1638.21, 1451.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 979, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7988)
[0000][PE] mean and std.dev: (1364.08, 1262.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.996 CPU sec, 27.630 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 668852, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 366, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 959)
[0000][PE] mean and std.dev: (377.30, 162.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1054)
[0000][PE] mean and std.dev: (571.63, 156.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 1098, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1184.08, 935.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1306, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1361.90, 932.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.600 CPU sec, 28.077 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 669247, 34, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 433, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (403.31, 205.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 578, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1059)
[0000][PE] mean and std.dev: (577.18, 156.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 637, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1489.18, 1518.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.472 CPU sec, 27.915 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 668832, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 428, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (372.50, 178.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.27, 152.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 871, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (918.83, 933.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1334, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1140.78, 696.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.248 CPU sec, 28.507 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 667955, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 469, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (429.95, 213.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1043)
[0000][PE] mean and std.dev: (570.67, 153.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 1127, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6058)
[0000][PE] mean and std.dev: (1311.32, 1267.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7971)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1247, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7919)
[0000][PE] mean and std.dev: (1699.00, 1587.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.412 CPU sec, 28.774 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 668928, 37, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 412, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (381.53, 232.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 570, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1048)
[0000][PE] mean and std.dev: (568.01, 155.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (264, 886, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1634.19, 1727.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8543)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 1099, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9041)
[0000][PE] mean and std.dev: (2315.63, 2664.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.576 CPU sec, 27.766 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 668284, 33, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 441, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (405.57, 249.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1055)
[0000][PE] mean and std.dev: (575.18, 155.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 1483, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8164)
[0000][PE] mean and std.dev: (1448.97, 1253.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10734)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 907, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (836.50, 510.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.448 CPU sec, 28.068 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667784, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 410, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (381.25, 210.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1043)
[0000][PE] mean and std.dev: (565.27, 155.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (291, 629, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1045.81, 1131.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1000, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1134.50, 719.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.368 CPU sec, 28.174 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 667771, 49, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 468, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (442.11, 214.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 582, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1066)
[0000][PE] mean and std.dev: (581.83, 157.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1259)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 960, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (1232.89, 1148.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1199, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10103)
[0000][PE] mean and std.dev: (1658.19, 1441.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.968 CPU sec, 28.171 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668171, 47, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 447, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (428.82, 233.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1045)
[0000][PE] mean and std.dev: (572.96, 153.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (261, 738, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (996.26, 1074.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.464 CPU sec, 28.498 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 667537, 39, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 399, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (380.22, 179.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.80, 151.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (437, 1125, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1174.38, 878.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6993)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1308, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1495.33, 1393.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.884 CPU sec, 27.858 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 668300, 29, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 468, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (419.90, 204.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.44, 151.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 608, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1284.57, 1451.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1037, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1006.56, 749.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.080 CPU sec, 27.876 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 669200, 28, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 414, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 963)
[0000][PE] mean and std.dev: (392.86, 191.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.38, 152.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 515, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (767.19, 807.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 886, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8984)
[0000][PE] mean and std.dev: (1938.45, 2090.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.644 CPU sec, 28.064 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 669491, 40, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 414, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (394.97, 223.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1033)
[0000][PE] mean and std.dev: (565.59, 151.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 840, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1159.81, 1204.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.052 CPU sec, 27.934 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 667954, 35, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 395, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (384.59, 195.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.95, 150.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 492, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (874.48, 1058.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.336 CPU sec, 28.859 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 668164, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 440, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (414.41, 238.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.43, 151.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1204, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6632)
[0000][PE] mean and std.dev: (1551.03, 1531.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8710)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1366, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1283.17, 1211.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.312 CPU sec, 28.490 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667153, 32, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 456, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1081)
[0000][PE] mean and std.dev: (426.47, 192.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1030)
[0000][PE] mean and std.dev: (562.74, 150.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (535, 1190, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1054.15, 992.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.096 CPU sec, 28.182 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 668219, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 416, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (404.50, 229.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.65, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 876, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1200.09, 1004.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.804 CPU sec, 28.087 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 668170, 34, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 424, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (391.76, 192.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (569.83, 150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (411, 1030, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1165.70, 884.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 948, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (924.71, 566.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.044 CPU sec, 28.078 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667286, 37, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 460, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1319)
[0000][PE] mean and std.dev: (442.30, 236.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.93, 151.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 1220, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5995)
[0000][PE] mean and std.dev: (1661.14, 1543.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1178, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (194, 2264)
[0000][PE] mean and std.dev: (1087.78, 460.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.940 CPU sec, 28.955 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 668915, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 396, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (382.64, 210.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.45, 152.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 661, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1179.76, 1325.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1080, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (872.31, 525.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.304 CPU sec, 27.619 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 667907, 37, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 394, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (362.01, 206.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1032)
[0000][PE] mean and std.dev: (564.49, 151.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 886, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6885)
[0000][PE] mean and std.dev: (1554.70, 1586.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.488 CPU sec, 28.112 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667635, 35, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 387, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (354.87, 172.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.22, 149.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (203, 587, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (980.91, 948.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7335)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.288 CPU sec, 28.482 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666750, 30, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 390, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1119)
[0000][PE] mean and std.dev: (355.50, 184.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 561, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.50, 149.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (449, 1272, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1348.57, 1278.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 586, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (608.20, 402.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.864 CPU sec, 28.616 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 667090, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 403, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1198)
[0000][PE] mean and std.dev: (354.84, 198.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (567.01, 148.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 1158, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6063)
[0000][PE] mean and std.dev: (1397.22, 1225.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7960)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 866, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (969.30, 629.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.524 CPU sec, 28.734 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 667117, 34, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 421, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (376.54, 201.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (556.67, 149.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (284, 1024, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1302.91, 1185.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.856 CPU sec, 28.011 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 667425, 36, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 360, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (371.08, 188.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.73, 149.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 600, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (953.00, 1017.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.504 CPU sec, 27.892 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 667361, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 346, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (335.70, 203.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1025)
[0000][PE] mean and std.dev: (560.42, 149.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 754, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1239.84, 1354.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 1545, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1018.44, 894.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.012 CPU sec, 28.243 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667820, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 358, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (353.51, 215.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.83, 150.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 1201, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (943.07, 753.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 502, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (616.42, 325.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.064 CPU sec, 27.982 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666619, 31, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 386, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (363.62, 207.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1031)
[0000][PE] mean and std.dev: (568.87, 149.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 933, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (977.46, 957.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 817, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1231.85, 954.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.972 CPU sec, 28.752 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 666892, 34, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 323, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1261)
[0000][PE] mean and std.dev: (348.66, 208.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1016)
[0000][PE] mean and std.dev: (555.69, 148.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 747, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (977.70, 1031.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1200, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1362.33, 983.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.312 CPU sec, 28.107 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666824, 25, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 375, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (387.92, 244.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (566.85, 149.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 1118, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1052.35, 806.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 761, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (864.08, 858.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.752 CPU sec, 28.065 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 666624, 37, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 374, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (349.91, 193.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.61, 149.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 582, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (968.77, 998.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.752 CPU sec, 28.319 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668055, 32, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 404, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (385.91, 257.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.68, 150.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1117, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1161.33, 1054.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6766)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.908 CPU sec, 27.867 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 665892, 24, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 401, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (382.05, 239.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1048)
[0000][PE] mean and std.dev: (569.72, 154.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 344, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (851.57, 926.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.692 CPU sec, 28.997 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 665420, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 398, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (369.28, 231.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.51, 154.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (386, 1237, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1538.00, 1476.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.920 CPU sec, 28.420 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 665172, 26, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 386, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1243)
[0000][PE] mean and std.dev: (374.34, 234.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1051)
[0000][PE] mean and std.dev: (573.02, 154.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 1193, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1354.15, 1116.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1292, 4356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10806)
[0000][PE] mean and std.dev: (2140.23, 1909.38)
[0000][PE] low and high boundaries for proper pairs: (1, 14031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.416 CPU sec, 28.971 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 664559, 30, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 403, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (395.92, 210.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (566.73, 153.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 592, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1169.87, 1350.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7443)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.620 CPU sec, 28.480 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (119, 664197, 37, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 377, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1296)
[0000][PE] mean and std.dev: (357.51, 215.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.41, 153.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 677, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1610.54, 1782.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1492, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9392)
[0000][PE] mean and std.dev: (2036.10, 1933.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.256 CPU sec, 28.447 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 663547, 29, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 389, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (362.43, 222.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1042)
[0000][PE] mean and std.dev: (563.55, 154.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 338, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (551.69, 561.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1136, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6400)
[0000][PE] mean and std.dev: (1531.38, 1463.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 695.168 CPU sec, 29.292 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 664273, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 415, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (366.48, 205.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1048)
[0000][PE] mean and std.dev: (572.20, 154.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (250, 924, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1051.74, 925.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 653, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (975.92, 847.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.628 CPU sec, 28.029 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 664515, 36, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 399, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (372.00, 220.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 1040)
[0000][PE] mean and std.dev: (561.36, 154.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (143, 1452, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8816)
[0000][PE] mean and std.dev: (1500.09, 1626.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11707)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.796 CPU sec, 28.586 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 664813, 34, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 431, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1351)
[0000][PE] mean and std.dev: (437.20, 242.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (576.47, 153.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 795, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (911.06, 703.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1229, 4235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11817)
[0000][PE] mean and std.dev: (2062.09, 1910.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.124 CPU sec, 28.358 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 665387, 29, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 437, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (411.64, 244.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1040)
[0000][PE] mean and std.dev: (564.16, 154.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (314, 893, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1411.52, 1356.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 671, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (652.60, 306.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.172 CPU sec, 28.506 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 663608, 40, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 405, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (371.21, 193.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1051)
[0000][PE] mean and std.dev: (575.79, 154.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (491, 1546, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5612)
[0000][PE] mean and std.dev: (1386.76, 1173.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 557, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (982.40, 909.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 702.548 CPU sec, 29.651 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 664868, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 360, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (360.32, 224.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (566.50, 153.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 898, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1119.10, 1126.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 746, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (857.80, 642.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.964 CPU sec, 28.546 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 664892, 25, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 405, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (403.08, 222.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (563.81, 152.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (342, 643, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (752.87, 559.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1371, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1489.64, 1187.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.360 CPU sec, 28.533 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 664262, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 409, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (386.74, 203.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (568.84, 153.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 1169, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1395.27, 1159.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 1179, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1045.31, 674.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.120 CPU sec, 29.815 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 664324, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 379, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (357.99, 187.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1039)
[0000][PE] mean and std.dev: (562.83, 153.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (433, 1797, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6694)
[0000][PE] mean and std.dev: (1627.53, 1290.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 685.812 CPU sec, 28.663 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 664084, 31, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 396, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (397.35, 218.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.52, 153.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 1192, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6789)
[0000][PE] mean and std.dev: (1510.00, 1528.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1021, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 2203)
[0000][PE] mean and std.dev: (1053.50, 302.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.272 CPU sec, 29.102 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 664900, 40, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 399, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (381.53, 201.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1037)
[0000][PE] mean and std.dev: (561.13, 153.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 891, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6790)
[0000][PE] mean and std.dev: (1296.28, 1235.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 793, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1304.86, 1158.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.424 CPU sec, 28.325 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 667509, 25, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 402, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (373.35, 189.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.03, 151.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 697, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (772.00, 773.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1155, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (931.22, 596.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.568 CPU sec, 28.059 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 669626, 44, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 370, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (325.49, 197.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1026)
[0000][PE] mean and std.dev: (563.65, 149.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 826, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (853.79, 798.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 997, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (738.11, 367.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.976 CPU sec, 27.860 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 670402, 36, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 419, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (373.09, 200.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1025)
[0000][PE] mean and std.dev: (562.76, 149.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 1009, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1210.18, 1054.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7139)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 1060, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (682.70, 489.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.200 CPU sec, 27.866 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670977, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 423, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (394.85, 205.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.60, 150.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 871, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1380.06, 1493.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (445, 603, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1011.67, 841.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.544 CPU sec, 28.357 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 670835, 54, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 379, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (367.81, 218.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.87, 150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (496, 1128, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1291.94, 1117.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 969, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1220.50, 1262.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.096 CPU sec, 27.973 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670151, 35, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 382, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (409.58, 192.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.71, 149.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 456, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (857.62, 859.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1223, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1533.53, 981.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.292 CPU sec, 27.933 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 669359, 24, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 389, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (390.12, 211.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (563.47, 149.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 1214, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (957.68, 894.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.948 CPU sec, 27.973 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 669901, 30, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 377, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (369.74, 269.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (561.20, 148.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 1268, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5673)
[0000][PE] mean and std.dev: (1321.62, 1174.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.040 CPU sec, 27.982 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 670742, 31, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 527, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (487.36, 215.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (570.33, 150.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 634, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1177.60, 1173.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1416, 3241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7535)
[0000][PE] mean and std.dev: (2026.33, 1820.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.376 CPU sec, 28.547 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 670179, 46, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 365, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (362.23, 193.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.89, 150.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 506, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (824.86, 872.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1459, 7473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20981)
[0000][PE] mean and std.dev: (3200.10, 3443.53)
[0000][PE] low and high boundaries for proper pairs: (1, 27735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.628 CPU sec, 28.162 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 668548, 35, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 402, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (415.62, 243.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1044)
[0000][PE] mean and std.dev: (574.82, 151.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 871, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6954)
[0000][PE] mean and std.dev: (1316.75, 1401.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9168)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 687, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (594.36, 484.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.232 CPU sec, 27.961 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 666752, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 408, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (376.47, 221.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.15, 151.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 1020, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (1347.14, 1184.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7893)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.064 CPU sec, 28.147 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
[0000] 2. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 667411, 31, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 334, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (348.89, 198.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.22, 152.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 1193, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6902)
[0000][PE] mean and std.dev: (1681.57, 1860.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9125)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.332 CPU sec, 27.908 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 668192, 41, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 361, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (356.73, 210.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.79, 151.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (282, 703, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1089.72, 1038.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1251, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6819)
[0000][PE] mean and std.dev: (1435.38, 1148.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.192 CPU sec, 28.951 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (125, 668334, 40, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 423, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1241)
[0000][PE] mean and std.dev: (418.98, 230.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1055)
[0000][PE] mean and std.dev: (583.19, 153.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (505, 970, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (997.19, 707.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.552 CPU sec, 28.253 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 664004, 40, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 415, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (400.57, 190.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.28, 150.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 834, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1474.90, 1567.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7746)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1214, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (1572.18, 1181.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 690.580 CPU sec, 28.923 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 666529, 31, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 428, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (408.53, 194.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.94, 151.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (280, 610, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1172.77, 1259.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 1200, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1046.00, 698.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.580 CPU sec, 28.370 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 666480, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 350, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (342.23, 153.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1046)
[0000][PE] mean and std.dev: (573.78, 151.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 1231, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5857)
[0000][PE] mean and std.dev: (1307.49, 1054.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7670)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 398, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (512.20, 272.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.380 CPU sec, 28.332 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 667177, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 408, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (405.03, 262.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1043)
[0000][PE] mean and std.dev: (573.09, 151.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1243, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1281.34, 1229.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1069, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (1252.00, 878.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.436 CPU sec, 28.189 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 667644, 40, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 393, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (396.15, 203.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (576.65, 152.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 875, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1210.14, 1253.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 890, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1220.87, 883.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.808 CPU sec, 28.724 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 667939, 35, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 421, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (405.63, 217.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1053)
[0000][PE] mean and std.dev: (581.57, 152.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (367, 1003, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1478.29, 1492.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9007)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 395, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1525)
[0000][PE] mean and std.dev: (351.12, 162.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.136 CPU sec, 28.331 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 663174, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 424, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (417.08, 229.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.12, 149.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 996, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1436.31, 1527.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7852)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1095, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (801.69, 516.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 699.336 CPU sec, 29.298 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667472, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 373, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (351.67, 227.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (464, 559, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1019)
[0000][PE] mean and std.dev: (554.03, 150.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 800, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7077)
[0000][PE] mean and std.dev: (1298.90, 1455.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9380)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 894, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1000.18, 640.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.016 CPU sec, 28.470 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 661590, 46, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 384, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (365.86, 218.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1031)
[0000][PE] mean and std.dev: (568.74, 149.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 445, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (822.13, 850.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6192)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1233, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6423)
[0000][PE] mean and std.dev: (1402.42, 1403.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.716 CPU sec, 28.841 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 662280, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 425, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (385.75, 187.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1026)
[0000][PE] mean and std.dev: (563.91, 149.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 1565, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1289.86, 887.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 1037, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1093.00, 874.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 698.524 CPU sec, 29.528 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 663418, 38, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 312, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (328.59, 209.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 563, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1022)
[0000][PE] mean and std.dev: (559.25, 149.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 920, 3806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10724)
[0000][PE] mean and std.dev: (2123.42, 2431.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14183)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.716 CPU sec, 28.441 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 663173, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 431, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (410.84, 244.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (573.48, 150.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 897, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (919.21, 789.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 781, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (774.78, 873.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.208 CPU sec, 28.552 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 663826, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 391, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (365.01, 198.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1033)
[0000][PE] mean and std.dev: (565.60, 150.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 754, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1228.83, 1263.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6989)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 687.060 CPU sec, 28.895 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 664685, 32, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 416, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (353.27, 197.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (562.14, 150.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (502, 978, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (961.58, 714.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.024 CPU sec, 28.412 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 663340, 30, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 367, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1358)
[0000][PE] mean and std.dev: (355.63, 231.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.55, 149.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (357, 982, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6549)
[0000][PE] mean and std.dev: (1494.32, 1574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8613)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 893, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (867.91, 482.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 700.052 CPU sec, 29.643 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 662257, 25, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 412, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (378.68, 187.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1030)
[0000][PE] mean and std.dev: (568.05, 149.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 882, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1431.92, 1488.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.552 CPU sec, 28.622 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 662750, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 435, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1352)
[0000][PE] mean and std.dev: (425.26, 236.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.57, 150.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (262, 547, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1184.50, 1262.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 713, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (731.69, 403.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.776 CPU sec, 28.948 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 663317, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 421, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (393.15, 187.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.84, 150.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 484, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (727.00, 710.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 978, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1228.90, 692.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 686.408 CPU sec, 28.610 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 666405, 34, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 458, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (446.47, 277.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (572.07, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (286, 1219, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1817.21, 2022.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10910)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 491, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (586.60, 467.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.012 CPU sec, 28.242 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 668645, 37, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 342, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (337.57, 210.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1030)
[0000][PE] mean and std.dev: (559.41, 152.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (382, 999, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5425)
[0000][PE] mean and std.dev: (1216.57, 1235.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 836, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (771.36, 546.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.120 CPU sec, 28.379 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 668987, 39, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 264, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (305.20, 197.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1033)
[0000][PE] mean and std.dev: (560.69, 152.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (705, 1254, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1431.89, 1152.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 566, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (742.18, 551.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 653.848 CPU sec, 27.484 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 670253, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 450, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (385.48, 197.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.09, 152.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 881, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1165.16, 1124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.936 CPU sec, 27.786 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 669779, 48, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 418, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (397.07, 207.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (564.78, 153.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 566, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1303.15, 1399.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 872, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (820.36, 520.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.544 CPU sec, 27.881 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 669276, 27, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 388, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1280)
[0000][PE] mean and std.dev: (395.80, 236.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.23, 152.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (544, 1132, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1125.67, 943.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.996 CPU sec, 27.974 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 668453, 49, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 306, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (298.27, 186.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1029)
[0000][PE] mean and std.dev: (559.06, 152.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 1060, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7722)
[0000][PE] mean and std.dev: (1807.20, 1949.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10219)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.488 CPU sec, 28.600 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 668775, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 438, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1264)
[0000][PE] mean and std.dev: (411.53, 214.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 561, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1028)
[0000][PE] mean and std.dev: (557.74, 152.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (258, 659, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1068.72, 1062.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 585, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (754.92, 543.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.204 CPU sec, 27.829 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 669832, 37, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 400, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (377.80, 208.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.74, 153.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 1357, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1506.14, 1252.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 566, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (626.14, 511.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.588 CPU sec, 27.688 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 668683, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 406, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1100)
[0000][PE] mean and std.dev: (385.36, 201.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.96, 152.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 1294, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1368.39, 1143.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1219, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1217.89, 967.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.032 CPU sec, 28.179 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 667788, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 425, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1115)
[0000][PE] mean and std.dev: (406.83, 190.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1047)
[0000][PE] mean and std.dev: (580.00, 151.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1616, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1531.20, 1211.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10067)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1187, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1422.00, 1050.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.516 CPU sec, 28.251 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 668352, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 428, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1213)
[0000][PE] mean and std.dev: (419.45, 235.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 583, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1050)
[0000][PE] mean and std.dev: (583.33, 151.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (388, 1199, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (1436.89, 1372.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10236)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1038, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1434.00, 1585.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.948 CPU sec, 28.627 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 668293, 35, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 462, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1280)
[0000][PE] mean and std.dev: (379.69, 234.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.90, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 634, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (783.58, 724.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.000 CPU sec, 27.814 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
[0000] 2. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 668281, 37, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 353, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (385.92, 284.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (574.73, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 1033, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1132.66, 907.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.100 CPU sec, 27.798 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668087, 34, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 438, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (397.31, 173.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.19, 150.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 1486, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1375.71, 1179.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.268 CPU sec, 27.915 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669252, 22, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 432, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (403.89, 207.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.89, 150.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 854, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (859.20, 656.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.692 CPU sec, 28.002 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 668848, 36, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 479, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1224)
[0000][PE] mean and std.dev: (421.59, 225.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1024)
[0000][PE] mean and std.dev: (561.00, 150.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 494, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (953.80, 1060.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 720, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (777.84, 608.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.244 CPU sec, 28.875 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 668530, 38, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 466, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (423.75, 200.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (574.34, 151.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 803, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1196.27, 1161.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1169, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1181.80, 472.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.296 CPU sec, 28.390 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 667898, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 440, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (401.84, 204.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 1053)
[0000][PE] mean and std.dev: (584.09, 152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 671, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1094.11, 1188.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.132 CPU sec, 27.966 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 669014, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 383, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1316)
[0000][PE] mean and std.dev: (400.44, 266.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (579.13, 151.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (355, 982, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5953)
[0000][PE] mean and std.dev: (1418.11, 1297.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7819)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1159, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7784)
[0000][PE] mean and std.dev: (1668.64, 1325.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.448 CPU sec, 27.733 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669000, 39, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 477, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1060)
[0000][PE] mean and std.dev: (403.73, 186.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (575.78, 151.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (359, 705, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1045.53, 1013.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 578, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7247)
[0000][PE] mean and std.dev: (1252.46, 1362.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.612 CPU sec, 28.122 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 668630, 37, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 365, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (364.16, 206.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.54, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (242, 968, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5555)
[0000][PE] mean and std.dev: (1284.47, 1383.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7326)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.780 CPU sec, 28.495 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 668883, 36, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 361, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (365.22, 228.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.69, 151.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 835, 3305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9449)
[0000][PE] mean and std.dev: (1821.58, 2176.72)
[0000][PE] low and high boundaries for proper pairs: (1, 12521)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1319, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6536)
[0000][PE] mean and std.dev: (1758.62, 1741.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.960 CPU sec, 27.790 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 668287, 39, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 411, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (408.29, 255.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (561.50, 150.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (367, 868, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (1185.27, 1018.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 718, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (923.16, 710.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.352 CPU sec, 28.338 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 668675, 31, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 429, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (379.86, 208.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (571.97, 151.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 654, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5411)
[0000][PE] mean and std.dev: (1312.68, 1222.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1649, 2007, 3514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7244)
[0000][PE] mean and std.dev: (2345.27, 1550.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.148 CPU sec, 28.418 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 668074, 33, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 495, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (482.17, 216.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (496, 588, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1060)
[0000][PE] mean and std.dev: (588.71, 152.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (593, 1565, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6452)
[0000][PE] mean and std.dev: (1694.94, 1503.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8405)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.304 CPU sec, 28.108 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 668914, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 407, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (405.38, 228.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1056)
[0000][PE] mean and std.dev: (584.43, 152.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (466, 1334, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1384.00, 1001.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 680.072 CPU sec, 28.763 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 669046, 17, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 405, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (400.25, 220.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1050)
[0000][PE] mean and std.dev: (580.55, 152.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (493, 1386, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1301.12, 1057.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 2712, 4021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10469)
[0000][PE] mean and std.dev: (2503.12, 2112.18)
[0000][PE] low and high boundaries for proper pairs: (1, 13693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.988 CPU sec, 27.974 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 669820, 28, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 471, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1354)
[0000][PE] mean and std.dev: (452.17, 259.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1044)
[0000][PE] mean and std.dev: (576.98, 151.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (378, 993, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1271.89, 1168.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.304 CPU sec, 28.079 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 669532, 31, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 453, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (413.80, 212.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.08, 151.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (256, 878, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1159.80, 1156.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7132)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 2057, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (2086.10, 1346.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.596 CPU sec, 27.846 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 669846, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 426, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (378.21, 215.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1033)
[0000][PE] mean and std.dev: (565.25, 151.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (475, 1552, 3620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9910)
[0000][PE] mean and std.dev: (2171.93, 2117.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13055)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.016 CPU sec, 28.079 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 670053, 39, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 378, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1324)
[0000][PE] mean and std.dev: (356.56, 211.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.64, 150.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 492, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1002.46, 1129.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 684.348 CPU sec, 28.875 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 668038, 44, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 450, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1258)
[0000][PE] mean and std.dev: (416.04, 195.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (497, 589, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1064)
[0000][PE] mean and std.dev: (590.15, 153.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1253)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (395, 1265, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8879)
[0000][PE] mean and std.dev: (1691.70, 1656.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11707)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1513, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1311.92, 662.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.892 CPU sec, 27.795 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 669391, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 535, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (517.54, 325.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (494, 586, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1061)
[0000][PE] mean and std.dev: (586.63, 153.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1250)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (274, 1115, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1219.59, 1253.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8054)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (359, 688, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5996)
[0000][PE] mean and std.dev: (1383.57, 1461.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 689.524 CPU sec, 28.912 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 668652, 28, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 401, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1124)
[0000][PE] mean and std.dev: (372.67, 220.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 583, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1052)
[0000][PE] mean and std.dev: (582.48, 152.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (248, 1342, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7751)
[0000][PE] mean and std.dev: (1832.93, 2054.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10252)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.564 CPU sec, 28.071 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 669493, 41, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 441, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (412.26, 213.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1049)
[0000][PE] mean and std.dev: (579.26, 152.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 1281, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7505)
[0000][PE] mean and std.dev: (1567.68, 1540.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9941)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 924, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1097.25, 765.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.168 CPU sec, 28.104 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 668646, 27, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 440, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1283)
[0000][PE] mean and std.dev: (412.12, 225.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1043)
[0000][PE] mean and std.dev: (572.84, 152.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (438, 899, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1279.40, 1270.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7274)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1183, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (983.77, 592.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 718.340 CPU sec, 30.419 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 669083, 28, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 374, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1405)
[0000][PE] mean and std.dev: (371.41, 268.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.00, 151.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 891, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1092.96, 1215.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7189)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1252, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1047.67, 514.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.932 CPU sec, 27.900 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 668863, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 393, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1115)
[0000][PE] mean and std.dev: (337.42, 188.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 566, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (561.99, 150.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (114, 445, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4959)
[0000][PE] mean and std.dev: (931.03, 1107.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 505, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (586.17, 461.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.316 CPU sec, 28.360 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 668385, 33, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 462, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1446)
[0000][PE] mean and std.dev: (402.19, 234.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 580, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1044)
[0000][PE] mean and std.dev: (579.65, 150.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 963, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1359.50, 1257.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7642)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.736 CPU sec, 28.243 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668590, 42, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 363, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1302)
[0000][PE] mean and std.dev: (338.15, 203.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1049)
[0000][PE] mean and std.dev: (582.24, 151.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 667, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1122.03, 1212.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1016, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1372.31, 1321.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.816 CPU sec, 28.006 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 668975, 21, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 446, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1319)
[0000][PE] mean and std.dev: (429.04, 243.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.02, 151.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (564, 1183, 3410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9102)
[0000][PE] mean and std.dev: (1816.86, 1729.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11948)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.924 CPU sec, 28.680 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 668141, 33, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 453, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1061)
[0000][PE] mean and std.dev: (409.69, 201.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (574.93, 151.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 1200, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5498)
[0000][PE] mean and std.dev: (1212.38, 994.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7193)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 684, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9056)
[0000][PE] mean and std.dev: (1703.85, 2036.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.636 CPU sec, 27.895 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 668545, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 367, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (343.69, 198.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.38, 151.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 941, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1208.58, 1114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 2212, 4188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10550)
[0000][PE] mean and std.dev: (2547.77, 2254.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.132 CPU sec, 28.155 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 667965, 24, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 465, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1203)
[0000][PE] mean and std.dev: (442.65, 224.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.81, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 371, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2401)
[0000][PE] mean and std.dev: (414.05, 366.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (454, 1075, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (968.89, 610.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.760 CPU sec, 28.267 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 669100, 41, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 368, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1267)
[0000][PE] mean and std.dev: (397.07, 265.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 564, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1025)
[0000][PE] mean and std.dev: (559.74, 150.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 755, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (1206.70, 1361.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6980)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 569, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (625.30, 443.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.052 CPU sec, 28.359 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 668073, 33, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 395, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1524)
[0000][PE] mean and std.dev: (418.94, 292.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 575, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1035)
[0000][PE] mean and std.dev: (572.73, 149.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (255, 742, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1077.39, 1113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 686.272 CPU sec, 29.006 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 667960, 34, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 395, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (359.42, 202.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1049)
[0000][PE] mean and std.dev: (582.20, 151.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 656, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (813.50, 954.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.200 CPU sec, 27.863 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 668154, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 475, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1247)
[0000][PE] mean and std.dev: (446.97, 235.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.44, 151.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 1238, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5916)
[0000][PE] mean and std.dev: (1321.35, 1266.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1192, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1333.36, 853.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.500 CPU sec, 28.034 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 668628, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 410, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1094)
[0000][PE] mean and std.dev: (396.42, 178.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (574.72, 150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 921, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (1310.62, 1412.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7186)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.848 CPU sec, 28.015 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 668161, 35, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 407, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (401.17, 213.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (570.08, 150.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 806, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5796)
[0000][PE] mean and std.dev: (1184.61, 1355.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 662, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (583.38, 327.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.792 CPU sec, 28.155 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 668248, 38, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 365, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (359.95, 190.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.45, 150.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (428, 876, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1369.11, 1339.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7268)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 684.644 CPU sec, 28.983 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 668998, 28, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 398, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (354.55, 157.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.27, 150.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 878, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1136.89, 1042.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.948 CPU sec, 28.081 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 669002, 41, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 443, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1214)
[0000][PE] mean and std.dev: (393.59, 179.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.10, 150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (286, 721, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1162.71, 1271.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 968, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1231.38, 1044.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.216 CPU sec, 28.151 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 667855, 36, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 392, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1306)
[0000][PE] mean and std.dev: (372.72, 229.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (496, 588, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1060)
[0000][PE] mean and std.dev: (588.38, 152.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 853, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6995)
[0000][PE] mean and std.dev: (1343.50, 1316.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9251)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1427, 4491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11673)
[0000][PE] mean and std.dev: (2362.33, 2164.16)
[0000][PE] low and high boundaries for proper pairs: (1, 15264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.976 CPU sec, 28.314 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 669190, 31, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 417, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (407.44, 211.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (493, 584, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1057)
[0000][PE] mean and std.dev: (584.88, 152.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 1192, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4482)
[0000][PE] mean and std.dev: (1081.53, 750.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5840)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 1017, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (1001.58, 396.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.832 CPU sec, 27.693 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 668128, 29, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 437, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (399.67, 183.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1050)
[0000][PE] mean and std.dev: (580.87, 152.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 1236, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (1399.52, 1214.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7783)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 573, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (647.33, 344.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.628 CPU sec, 28.845 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 668813, 29, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 447, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1182)
[0000][PE] mean and std.dev: (402.22, 179.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.38, 152.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 859, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5136)
[0000][PE] mean and std.dev: (950.85, 846.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6764)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.348 CPU sec, 27.769 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 668137, 31, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 411, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1365)
[0000][PE] mean and std.dev: (421.03, 228.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.44, 151.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (362, 973, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1110.79, 1014.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1113, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1419.75, 1429.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.468 CPU sec, 28.129 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 668818, 27, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 428, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (420.53, 236.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.42, 151.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 937, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1426.96, 1671.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8113)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 684.652 CPU sec, 28.555 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 669075, 23, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 429, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1323)
[0000][PE] mean and std.dev: (383.41, 213.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1040)
[0000][PE] mean and std.dev: (573.05, 151.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (531, 1079, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1286.00, 983.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6451)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1476, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1792.64, 1163.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.148 CPU sec, 28.513 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 669106, 33, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 401, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (372.97, 192.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1035)
[0000][PE] mean and std.dev: (567.38, 151.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (373, 654, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1124.81, 1225.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.696 CPU sec, 28.032 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 668448, 35, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 425, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1100)
[0000][PE] mean and std.dev: (391.96, 165.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1022)
[0000][PE] mean and std.dev: (561.53, 149.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 598, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (726.52, 677.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.640 CPU sec, 28.743 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 669106, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 420, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1370)
[0000][PE] mean and std.dev: (356.36, 222.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1021)
[0000][PE] mean and std.dev: (560.73, 149.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (406, 901, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1284.74, 1005.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7898)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1315, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (999.29, 549.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.676 CPU sec, 28.055 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 668623, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 351, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1352)
[0000][PE] mean and std.dev: (340.34, 200.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.37, 150.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 954, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1062.84, 918.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1549, 3293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8357)
[0000][PE] mean and std.dev: (1482.10, 1214.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.480 CPU sec, 28.340 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 668732, 36, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 483, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (431.20, 239.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1034)
[0000][PE] mean and std.dev: (569.04, 150.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 533, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1095.23, 1214.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6892)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.224 CPU sec, 28.299 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 667032, 24, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 422, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1070)
[0000][PE] mean and std.dev: (396.48, 199.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (496, 587, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 1057)
[0000][PE] mean and std.dev: (587.98, 152.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (122, 546, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7559)
[0000][PE] mean and std.dev: (1338.25, 1435.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10038)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.928 CPU sec, 28.294 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 668435, 36, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 432, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1409)
[0000][PE] mean and std.dev: (417.04, 261.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 1053)
[0000][PE] mean and std.dev: (583.83, 152.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 913, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5633)
[0000][PE] mean and std.dev: (1197.86, 1173.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.168 CPU sec, 29.067 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669507, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 345, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (340.00, 178.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1040)
[0000][PE] mean and std.dev: (570.18, 152.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1457, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1640.37, 1498.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8962)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 686.852 CPU sec, 28.834 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 669690, 28, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 405, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (407.07, 238.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (555.66, 150.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 562, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4694)
[0000][PE] mean and std.dev: (990.63, 996.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 487, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8006)
[0000][PE] mean and std.dev: (1638.92, 2106.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.064 CPU sec, 27.754 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 670068, 39, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 380, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (392.51, 220.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1028)
[0000][PE] mean and std.dev: (565.32, 150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 694, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7087)
[0000][PE] mean and std.dev: (1503.08, 1688.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9365)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 1122, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (913.00, 449.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.968 CPU sec, 28.173 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 670259, 33, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 443, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1264)
[0000][PE] mean and std.dev: (394.74, 219.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (574.48, 150.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (554, 1222, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (1435.42, 1142.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1467, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10696)
[0000][PE] mean and std.dev: (2363.67, 2040.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.416 CPU sec, 27.686 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 669899, 27, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 445, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (391.42, 169.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1032)
[0000][PE] mean and std.dev: (569.80, 150.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (409, 879, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1008.56, 857.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.808 CPU sec, 28.281 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 670152, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 487, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (457.86, 211.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.02, 150.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (274, 539, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4972)
[0000][PE] mean and std.dev: (929.40, 1110.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1940, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1523.73, 837.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.420 CPU sec, 27.583 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 669954, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 451, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1197)
[0000][PE] mean and std.dev: (413.23, 222.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.86, 150.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 1095, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1036.06, 1044.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7513)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1364, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1480.50, 496.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 658.184 CPU sec, 27.583 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 669451, 43, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 389, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (367.22, 210.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (555.87, 150.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (287, 776, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6113)
[0000][PE] mean and std.dev: (1376.76, 1481.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 987, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4434)
[0000][PE] mean and std.dev: (1206.00, 930.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.008 CPU sec, 27.915 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 668018, 30, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 380, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (374.74, 190.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (462, 556, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1017)
[0000][PE] mean and std.dev: (551.06, 150.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 944, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (989.04, 944.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6360)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 530, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1006.00, 797.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.592 CPU sec, 28.464 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 670544, 37, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 371, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (391.37, 232.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (575.76, 150.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 798, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7433)
[0000][PE] mean and std.dev: (1336.46, 1558.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9847)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1362, 4300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10828)
[0000][PE] mean and std.dev: (2484.18, 2351.44)
[0000][PE] low and high boundaries for proper pairs: (1, 14092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.244 CPU sec, 28.151 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 670055, 27, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 402, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1182)
[0000][PE] mean and std.dev: (378.44, 206.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (573.04, 151.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (256, 1411, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1380.85, 1367.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8116)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 650.336 CPU sec, 27.318 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 670037, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 427, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (396.38, 190.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1031)
[0000][PE] mean and std.dev: (568.59, 150.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 1399, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5835)
[0000][PE] mean and std.dev: (1546.58, 1444.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1098, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5781)
[0000][PE] mean and std.dev: (1205.00, 870.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 658.596 CPU sec, 27.560 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 670341, 29, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 362, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (359.12, 197.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (564.91, 150.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 630, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (766.12, 867.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.884 CPU sec, 27.619 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 670315, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 418, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (390.73, 200.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1024)
[0000][PE] mean and std.dev: (558.37, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 726, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (1287.66, 1459.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7779)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.816 CPU sec, 27.901 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 668898, 32, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 427, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1041)
[0000][PE] mean and std.dev: (410.19, 173.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (464, 558, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1022)
[0000][PE] mean and std.dev: (553.77, 150.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (180, 772, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6123)
[0000][PE] mean and std.dev: (1010.97, 1039.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8104)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (396, 734, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1216.00, 1132.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.300 CPU sec, 28.758 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 670079, 36, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 398, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (349.90, 193.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (561.24, 150.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 1279, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1210.17, 905.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.480 CPU sec, 28.028 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 671249, 38, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 407, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (402.78, 227.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1047)
[0000][PE] mean and std.dev: (580.18, 151.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 878, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6215)
[0000][PE] mean and std.dev: (1352.97, 1460.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8218)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.976 CPU sec, 27.486 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 670776, 29, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 416, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (382.01, 188.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (575.01, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 1267, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (1155.46, 1002.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.240 CPU sec, 27.753 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 671326, 40, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 492, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1116)
[0000][PE] mean and std.dev: (482.35, 212.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.45, 150.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 663, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1006.92, 1292.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7723)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1188, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (1872.40, 1552.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.604 CPU sec, 27.608 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 671117, 23, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 396, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (374.26, 218.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (566.87, 150.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (629, 1827, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1558.55, 1152.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 870, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1069.19, 793.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.204 CPU sec, 28.311 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 670967, 33, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 390, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (372.74, 215.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (560.08, 150.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 1091, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (1041.47, 933.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 910, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (988.36, 595.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 648.908 CPU sec, 27.139 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 670361, 38, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 429, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (368.97, 213.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (465, 558, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1014)
[0000][PE] mean and std.dev: (553.25, 149.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 523, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (753.29, 786.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 963, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1153.11, 637.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.124 CPU sec, 27.762 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 670942, 34, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 421, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (407.19, 262.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.23, 151.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (267, 1059, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7050)
[0000][PE] mean and std.dev: (1407.59, 1363.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9311)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.968 CPU sec, 27.679 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 671136, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 371, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (379.97, 217.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1049)
[0000][PE] mean and std.dev: (579.44, 152.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (232, 878, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (919.84, 802.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1036, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (1091.82, 616.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.740 CPU sec, 28.207 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 670857, 31, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 439, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1143)
[0000][PE] mean and std.dev: (414.75, 226.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1044)
[0000][PE] mean and std.dev: (574.56, 152.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (125, 1056, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5957)
[0000][PE] mean and std.dev: (1323.87, 1353.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.400 CPU sec, 28.404 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 671043, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 439, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (418.30, 198.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.26, 151.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (416, 755, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1158.22, 975.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1218, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1411.18, 1079.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.964 CPU sec, 27.525 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 670626, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 435, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1205)
[0000][PE] mean and std.dev: (412.22, 192.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (564.98, 151.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (483, 1223, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5694)
[0000][PE] mean and std.dev: (1434.68, 1201.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7431)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1107, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7459)
[0000][PE] mean and std.dev: (1646.75, 1645.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 693.220 CPU sec, 29.102 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 669850, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 438, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (417.83, 182.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1040)
[0000][PE] mean and std.dev: (575.41, 150.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 703, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6663)
[0000][PE] mean and std.dev: (1376.39, 1520.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8785)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 1018, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (824.90, 577.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.416 CPU sec, 27.745 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 670312, 28, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 445, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1207)
[0000][PE] mean and std.dev: (417.29, 215.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1035)
[0000][PE] mean and std.dev: (572.70, 150.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (385, 1356, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1547.04, 1417.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1591, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1476.60, 844.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.552 CPU sec, 27.707 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 669509, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 433, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1219)
[0000][PE] mean and std.dev: (396.01, 201.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.49, 150.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 571, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (832.03, 791.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.868 CPU sec, 28.271 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 669678, 37, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 389, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (390.70, 211.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (564.93, 150.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 645, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6258)
[0000][PE] mean and std.dev: (1176.50, 1162.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8270)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.900 CPU sec, 27.585 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 668705, 35, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 408, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (393.50, 249.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1023)
[0000][PE] mean and std.dev: (557.74, 150.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (287, 663, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6317)
[0000][PE] mean and std.dev: (1202.24, 1248.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8327)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.168 CPU sec, 27.995 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 670496, 30, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 414, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1091)
[0000][PE] mean and std.dev: (394.33, 185.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1023)
[0000][PE] mean and std.dev: (557.87, 150.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1161, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1200.15, 1129.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.360 CPU sec, 27.757 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 668826, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 406, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (375.01, 193.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (463, 557, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1015)
[0000][PE] mean and std.dev: (551.55, 149.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 734, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1209.22, 1237.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (424, 724, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1261.00, 1229.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.140 CPU sec, 27.977 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 669275, 47, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 405, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (403.10, 224.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (463, 557, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1012)
[0000][PE] mean and std.dev: (551.22, 149.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1195)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (494, 1162, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4490)
[0000][PE] mean and std.dev: (1121.86, 876.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.268 CPU sec, 28.930 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669713, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 360, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1247)
[0000][PE] mean and std.dev: (400.41, 237.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (461, 555, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1013)
[0000][PE] mean and std.dev: (549.75, 148.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 722, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1114.24, 1193.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1523, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1713.91, 1047.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.596 CPU sec, 28.032 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 669328, 36, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 429, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (413.78, 229.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 577, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 1038)
[0000][PE] mean and std.dev: (575.95, 150.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 863, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (908.03, 816.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6711)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1364, 3517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8667)
[0000][PE] mean and std.dev: (1836.46, 1188.47)
[0000][PE] low and high boundaries for proper pairs: (1, 11242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.880 CPU sec, 27.836 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 670267, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 414, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (403.96, 220.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.45, 150.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 757, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1088.91, 1012.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6902)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1183, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1225.93, 921.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.696 CPU sec, 27.560 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 669041, 33, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 466, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (423.29, 219.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.12, 150.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 531, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5517)
[0000][PE] mean and std.dev: (1125.15, 1251.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 656, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (920.10, 618.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.624 CPU sec, 27.957 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 669357, 44, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 408, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (393.17, 194.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.93, 150.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 734, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7563)
[0000][PE] mean and std.dev: (1293.40, 1349.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10001)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.356 CPU sec, 28.431 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 670037, 30, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 474, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (424.60, 202.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 560, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1020)
[0000][PE] mean and std.dev: (556.56, 150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 637, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4894)
[0000][PE] mean and std.dev: (1074.61, 1098.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.468 CPU sec, 27.591 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 668855, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 392, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1113)
[0000][PE] mean and std.dev: (396.21, 204.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (463, 557, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1018)
[0000][PE] mean and std.dev: (552.29, 150.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (361, 1568, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7531)
[0000][PE] mean and std.dev: (1659.81, 1640.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9921)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.316 CPU sec, 28.011 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 669885, 30, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 412, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1273)
[0000][PE] mean and std.dev: (396.80, 235.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.07, 150.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 1058, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7159)
[0000][PE] mean and std.dev: (1370.36, 1512.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9490)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 962, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2459)
[0000][PE] mean and std.dev: (856.00, 592.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.880 CPU sec, 28.327 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 670324, 41, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 482, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (442.70, 219.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1052)
[0000][PE] mean and std.dev: (580.30, 152.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 755, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1025.15, 1002.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 594, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (845.71, 614.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.660 CPU sec, 27.787 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 670572, 27, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 447, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (397.79, 208.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (575.69, 151.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (538, 1359, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1570.84, 1533.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9698)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.276 CPU sec, 28.217 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 670354, 35, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 444, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (406.47, 264.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.82, 151.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (344, 538, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1165.74, 1183.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 2007, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (1827.43, 1596.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.848 CPU sec, 27.592 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 670008, 52, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 394, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (379.32, 209.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.89, 151.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 886, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7578)
[0000][PE] mean and std.dev: (1502.20, 1718.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10013)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (458, 924, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5153)
[0000][PE] mean and std.dev: (1314.31, 1274.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.844 CPU sec, 27.689 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 669979, 46, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 426, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1066)
[0000][PE] mean and std.dev: (393.97, 192.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.39, 150.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 1014, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (1104.88, 1036.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.564 CPU sec, 27.774 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 670036, 34, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 349, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (345.07, 192.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (465, 559, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1020)
[0000][PE] mean and std.dev: (554.40, 150.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (390, 1010, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5886)
[0000][PE] mean and std.dev: (1468.48, 1390.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7718)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 967, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1015.11, 738.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.560 CPU sec, 28.040 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670454, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 471, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1241)
[0000][PE] mean and std.dev: (436.61, 227.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (566.40, 150.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 1206, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9379)
[0000][PE] mean and std.dev: (1731.83, 1746.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12411)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1296, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1440.64, 1035.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.236 CPU sec, 28.580 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670496, 27, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 401, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (394.04, 166.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.08, 151.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 863, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1182.20, 1381.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7648)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 704, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (660.92, 425.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 652.228 CPU sec, 27.325 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 670187, 40, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 486, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (460.93, 222.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1041)
[0000][PE] mean and std.dev: (573.68, 151.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (336, 1081, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6267)
[0000][PE] mean and std.dev: (1288.95, 1183.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8244)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 926, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (1091.77, 980.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 695.768 CPU sec, 29.243 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 669996, 32, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 444, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (436.70, 208.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (570.12, 151.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 817, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1001.29, 765.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.980 CPU sec, 28.271 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 669821, 27, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 441, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (424.73, 236.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (564.65, 150.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1320, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6637)
[0000][PE] mean and std.dev: (1418.96, 1406.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8712)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.924 CPU sec, 28.426 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 670378, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 465, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1056)
[0000][PE] mean and std.dev: (439.02, 192.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1043)
[0000][PE] mean and std.dev: (573.56, 152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 1150, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6537)
[0000][PE] mean and std.dev: (1571.18, 1475.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8640)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 554, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1368.23, 1470.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 684.252 CPU sec, 28.869 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 669988, 29, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 370, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1297)
[0000][PE] mean and std.dev: (403.93, 220.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1053)
[0000][PE] mean and std.dev: (581.30, 152.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1114, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1311.04, 1227.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.704 CPU sec, 27.705 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 670451, 26, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 458, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (447.97, 183.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1046)
[0000][PE] mean and std.dev: (576.55, 152.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (464, 904, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1023.58, 820.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 803, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (879.27, 670.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.804 CPU sec, 27.873 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 669816, 33, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 435, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (423.18, 214.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1040)
[0000][PE] mean and std.dev: (572.65, 151.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 829, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8153)
[0000][PE] mean and std.dev: (1513.45, 1560.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10738)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.428 CPU sec, 27.866 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 670145, 29, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 495, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (454.34, 251.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1039)
[0000][PE] mean and std.dev: (568.88, 152.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (363, 1121, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5424)
[0000][PE] mean and std.dev: (1228.44, 1108.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7111)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.216 CPU sec, 27.687 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 670340, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 469, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (435.84, 229.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1033)
[0000][PE] mean and std.dev: (563.25, 152.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (402, 925, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1245.83, 1196.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.228 CPU sec, 28.602 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 670363, 41, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 390, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (394.35, 220.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1027)
[0000][PE] mean and std.dev: (559.07, 152.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1091, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5603)
[0000][PE] mean and std.dev: (1503.29, 1449.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 551, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (899.78, 845.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.712 CPU sec, 27.474 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 669898, 28, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 396, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1082)
[0000][PE] mean and std.dev: (410.39, 172.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1031)
[0000][PE] mean and std.dev: (563.37, 152.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 919, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1567.32, 1780.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9102)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.432 CPU sec, 28.354 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670051, 30, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 453, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 967)
[0000][PE] mean and std.dev: (453.29, 179.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1057)
[0000][PE] mean and std.dev: (582.72, 153.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 656, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1057.17, 1094.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1544, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1362.56, 884.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.264 CPU sec, 27.687 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 670384, 38, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 436, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1329)
[0000][PE] mean and std.dev: (414.98, 258.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1050)
[0000][PE] mean and std.dev: (578.48, 153.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (197, 971, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6677)
[0000][PE] mean and std.dev: (1482.16, 1663.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8837)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.732 CPU sec, 27.765 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 669795, 40, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 475, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1455)
[0000][PE] mean and std.dev: (452.86, 236.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 575, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1046)
[0000][PE] mean and std.dev: (574.12, 153.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 540, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (878.08, 905.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1426, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3527)
[0000][PE] mean and std.dev: (1222.20, 576.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.592 CPU sec, 27.682 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 671303, 38, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 408, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (413.89, 201.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.09, 153.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (443, 832, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1095.74, 985.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.892 CPU sec, 28.170 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 670404, 28, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 398, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (373.30, 209.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.81, 152.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 905, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7546)
[0000][PE] mean and std.dev: (1534.11, 1744.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9910)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 698, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (735.75, 506.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.004 CPU sec, 27.517 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670498, 33, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 483, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1417)
[0000][PE] mean and std.dev: (429.57, 230.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1031)
[0000][PE] mean and std.dev: (560.79, 152.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 476, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1016.50, 1307.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.824 CPU sec, 28.159 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 669695, 46, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 463, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1260)
[0000][PE] mean and std.dev: (432.38, 218.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 560, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1024)
[0000][PE] mean and std.dev: (556.20, 151.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (280, 1157, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6919)
[0000][PE] mean and std.dev: (1384.95, 1346.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9132)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1642, 5272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14684)
[0000][PE] mean and std.dev: (2705.77, 2497.50)
[0000][PE] low and high boundaries for proper pairs: (1, 19390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.988 CPU sec, 28.373 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 670307, 25, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 418, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (417.44, 201.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 584, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1058)
[0000][PE] mean and std.dev: (584.03, 153.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1247)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 550, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6841)
[0000][PE] mean and std.dev: (1236.84, 1263.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9057)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.644 CPU sec, 28.116 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 671306, 30, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 464, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (382.66, 193.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1062)
[0000][PE] mean and std.dev: (585.05, 154.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (499, 1200, 3287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8863)
[0000][PE] mean and std.dev: (1910.50, 1805.50)
[0000][PE] low and high boundaries for proper pairs: (1, 11651)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 753, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (1054.80, 1118.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.732 CPU sec, 28.212 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 671073, 29, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 478, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (445.78, 205.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 581, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1055)
[0000][PE] mean and std.dev: (580.66, 153.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (267, 711, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1101.64, 1162.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.548 CPU sec, 27.595 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 670984, 35, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 478, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1248)
[0000][PE] mean and std.dev: (404.58, 203.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (577.07, 153.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 753, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1099.03, 1125.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7803)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 1016, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (902.20, 661.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.240 CPU sec, 27.831 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 671661, 41, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 413, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (388.36, 212.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1045)
[0000][PE] mean and std.dev: (572.76, 153.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 824, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7382)
[0000][PE] mean and std.dev: (1537.35, 1760.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9765)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1403, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4819)
[0000][PE] mean and std.dev: (1466.00, 798.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.936 CPU sec, 27.959 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 670731, 34, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 413, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (416.45, 237.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1036)
[0000][PE] mean and std.dev: (566.17, 152.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 660, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1191.22, 1391.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7237)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 1027, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (1168.91, 892.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.452 CPU sec, 27.794 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 670930, 46, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 397, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (399.19, 228.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1029)
[0000][PE] mean and std.dev: (561.01, 151.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 1186, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1124.95, 971.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.720 CPU sec, 28.319 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 670811, 47, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 432, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1281)
[0000][PE] mean and std.dev: (416.52, 235.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.69, 152.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 1017, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6715)
[0000][PE] mean and std.dev: (1393.45, 1313.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8856)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1217, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1286.23, 1040.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.884 CPU sec, 27.807 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 670009, 35, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 451, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (412.18, 168.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (494, 586, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1064)
[0000][PE] mean and std.dev: (587.44, 155.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1254)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 1190, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1249.45, 1136.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6555)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 943, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1011.86, 904.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.932 CPU sec, 27.806 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 671381, 26, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 511, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (453.37, 221.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 583, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1063)
[0000][PE] mean and std.dev: (583.71, 155.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1254)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 636, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (706.48, 594.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 685.880 CPU sec, 28.700 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 670827, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 384, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1199)
[0000][PE] mean and std.dev: (396.18, 236.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 580, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1057)
[0000][PE] mean and std.dev: (580.12, 154.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1247)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 1177, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6070)
[0000][PE] mean and std.dev: (1189.26, 1095.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.532 CPU sec, 27.724 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 671660, 40, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 412, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 996)
[0000][PE] mean and std.dev: (374.49, 173.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1051)
[0000][PE] mean and std.dev: (576.57, 154.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (304, 1433, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9091)
[0000][PE] mean and std.dev: (1651.75, 1615.31)
[0000][PE] low and high boundaries for proper pairs: (1, 12020)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.296 CPU sec, 28.504 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 671146, 39, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 466, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1196)
[0000][PE] mean and std.dev: (428.56, 200.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1043)
[0000][PE] mean and std.dev: (570.43, 153.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (359, 1125, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5897)
[0000][PE] mean and std.dev: (1444.68, 1427.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7743)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 2034, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5696)
[0000][PE] mean and std.dev: (1812.80, 1506.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 693.496 CPU sec, 29.069 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 670426, 36, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 468, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (413.30, 211.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1036)
[0000][PE] mean and std.dev: (565.55, 152.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (413, 1024, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1228.31, 984.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7137)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.356 CPU sec, 27.946 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670217, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 371, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1368)
[0000][PE] mean and std.dev: (409.05, 263.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1027)
[0000][PE] mean and std.dev: (559.09, 152.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 570, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (731.12, 637.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 999, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6857)
[0000][PE] mean and std.dev: (1541.69, 1122.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.928 CPU sec, 27.929 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 670391, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 415, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1141)
[0000][PE] mean and std.dev: (407.46, 220.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 565, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.95, 150.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 629, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (793.19, 659.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.892 CPU sec, 28.299 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 669483, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 415, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (445.42, 239.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1054)
[0000][PE] mean and std.dev: (582.34, 153.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 676, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (907.22, 856.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1549, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1207.82, 651.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.716 CPU sec, 28.420 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 670201, 41, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 426, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 989)
[0000][PE] mean and std.dev: (386.68, 183.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1052)
[0000][PE] mean and std.dev: (577.81, 153.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 1275, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6066)
[0000][PE] mean and std.dev: (1447.54, 1415.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 658.472 CPU sec, 27.614 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 669740, 39, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 415, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (383.05, 192.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 575, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1046)
[0000][PE] mean and std.dev: (574.08, 153.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 844, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (996.41, 931.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.124 CPU sec, 27.791 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 670152, 28, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 443, 641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (441.83, 236.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (570.92, 152.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 837, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1176.93, 1254.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1548, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1228.27, 689.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.940 CPU sec, 27.978 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 669796, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 453, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1149)
[0000][PE] mean and std.dev: (422.91, 196.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1034)
[0000][PE] mean and std.dev: (563.86, 152.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 640, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (594.97, 534.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 887, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1324.87, 1444.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.476 CPU sec, 27.913 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 670213, 35, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 378, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (373.39, 190.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1028)
[0000][PE] mean and std.dev: (560.17, 152.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 435, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (865.03, 826.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1001, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1015.00, 675.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.224 CPU sec, 28.714 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 669251, 40, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 396, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1035)
[0000][PE] mean and std.dev: (401.52, 178.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 560, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1024)
[0000][PE] mean and std.dev: (555.91, 151.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (310, 914, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1062.47, 912.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.468 CPU sec, 28.091 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 670431, 33, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 411, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1301)
[0000][PE] mean and std.dev: (414.62, 233.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (575.96, 151.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 1316, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1264.26, 1136.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7281)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1047, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (1002.64, 894.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.788 CPU sec, 27.967 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669370, 43, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 421, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1207)
[0000][PE] mean and std.dev: (420.42, 223.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1051)
[0000][PE] mean and std.dev: (579.17, 153.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (391, 860, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1404.37, 1435.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 859, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (789.25, 519.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.424 CPU sec, 27.764 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 670414, 37, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 420, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (412.64, 191.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1047)
[0000][PE] mean and std.dev: (575.16, 152.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (134, 790, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1122.71, 1279.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7562)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1131, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1124.67, 792.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.164 CPU sec, 27.938 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670028, 36, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 426, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1214)
[0000][PE] mean and std.dev: (422.73, 201.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.47, 152.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (356, 1392, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1318.03, 1092.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 426, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (602.60, 475.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.708 CPU sec, 28.414 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 669743, 35, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 451, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (453.42, 209.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1036)
[0000][PE] mean and std.dev: (566.52, 152.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 591, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7312)
[0000][PE] mean and std.dev: (1466.11, 1716.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9679)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.680 CPU sec, 27.843 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 669615, 41, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 349, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1065)
[0000][PE] mean and std.dev: (348.83, 190.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1029)
[0000][PE] mean and std.dev: (561.15, 151.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 895, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1339.33, 1375.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1049, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1236.35, 869.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.072 CPU sec, 27.806 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 670385, 19, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 467, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (434.48, 177.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 561, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1025)
[0000][PE] mean and std.dev: (557.17, 151.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 508, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1041.95, 1184.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6242)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 958, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9289)
[0000][PE] mean and std.dev: (2100.25, 2549.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.008 CPU sec, 28.278 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 670380, 35, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 466, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1209)
[0000][PE] mean and std.dev: (410.92, 206.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1032)
[0000][PE] mean and std.dev: (564.27, 151.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 877, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1411.29, 1454.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 764, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (759.55, 486.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.128 CPU sec, 28.099 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 669823, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 491, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (444.88, 212.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (493, 585, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1063)
[0000][PE] mean and std.dev: (586.70, 154.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1253)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (223, 727, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1034.18, 959.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1057, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (1011.09, 498.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.528 CPU sec, 28.670 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670084, 32, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 425, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1216)
[0000][PE] mean and std.dev: (438.23, 224.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1060)
[0000][PE] mean and std.dev: (582.85, 154.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1250)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 583, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (991.00, 985.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6499)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 2090, 3913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10109)
[0000][PE] mean and std.dev: (2173.25, 1703.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.672 CPU sec, 27.558 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 670733, 25, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 413, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (366.39, 181.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 579, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1053)
[0000][PE] mean and std.dev: (578.85, 154.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1038, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1247.38, 970.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8056)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.296 CPU sec, 27.787 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 671080, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 484, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (439.73, 187.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1050)
[0000][PE] mean and std.dev: (575.63, 153.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (469, 1288, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7594)
[0000][PE] mean and std.dev: (1985.03, 1875.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9969)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.588 CPU sec, 27.886 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 669614, 34, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 413, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1205)
[0000][PE] mean and std.dev: (417.40, 243.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.33, 153.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 687, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1150.36, 1113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7480)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 966, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (1149.21, 719.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.836 CPU sec, 28.030 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 669962, 34, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 415, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (386.12, 187.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (564.27, 153.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (296, 648, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (980.91, 822.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 480, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2568)
[0000][PE] mean and std.dev: (642.14, 554.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.684 CPU sec, 28.507 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 669612, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 445, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1128)
[0000][PE] mean and std.dev: (406.59, 191.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1027)
[0000][PE] mean and std.dev: (558.75, 151.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (381, 1194, 3099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8535)
[0000][PE] mean and std.dev: (1469.83, 1555.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11253)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1005, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1423.70, 1533.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.880 CPU sec, 28.164 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 670767, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 494, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1286)
[0000][PE] mean and std.dev: (480.49, 213.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.52, 152.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (370, 616, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1001.77, 971.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 950, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (998.50, 548.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.952 CPU sec, 27.908 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 669546, 26, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 525, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1149)
[0000][PE] mean and std.dev: (471.16, 194.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1059)
[0000][PE] mean and std.dev: (584.92, 154.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 692, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1163.60, 1263.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8157)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 721, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (924.22, 930.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.748 CPU sec, 27.868 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 669878, 25, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 439, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1133)
[0000][PE] mean and std.dev: (410.49, 175.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 580, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1057)
[0000][PE] mean and std.dev: (580.28, 154.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1247)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 1210, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1442.32, 1213.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8526)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 701.704 CPU sec, 29.379 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 669885, 27, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 438, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1390)
[0000][PE] mean and std.dev: (452.65, 222.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (576.77, 153.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (791, 1609, 3224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (1970.37, 1708.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10523)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1363, 1676, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1655.82, 1012.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 691.792 CPU sec, 29.245 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670073, 26, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 419, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1354)
[0000][PE] mean and std.dev: (438.00, 266.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1045)
[0000][PE] mean and std.dev: (573.21, 153.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 1666, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6846)
[0000][PE] mean and std.dev: (1424.84, 1192.54)
[0000][PE] low and high boundaries for proper pairs: (1, 9047)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 517, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (801.36, 697.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.284 CPU sec, 28.228 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 670756, 34, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 416, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (392.89, 179.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1037)
[0000][PE] mean and std.dev: (566.77, 152.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (202, 553, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (851.47, 819.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.596 CPU sec, 28.127 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 669853, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 305, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (327.17, 194.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1029)
[0000][PE] mean and std.dev: (561.46, 151.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (355, 1121, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5854)
[0000][PE] mean and std.dev: (1314.71, 1246.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.508 CPU sec, 27.873 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 671188, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 386, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1209)
[0000][PE] mean and std.dev: (368.02, 207.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 573, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1040)
[0000][PE] mean and std.dev: (573.34, 150.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 1032, 3255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8921)
[0000][PE] mean and std.dev: (1849.83, 1895.51)
[0000][PE] low and high boundaries for proper pairs: (1, 11754)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.884 CPU sec, 27.937 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 672478, 37, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 465, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1132)
[0000][PE] mean and std.dev: (438.92, 196.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1040)
[0000][PE] mean and std.dev: (578.66, 150.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (138, 421, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (884.92, 1016.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5986)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 570, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (694.60, 460.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.416 CPU sec, 27.935 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 671279, 30, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 421, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (388.18, 187.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (574.28, 149.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 682, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (724.73, 777.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 652.024 CPU sec, 27.410 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 671059, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 443, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (412.82, 195.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1032)
[0000][PE] mean and std.dev: (570.80, 149.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (409, 988, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1262.33, 1099.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (396, 475, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (584.78, 380.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.960 CPU sec, 27.599 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 671487, 26, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 443, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (440.36, 183.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1026)
[0000][PE] mean and std.dev: (566.76, 149.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1500, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7214)
[0000][PE] mean and std.dev: (1441.00, 1208.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9475)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 950, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (1221.17, 932.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.196 CPU sec, 27.532 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (112, 672084, 27, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 443, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (397.98, 206.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1024)
[0000][PE] mean and std.dev: (561.67, 149.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (165, 658, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1041.12, 1021.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8089)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.864 CPU sec, 27.430 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 671697, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 420, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (395.66, 182.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1017)
[0000][PE] mean and std.dev: (557.22, 148.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 957, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (1051.59, 910.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1249, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (1264.00, 601.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.784 CPU sec, 28.282 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 670684, 35, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 399, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1248)
[0000][PE] mean and std.dev: (380.39, 213.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1030)
[0000][PE] mean and std.dev: (568.09, 149.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (314, 986, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1173.12, 918.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 865, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1265.27, 1197.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 658.516 CPU sec, 27.775 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 671431, 41, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 409, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (408.55, 189.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 1043)
[0000][PE] mean and std.dev: (579.61, 150.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 374, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1087.66, 1428.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7976)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (378, 995, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (875.67, 667.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.600 CPU sec, 27.408 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 671819, 43, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 452, 613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1227)
[0000][PE] mean and std.dev: (459.38, 230.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (575.31, 150.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 682, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (920.25, 915.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 460, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (701.25, 681.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.212 CPU sec, 27.421 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 671044, 40, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 428, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1101)
[0000][PE] mean and std.dev: (405.43, 192.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.94, 150.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (363, 898, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1198.67, 1154.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 742, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (978.12, 811.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.640 CPU sec, 27.537 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 672000, 24, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 456, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (428.93, 244.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1030)
[0000][PE] mean and std.dev: (567.82, 150.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (230, 843, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1280.09, 1526.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7384)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.160 CPU sec, 28.085 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 671700, 40, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 386, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (393.47, 177.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (562.41, 149.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (425, 911, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1135.19, 1065.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7033)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 988, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (916.91, 729.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 649.484 CPU sec, 27.329 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 671073, 30, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 394, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (375.34, 205.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 560, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1020)
[0000][PE] mean and std.dev: (558.11, 149.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 783, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (1061.76, 982.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 457, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (673.85, 510.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.080 CPU sec, 27.852 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670658, 49, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 398, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (396.53, 232.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.56, 149.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 692, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6368)
[0000][PE] mean and std.dev: (1386.71, 1441.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8426)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 705, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (564.00, 206.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.808 CPU sec, 28.131 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (114, 672214, 40, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 437, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (425.09, 170.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 583, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1056)
[0000][PE] mean and std.dev: (585.28, 151.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 444, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (699.84, 794.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 783, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (1399.25, 1733.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.664 CPU sec, 27.628 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 672321, 33, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 458, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (427.54, 197.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 579, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1047)
[0000][PE] mean and std.dev: (581.01, 151.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 385, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (906.50, 1123.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 615, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (625.18, 293.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.024 CPU sec, 28.302 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 673105, 27, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 462, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (447.28, 203.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 576, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (577.07, 151.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 600, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (995.67, 1295.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7638)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1018, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1251.58, 962.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 647.952 CPU sec, 27.326 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 673096, 30, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 460, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1317)
[0000][PE] mean and std.dev: (409.26, 204.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1037)
[0000][PE] mean and std.dev: (573.11, 150.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (109, 752, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1185.14, 1294.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6861)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 1155, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (940.42, 678.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.140 CPU sec, 27.499 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 672998, 28, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 401, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (384.70, 226.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.60, 149.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 1076, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5801)
[0000][PE] mean and std.dev: (1227.07, 1157.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 951, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (983.00, 660.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 652.576 CPU sec, 27.390 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 672388, 38, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 441, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 991)
[0000][PE] mean and std.dev: (410.55, 189.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1022)
[0000][PE] mean and std.dev: (562.39, 149.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (170, 692, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7586)
[0000][PE] mean and std.dev: (1431.08, 1670.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10058)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (389, 1185, 3125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8597)
[0000][PE] mean and std.dev: (1957.12, 2172.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.064 CPU sec, 27.419 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 671139, 35, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 355, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1161)
[0000][PE] mean and std.dev: (343.84, 187.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 558, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1012)
[0000][PE] mean and std.dev: (555.08, 147.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1194)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 666, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (915.03, 735.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.232 CPU sec, 27.937 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 672006, 29, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 429, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (428.38, 214.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 582, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1056)
[0000][PE] mean and std.dev: (584.84, 152.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (442, 1160, 3342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9142)
[0000][PE] mean and std.dev: (1645.71, 1369.78)
[0000][PE] low and high boundaries for proper pairs: (1, 12042)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1029, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1328.67, 1143.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.908 CPU sec, 27.953 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 672587, 33, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 466, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (451.15, 204.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 581, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1054)
[0000][PE] mean and std.dev: (582.97, 152.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 981, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1313.21, 1115.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6144)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.972 CPU sec, 28.248 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 671926, 31, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 434, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (422.20, 193.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 578, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1048)
[0000][PE] mean and std.dev: (579.01, 151.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 1081, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6405)
[0000][PE] mean and std.dev: (1780.19, 1769.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8859)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1166, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5847)
[0000][PE] mean and std.dev: (1804.07, 1232.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.392 CPU sec, 27.657 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 672837, 35, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 376, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1071)
[0000][PE] mean and std.dev: (365.26, 181.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 575, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (575.82, 151.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 1129, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1223.00, 1112.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1233, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7376)
[0000][PE] mean and std.dev: (1760.38, 1433.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.692 CPU sec, 27.740 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 672623, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 396, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (374.10, 176.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (570.67, 151.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1285, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1306.03, 1026.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7514)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1031, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1021.11, 394.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 691.576 CPU sec, 28.995 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 671919, 47, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 485, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1030)
[0000][PE] mean and std.dev: (458.58, 185.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.97, 150.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (365, 1175, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5924)
[0000][PE] mean and std.dev: (1329.07, 1226.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7777)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1192, 3137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7909)
[0000][PE] mean and std.dev: (1952.54, 1823.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.404 CPU sec, 27.857 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 671246, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 409, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (407.43, 211.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 562, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1022)
[0000][PE] mean and std.dev: (559.55, 149.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (316, 1162, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5872)
[0000][PE] mean and std.dev: (1427.03, 1449.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.816 CPU sec, 27.524 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 671664, 22, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 449, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (404.74, 190.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 570, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1032)
[0000][PE] mean and std.dev: (570.06, 149.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 668, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (842.32, 594.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (624, 1333, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6249)
[0000][PE] mean and std.dev: (1620.85, 1363.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.952 CPU sec, 27.890 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 671168, 49, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 447, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1083)
[0000][PE] mean and std.dev: (424.82, 220.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.85, 150.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (142, 511, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (569.55, 573.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1050, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1677.75, 1469.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.876 CPU sec, 27.592 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 671582, 41, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 464, 598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (442.05, 215.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (574.31, 150.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 713, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1184.03, 1223.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.148 CPU sec, 27.510 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 671143, 29, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 440, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (420.54, 223.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (571.16, 150.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 540, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (916.22, 998.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6552)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 979, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (829.07, 527.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.844 CPU sec, 28.265 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 671178, 38, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 449, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 972)
[0000][PE] mean and std.dev: (394.43, 175.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.76, 150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 735, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1069.94, 1174.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 651.904 CPU sec, 27.486 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 671502, 50, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 404, 618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1376)
[0000][PE] mean and std.dev: (393.41, 215.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (560.98, 149.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (260, 797, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1153.55, 1206.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.464 CPU sec, 27.674 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 671450, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 443, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (402.52, 197.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 559, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (556.73, 149.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 785, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1185.77, 1200.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7929)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 820, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (645.67, 595.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.820 CPU sec, 27.758 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 671633, 33, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 430, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (401.01, 193.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1020)
[0000][PE] mean and std.dev: (562.43, 147.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 511, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (840.06, 914.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1476, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (1514.50, 628.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.516 CPU sec, 27.886 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 671346, 42, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 456, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (443.63, 183.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 578, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1040)
[0000][PE] mean and std.dev: (578.88, 149.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (478, 1182, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1253.00, 1110.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6666)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1410, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1283.08, 884.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.424 CPU sec, 28.029 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 671593, 26, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 392, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1039)
[0000][PE] mean and std.dev: (372.86, 192.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (574.13, 149.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (296, 1067, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7991)
[0000][PE] mean and std.dev: (1817.19, 2036.69)
[0000][PE] low and high boundaries for proper pairs: (1, 10556)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 649.816 CPU sec, 27.327 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 671900, 36, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 437, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (415.50, 215.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1033)
[0000][PE] mean and std.dev: (571.11, 149.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 734, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (940.74, 896.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5915)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.808 CPU sec, 27.501 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 671307, 27, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 389, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (380.60, 212.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (567.31, 149.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 1077, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5645)
[0000][PE] mean and std.dev: (1250.08, 1019.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7409)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.856 CPU sec, 27.602 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 671371, 42, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 402, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (399.68, 187.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (560.95, 149.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 750, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1085.22, 1007.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 540, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2215)
[0000][PE] mean and std.dev: (644.58, 360.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.136 CPU sec, 27.699 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 671940, 33, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 409, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (403.27, 216.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 559, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1014)
[0000][PE] mean and std.dev: (556.96, 148.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1196)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 993, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7715)
[0000][PE] mean and std.dev: (1372.32, 1583.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 795, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1420.94, 1384.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.572 CPU sec, 28.237 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 670800, 34, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 371, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1083)
[0000][PE] mean and std.dev: (365.66, 191.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 560, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1014)
[0000][PE] mean and std.dev: (557.02, 147.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1196)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (230, 1326, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6206)
[0000][PE] mean and std.dev: (1479.18, 1574.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8198)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1064, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1097.89, 613.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.692 CPU sec, 27.849 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 671198, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 405, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1243)
[0000][PE] mean and std.dev: (414.54, 226.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 583, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1056)
[0000][PE] mean and std.dev: (585.32, 152.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 1162, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7059)
[0000][PE] mean and std.dev: (1465.09, 1505.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9335)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (464, 1282, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1081.64, 757.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 654.436 CPU sec, 27.403 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 672657, 35, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 410, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1196)
[0000][PE] mean and std.dev: (416.83, 214.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 580, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1050)
[0000][PE] mean and std.dev: (581.67, 151.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (125, 461, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (823.44, 888.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 806, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1183.78, 1158.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.528 CPU sec, 27.683 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 672023, 40, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 449, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1047)
[0000][PE] mean and std.dev: (411.61, 183.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 576, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1044)
[0000][PE] mean and std.dev: (577.63, 151.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 1783, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7417)
[0000][PE] mean and std.dev: (1841.08, 1635.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9738)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1333, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1092.82, 787.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 656.972 CPU sec, 27.546 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 672327, 35, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 397, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (406.50, 227.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1041)
[0000][PE] mean and std.dev: (575.02, 151.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 1207, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6839)
[0000][PE] mean and std.dev: (1504.24, 1623.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9003)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.672 CPU sec, 28.381 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 671441, 38, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 449, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (447.88, 171.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 569, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.72, 150.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (352, 1201, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1320.42, 1219.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7420)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 649.428 CPU sec, 27.290 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 671656, 40, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 424, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (406.15, 230.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (563.39, 150.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (212, 906, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1147.62, 1264.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8448)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 655.604 CPU sec, 27.368 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 671552, 37, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 443, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (403.53, 208.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 560, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1020)
[0000][PE] mean and std.dev: (557.90, 149.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (192, 762, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (1056.58, 1109.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 618, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6311)
[0000][PE] mean and std.dev: (1217.62, 1048.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.812 CPU sec, 28.159 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 671361, 35, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 435, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (394.89, 169.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (575.13, 149.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (248, 815, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1119.94, 1103.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (419, 1246, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8597)
[0000][PE] mean and std.dev: (1869.00, 2014.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.864 CPU sec, 27.671 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 671644, 41, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 400, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1088)
[0000][PE] mean and std.dev: (374.71, 174.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 581, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1049)
[0000][PE] mean and std.dev: (582.79, 151.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 847, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (916.14, 617.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1203, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5160)
[0000][PE] mean and std.dev: (1395.80, 1118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.080 CPU sec, 28.115 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 671525, 21, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 390, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (405.84, 203.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1042)
[0000][PE] mean and std.dev: (578.22, 150.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (116, 360, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (870.60, 952.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7248)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1246, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5854)
[0000][PE] mean and std.dev: (1672.18, 1425.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 687.044 CPU sec, 28.905 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 671667, 42, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 440, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1007)
[0000][PE] mean and std.dev: (430.42, 182.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (575.15, 150.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 980, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1130.15, 1078.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6689)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.176 CPU sec, 28.330 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 671546, 30, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 413, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (411.65, 207.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (571.04, 150.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 1167, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8761)
[0000][PE] mean and std.dev: (1725.57, 1908.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11575)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 1028, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1477.00, 1423.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.440 CPU sec, 28.154 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 670691, 27, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 463, 590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1158)
[0000][PE] mean and std.dev: (435.84, 210.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1024)
[0000][PE] mean and std.dev: (564.45, 149.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (480, 1008, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1108.85, 764.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.680 CPU sec, 27.815 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 671251, 23, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 402, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (398.50, 243.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 561, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1016)
[0000][PE] mean and std.dev: (558.64, 148.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1198)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (528, 1437, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1300.55, 1043.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.660 CPU sec, 28.154 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 674710, 34, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 418, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1003)
[0000][PE] mean and std.dev: (376.65, 169.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (461, 551, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 986)
[0000][PE] mean and std.dev: (545.13, 141.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1161)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 398, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (655.52, 571.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 642.596 CPU sec, 26.992 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 684912, 37, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 205, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1283)
[0000][PE] mean and std.dev: (264.34, 189.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 514, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 908)
[0000][PE] mean and std.dev: (498.03, 125.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (294, 1441, 4133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11811)
[0000][PE] mean and std.dev: (2190.51, 2228.92)
[0000][PE] low and high boundaries for proper pairs: (1, 15650)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1256, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1150.07, 714.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 595.236 CPU sec, 24.833 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 685798, 29, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (108, 207, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (205.46, 127.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 506, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 895)
[0000][PE] mean and std.dev: (489.67, 123.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 706, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (771.20, 706.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 592.552 CPU sec, 24.970 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 684734, 27, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 250, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1054)
[0000][PE] mean and std.dev: (289.21, 182.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (439, 528, 602)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 928)
[0000][PE] mean and std.dev: (513.20, 126.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (219, 935, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8292)
[0000][PE] mean and std.dev: (1719.26, 2141.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10983)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 685, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (689.90, 425.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 620.200 CPU sec, 25.863 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 685722, 32, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 229, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (274.33, 215.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (426, 514, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 903)
[0000][PE] mean and std.dev: (498.03, 124.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (394, 775, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1068.50, 1023.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7842)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1088, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7807)
[0000][PE] mean and std.dev: (1521.42, 1400.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 623.112 CPU sec, 26.466 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 684785, 41, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 201, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (207.09, 132.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 507, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 904)
[0000][PE] mean and std.dev: (491.88, 126.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (212, 465, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (901.27, 920.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 764, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5974)
[0000][PE] mean and std.dev: (863.55, 678.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 588.276 CPU sec, 24.663 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 683613, 33, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 253, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1075)
[0000][PE] mean and std.dev: (267.02, 192.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (421, 507, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 883)
[0000][PE] mean and std.dev: (490.28, 120.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1037)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (182, 502, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (810.74, 830.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (531, 957, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (914.13, 523.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 597.392 CPU sec, 25.159 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 684100, 34, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 332, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (309.15, 207.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 512, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 902)
[0000][PE] mean and std.dev: (497.79, 125.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (205, 524, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (896.13, 942.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7361)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 616.856 CPU sec, 25.732 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 684681, 25, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 283, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1073)
[0000][PE] mean and std.dev: (283.11, 222.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (424, 510, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 889)
[0000][PE] mean and std.dev: (493.52, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (282, 830, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8100)
[0000][PE] mean and std.dev: (1707.83, 2181.35)
[0000][PE] low and high boundaries for proper pairs: (1, 10706)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 593, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (543.31, 384.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 618.660 CPU sec, 26.016 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 685334, 21, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 258, 461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1119)
[0000][PE] mean and std.dev: (281.08, 223.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (415, 503, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 898)
[0000][PE] mean and std.dev: (488.04, 125.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 522, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8902)
[0000][PE] mean and std.dev: (1416.90, 1571.69)
[0000][PE] low and high boundaries for proper pairs: (1, 11815)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 599.176 CPU sec, 25.339 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 685166, 32, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 237, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1305)
[0000][PE] mean and std.dev: (315.80, 281.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (423, 512, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 903)
[0000][PE] mean and std.dev: (495.70, 124.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 446, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (730.59, 660.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 998, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1293.33, 957.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 589.336 CPU sec, 24.787 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 684963, 28, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 283, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (280.47, 206.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 517, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 911)
[0000][PE] mean and std.dev: (500.71, 125.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1072)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (140, 739, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8927)
[0000][PE] mean and std.dev: (1803.25, 2335.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11856)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 599.228 CPU sec, 25.074 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 685247, 27, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (80, 205, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 947)
[0000][PE] mean and std.dev: (233.61, 176.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 513, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 902)
[0000][PE] mean and std.dev: (496.75, 124.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (351, 1054, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1417.00, 1550.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7618)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 598.200 CPU sec, 25.078 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 685517, 27, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 327, 454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1036)
[0000][PE] mean and std.dev: (285.37, 178.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 514, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 905)
[0000][PE] mean and std.dev: (496.82, 124.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1065)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (219, 627, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9813)
[0000][PE] mean and std.dev: (2010.93, 2244.60)
[0000][PE] low and high boundaries for proper pairs: (1, 13011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 1112, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5200)
[0000][PE] mean and std.dev: (1211.19, 950.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 598.760 CPU sec, 25.127 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 684369, 27, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 182, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1389)
[0000][PE] mean and std.dev: (280.29, 298.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 499, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 890)
[0000][PE] mean and std.dev: (482.24, 124.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1050)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (203, 798, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (909.50, 863.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 748, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (768.73, 522.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 601.768 CPU sec, 25.470 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (50, 683870, 29, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 222, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 829)
[0000][PE] mean and std.dev: (249.45, 176.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 509, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 890)
[0000][PE] mean and std.dev: (492.63, 121.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (110, 283, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (481.41, 561.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 843, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (685.38, 378.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 592.068 CPU sec, 24.930 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 684395, 23, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 232, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 951)
[0000][PE] mean and std.dev: (262.83, 175.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 514, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 896)
[0000][PE] mean and std.dev: (498.58, 121.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (149, 430, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6077)
[0000][PE] mean and std.dev: (952.29, 1188.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8053)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 596.260 CPU sec, 24.927 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 683777, 25, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 262, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (255.10, 169.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (426, 512, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 891)
[0000][PE] mean and std.dev: (496.06, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1046)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (477, 1272, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (1327.09, 1148.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 653, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5850)
[0000][PE] mean and std.dev: (1155.72, 1140.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 601.300 CPU sec, 25.207 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 683861, 25, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 195, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 691)
[0000][PE] mean and std.dev: (189.35, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 496, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 884)
[0000][PE] mean and std.dev: (477.99, 123.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (417, 1094, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7455)
[0000][PE] mean and std.dev: (1371.86, 1403.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9801)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1248, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (1092.38, 898.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 603.096 CPU sec, 25.262 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 681809, 30, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 317, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (292.63, 225.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (437, 523, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 911)
[0000][PE] mean and std.dev: (509.14, 122.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 903, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5983)
[0000][PE] mean and std.dev: (1349.47, 1437.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7927)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 613.852 CPU sec, 25.988 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 682603, 28, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 248, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1185)
[0000][PE] mean and std.dev: (266.32, 216.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (424, 509, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 889)
[0000][PE] mean and std.dev: (494.30, 120.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 477, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1058.04, 1242.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7938)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 597.524 CPU sec, 25.107 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 682635, 32, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 317, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (310.67, 232.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (421, 508, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 901)
[0000][PE] mean and std.dev: (494.65, 124.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 503, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (997.28, 1080.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5624)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 934, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (781.00, 670.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 613.540 CPU sec, 25.708 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 682743, 20, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 262, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 891)
[0000][PE] mean and std.dev: (245.73, 126.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (424, 510, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 895)
[0000][PE] mean and std.dev: (495.40, 122.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (432, 865, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1299.00, 1121.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7608)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (370, 955, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (936.06, 654.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 628.768 CPU sec, 26.329 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 682385, 23, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 307, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2531)
[0000][PE] mean and std.dev: (404.97, 416.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (419, 504, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 884)
[0000][PE] mean and std.dev: (489.12, 120.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 744, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (984.85, 1045.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7454)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 614.800 CPU sec, 25.821 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 682420, 18, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 296, 465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1059)
[0000][PE] mean and std.dev: (276.35, 155.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 513, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 890)
[0000][PE] mean and std.dev: (497.92, 120.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 584, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (732.88, 801.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 693, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (681.00, 399.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 607.088 CPU sec, 25.711 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 682102, 32, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 305, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (324.58, 236.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 516, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 903)
[0000][PE] mean and std.dev: (500.94, 122.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (322, 680, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1048.72, 1090.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 601.676 CPU sec, 25.386 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 682285, 28, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 242, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 938)
[0000][PE] mean and std.dev: (229.26, 135.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 514, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 899)
[0000][PE] mean and std.dev: (499.57, 122.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (293, 546, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1130.22, 1197.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7969)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1125, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (1248.64, 937.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.352 CPU sec, 25.345 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 682846, 23, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 198, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (239.00, 185.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (424, 510, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 892)
[0000][PE] mean and std.dev: (495.04, 121.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (416, 1163, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (903.95, 687.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1873, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6869)
[0000][PE] mean and std.dev: (1992.00, 1400.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.876 CPU sec, 25.412 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 682573, 23, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 287, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1001)
[0000][PE] mean and std.dev: (261.51, 183.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 516, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 897)
[0000][PE] mean and std.dev: (499.66, 121.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (189, 535, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (512.95, 413.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.776 CPU sec, 25.378 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 681087, 32, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 240, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (243.98, 187.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (430, 520, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 916)
[0000][PE] mean and std.dev: (503.22, 127.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 608, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1105.63, 1317.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 946, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1422.71, 1288.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 616.308 CPU sec, 26.100 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 680890, 39, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 232, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (229.97, 184.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (419, 508, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 899)
[0000][PE] mean and std.dev: (490.51, 124.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 549, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (936.35, 977.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 1051, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1004.54, 802.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 599.916 CPU sec, 25.245 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 681565, 28, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 288, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 958)
[0000][PE] mean and std.dev: (264.81, 162.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (413, 504, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 908)
[0000][PE] mean and std.dev: (488.14, 128.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1073)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 525, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (591.35, 629.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 1044, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6226)
[0000][PE] mean and std.dev: (1454.15, 1263.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 609.596 CPU sec, 25.489 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 682655, 28, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 273, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (271.20, 209.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (416, 507, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 905)
[0000][PE] mean and std.dev: (489.28, 127.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1068)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 438, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (704.16, 819.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1365, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (1309.58, 521.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 624.940 CPU sec, 26.179 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 681307, 25, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 173, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (200.12, 130.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (434, 522, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 908)
[0000][PE] mean and std.dev: (504.75, 123.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1066)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 516, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1160.13, 1390.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7272)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 635.372 CPU sec, 26.629 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 681772, 31, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 233, 411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (294.61, 248.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (419, 508, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 899)
[0000][PE] mean and std.dev: (490.20, 124.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (280, 462, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (624.36, 632.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (415, 471, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5176)
[0000][PE] mean and std.dev: (1048.00, 1112.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.212 CPU sec, 25.349 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 680625, 37, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 271, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1180)
[0000][PE] mean and std.dev: (254.81, 164.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (426, 516, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 912)
[0000][PE] mean and std.dev: (498.88, 126.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1074)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (139, 431, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5641)
[0000][PE] mean and std.dev: (1103.27, 1422.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 617.052 CPU sec, 26.096 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 682010, 30, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 294, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1127)
[0000][PE] mean and std.dev: (295.07, 198.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (421, 512, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 907)
[0000][PE] mean and std.dev: (493.92, 126.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 669, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1141.70, 1144.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7000)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 1108, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5600)
[0000][PE] mean and std.dev: (1010.08, 704.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 600.592 CPU sec, 25.257 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 682761, 27, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 236, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1030)
[0000][PE] mean and std.dev: (268.09, 192.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (414, 505, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 900)
[0000][PE] mean and std.dev: (486.60, 125.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (156, 497, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6288)
[0000][PE] mean and std.dev: (1376.74, 1585.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (392, 1036, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1323.08, 1301.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 606.128 CPU sec, 25.415 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 682267, 26, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 265, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1037)
[0000][PE] mean and std.dev: (262.19, 181.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (439, 526, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 913)
[0000][PE] mean and std.dev: (510.57, 123.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1071)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 595, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7043)
[0000][PE] mean and std.dev: (1282.08, 1443.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9300)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1021, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1341.15, 979.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 606.068 CPU sec, 25.430 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 685724, 29, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 194, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (257.32, 165.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (423, 508, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 885)
[0000][PE] mean and std.dev: (492.92, 119.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (174, 298, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (542.61, 544.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1044, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (1123.47, 617.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 593.768 CPU sec, 24.830 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 685192, 23, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 312, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (500.66, 499.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 508, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 893)
[0000][PE] mean and std.dev: (493.83, 122.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1050)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 473, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (900.48, 877.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1248, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1630.85, 1035.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 614.292 CPU sec, 25.994 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 685796, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 262, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (331.68, 318.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (412, 498, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 880)
[0000][PE] mean and std.dev: (483.22, 120.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1036)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (163, 252, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1660)
[0000][PE] mean and std.dev: (420.85, 392.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2159)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 871, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (757.33, 518.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 600.340 CPU sec, 25.304 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 685487, 39, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 292, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1360)
[0000][PE] mean and std.dev: (319.46, 222.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (424, 510, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 889)
[0000][PE] mean and std.dev: (494.69, 120.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 708, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1326.38, 1472.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 593.360 CPU sec, 24.843 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 685407, 21, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 262, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1068)
[0000][PE] mean and std.dev: (271.09, 216.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (427, 512, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 889)
[0000][PE] mean and std.dev: (497.09, 119.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (352, 1557, 3796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10684)
[0000][PE] mean and std.dev: (2480.90, 2873.84)
[0000][PE] low and high boundaries for proper pairs: (1, 14128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 595.828 CPU sec, 25.009 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 685800, 27, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 203, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (203.80, 121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 510, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 887)
[0000][PE] mean and std.dev: (495.06, 119.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1041)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 388, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (813.16, 859.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6464)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 598.000 CPU sec, 25.082 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 681864, 25, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 204, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (224.90, 152.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (429, 516, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 900)
[0000][PE] mean and std.dev: (500.91, 122.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1057)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (238, 640, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1256.40, 1369.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 464, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (887.73, 693.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 609.004 CPU sec, 25.753 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 682017, 17, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 257, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (309.48, 207.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (427, 514, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 898)
[0000][PE] mean and std.dev: (498.83, 122.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1055)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (171, 928, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5790)
[0000][PE] mean and std.dev: (1294.35, 1430.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7663)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1080, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (975.44, 437.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 598.424 CPU sec, 25.159 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 681159, 26, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (105, 255, 384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 942)
[0000][PE] mean and std.dev: (281.52, 219.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (437, 523, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 905)
[0000][PE] mean and std.dev: (508.06, 121.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (636, 1220, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6489)
[0000][PE] mean and std.dev: (1678.15, 1488.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8440)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 953, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6931)
[0000][PE] mean and std.dev: (1747.50, 1894.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 635.020 CPU sec, 26.629 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 681969, 24, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 220, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (232.11, 148.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (426, 512, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 894)
[0000][PE] mean and std.dev: (496.89, 120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1050)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (237, 538, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2712)
[0000][PE] mean and std.dev: (658.05, 663.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 551, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5322)
[0000][PE] mean and std.dev: (1068.82, 915.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 603.488 CPU sec, 25.273 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 681417, 32, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (99, 202, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 834)
[0000][PE] mean and std.dev: (199.07, 121.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (427, 513, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 892)
[0000][PE] mean and std.dev: (497.09, 121.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1047)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (202, 617, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5857)
[0000][PE] mean and std.dev: (1142.41, 1062.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7742)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 531, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (762.50, 705.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 608.536 CPU sec, 25.461 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 682636, 26, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 203, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 847)
[0000][PE] mean and std.dev: (211.33, 129.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (437, 523, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 905)
[0000][PE] mean and std.dev: (507.86, 121.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (166, 732, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5959)
[0000][PE] mean and std.dev: (973.48, 1005.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 833, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (669.36, 470.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 610.776 CPU sec, 25.843 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 682170, 26, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 328, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 879)
[0000][PE] mean and std.dev: (306.21, 145.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 521, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 903)
[0000][PE] mean and std.dev: (506.13, 121.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 507, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (807.19, 720.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 998, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1444.31, 1363.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 602.396 CPU sec, 25.421 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 682799, 29, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 285, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1124)
[0000][PE] mean and std.dev: (262.28, 169.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 507, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 887)
[0000][PE] mean and std.dev: (491.75, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1042)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (148, 993, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1188.28, 1196.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 604.116 CPU sec, 25.382 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 683745, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 240, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (285.94, 246.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (419, 506, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 893)
[0000][PE] mean and std.dev: (491.19, 122.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (158, 1002, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1452.06, 1657.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9038)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 967, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1108.79, 966.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 613.000 CPU sec, 25.716 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 683048, 17, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 254, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1025)
[0000][PE] mean and std.dev: (318.07, 203.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (423, 509, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 888)
[0000][PE] mean and std.dev: (493.34, 120.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (150, 383, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (603.12, 604.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1022, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (1125.84, 644.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 632.448 CPU sec, 26.513 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 683545, 24, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 225, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (224.66, 117.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (416, 502, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 884)
[0000][PE] mean and std.dev: (486.62, 121.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1040)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 1016, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7507)
[0000][PE] mean and std.dev: (1618.13, 2006.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9939)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (473, 617, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (808.80, 555.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 606.884 CPU sec, 25.702 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 682084, 27, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 284, 441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (275.91, 244.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (420, 506, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 885)
[0000][PE] mean and std.dev: (490.25, 120.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1040)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (238, 664, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1152.58, 1142.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 577, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (638.00, 322.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 599.640 CPU sec, 25.223 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 683294, 28, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 216, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 767)
[0000][PE] mean and std.dev: (225.04, 137.28)
[0000][PE] low and high boundaries for proper pairs: (1, 973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 511, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 890)
[0000][PE] mean and std.dev: (495.57, 120.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 594, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (791.08, 641.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.464 CPU sec, 25.391 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 683373, 18, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 304, 438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (291.83, 192.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (423, 508, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 888)
[0000][PE] mean and std.dev: (492.88, 120.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 530, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (938.00, 1009.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 606.648 CPU sec, 25.469 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 682756, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 318, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1031)
[0000][PE] mean and std.dev: (292.71, 190.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (423, 511, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 903)
[0000][PE] mean and std.dev: (496.14, 124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (265, 529, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (615.50, 536.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 678, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (901.15, 550.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 604.912 CPU sec, 25.377 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (53, 683481, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 216, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (229.38, 152.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (413, 501, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 887)
[0000][PE] mean and std.dev: (483.93, 123.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1045)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 878, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1084.68, 1019.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7232)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 480, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (851.92, 778.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 600.536 CPU sec, 25.435 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 682572, 30, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 219, 391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (240.39, 174.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 512, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 914)
[0000][PE] mean and std.dev: (496.72, 127.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1078)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 618, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (876.56, 853.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 890, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (1227.20, 830.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 612.928 CPU sec, 25.816 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 683448, 31, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 228, 361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 779)
[0000][PE] mean and std.dev: (226.33, 123.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 498, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 889)
[0000][PE] mean and std.dev: (481.73, 124.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1049)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 574, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (773.07, 821.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1052, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (774.64, 539.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 615.352 CPU sec, 25.820 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 682471, 24, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 281, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (309.32, 208.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (416, 506, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 902)
[0000][PE] mean and std.dev: (489.45, 125.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1064)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 609, 3799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11093)
[0000][PE] mean and std.dev: (1842.92, 2219.34)
[0000][PE] low and high boundaries for proper pairs: (1, 14740)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 1309, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5574)
[0000][PE] mean and std.dev: (1608.43, 1354.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 601.352 CPU sec, 25.218 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 683012, 27, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 255, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1045)
[0000][PE] mean and std.dev: (239.10, 137.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 511, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 902)
[0000][PE] mean and std.dev: (494.12, 124.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 1075, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8397)
[0000][PE] mean and std.dev: (1658.56, 2015.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11147)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 1340, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1217.85, 1122.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 604.356 CPU sec, 25.338 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 682794, 20, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 313, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1039)
[0000][PE] mean and std.dev: (288.10, 185.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (422, 511, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 902)
[0000][PE] mean and std.dev: (494.43, 125.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 601, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (800.17, 700.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 606.372 CPU sec, 25.655 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 684197, 32, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 209, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (213.53, 142.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (425, 512, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 899)
[0000][PE] mean and std.dev: (495.88, 123.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1057)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (318, 1147, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6876)
[0000][PE] mean and std.dev: (1446.35, 1554.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9062)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 604.380 CPU sec, 25.394 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 686973, 24, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 297, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 942)
[0000][PE] mean and std.dev: (272.33, 165.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (433, 516, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 883)
[0000][PE] mean and std.dev: (500.75, 116.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (430, 952, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (1346.30, 1312.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 615.836 CPU sec, 25.676 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 687535, 41, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 312, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (519.38, 559.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 494, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 860)
[0000][PE] mean and std.dev: (476.78, 117.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1010)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (326, 672, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1002.37, 862.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1057, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5243)
[0000][PE] mean and std.dev: (1482.36, 1295.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 586.332 CPU sec, 24.685 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 686127, 23, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 290, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1407)
[0000][PE] mean and std.dev: (351.29, 305.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 478, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (73, 868)
[0000][PE] mean and std.dev: (463.64, 123.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1027)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (176, 439, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (776.64, 857.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (291, 826, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (619.80, 448.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 591.112 CPU sec, 24.654 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 683613, 29, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 310, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1180)
[0000][PE] mean and std.dev: (319.53, 205.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (455, 540, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 926)
[0000][PE] mean and std.dev: (527.17, 122.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1083)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (362, 1010, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1246.96, 1203.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7382)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (525, 747, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (750.27, 432.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 610.580 CPU sec, 25.947 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 685505, 21, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 271, 469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1081)
[0000][PE] mean and std.dev: (269.55, 186.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 528, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 905)
[0000][PE] mean and std.dev: (513.10, 120.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (143, 1304, 2922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8480)
[0000][PE] mean and std.dev: (1713.67, 1847.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11259)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 1092, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (822.11, 436.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 591.844 CPU sec, 24.807 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 685860, 25, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 269, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1127)
[0000][PE] mean and std.dev: (300.78, 233.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (432, 517, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 894)
[0000][PE] mean and std.dev: (501.57, 120.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (144, 680, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8040)
[0000][PE] mean and std.dev: (1578.80, 1934.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10672)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1087, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (1066.80, 544.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 593.056 CPU sec, 24.900 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 686228, 30, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 212, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1260)
[0000][PE] mean and std.dev: (337.55, 287.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 495, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 863)
[0000][PE] mean and std.dev: (476.96, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1014)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (340, 780, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1187.80, 993.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7304)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 981, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (945.45, 526.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 590.820 CPU sec, 24.690 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 686354, 35, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (103, 322, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (371.68, 351.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (419, 505, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 887)
[0000][PE] mean and std.dev: (489.18, 121.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (277, 1326, 3600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10246)
[0000][PE] mean and std.dev: (1972.80, 2080.58)
[0000][PE] low and high boundaries for proper pairs: (1, 13569)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1176, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1583.39, 1249.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 595.512 CPU sec, 25.064 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 684936, 36, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 303, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (441.75, 466.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (443, 527, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 899)
[0000][PE] mean and std.dev: (512.32, 118.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 422, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4196)
[0000][PE] mean and std.dev: (857.38, 1098.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (428, 1150, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6464)
[0000][PE] mean and std.dev: (1334.46, 1027.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 605.064 CPU sec, 25.577 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 686385, 30, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 235, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1006)
[0000][PE] mean and std.dev: (227.56, 173.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 512, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (128, 878)
[0000][PE] mean and std.dev: (495.65, 117.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1028)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (186, 350, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1245.20, 1440.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7478)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 584.740 CPU sec, 24.594 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 687743, 29, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 165, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 965)
[0000][PE] mean and std.dev: (195.41, 148.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (399, 484, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 846)
[0000][PE] mean and std.dev: (465.40, 115.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 256, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1779)
[0000][PE] mean and std.dev: (357.62, 351.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2343)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 1088, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (768.90, 441.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 582.636 CPU sec, 24.436 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 685930, 29, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 202, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 986)
[0000][PE] mean and std.dev: (243.94, 187.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 499, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (86, 896)
[0000][PE] mean and std.dev: (484.30, 125.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1058)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 534, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1030.21, 1223.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 856, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (1023.27, 744.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 597.956 CPU sec, 25.054 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 684369, 23, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 309, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (274.87, 132.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (457, 541, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (143, 928)
[0000][PE] mean and std.dev: (529.12, 122.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (415, 1348, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1268.32, 1161.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 879, 3107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7741)
[0000][PE] mean and std.dev: (1635.55, 1619.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 613.292 CPU sec, 25.702 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 685323, 31, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 259, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1761)
[0000][PE] mean and std.dev: (295.00, 230.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (447, 531, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (139, 909)
[0000][PE] mean and std.dev: (517.15, 120.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (240, 1671, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6507)
[0000][PE] mean and std.dev: (1498.63, 1367.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8596)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1141, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1102.67, 540.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 649.892 CPU sec, 27.520 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 686833, 30, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 230, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1048)
[0000][PE] mean and std.dev: (283.76, 234.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (431, 516, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 890)
[0000][PE] mean and std.dev: (499.98, 119.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (123, 386, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (556.72, 599.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 2242, 5199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13245)
[0000][PE] mean and std.dev: (2613.46, 1917.88)
[0000][PE] low and high boundaries for proper pairs: (1, 17268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 610.368 CPU sec, 25.740 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 687047, 25, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 226, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1482)
[0000][PE] mean and std.dev: (353.36, 330.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 493, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 864)
[0000][PE] mean and std.dev: (475.36, 118.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1016)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (138, 488, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (860.60, 892.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 589.228 CPU sec, 24.750 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 686085, 27, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 306, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (393.77, 326.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (428, 514, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 899)
[0000][PE] mean and std.dev: (499.27, 121.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1056)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (342, 1323, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (1516.96, 1463.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8202)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1039, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (1227.73, 574.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 633.920 CPU sec, 26.599 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 685258, 37, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 255, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (320.86, 313.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (448, 531, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (146, 901)
[0000][PE] mean and std.dev: (516.95, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1052)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (389, 687, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1100.54, 1122.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 615.776 CPU sec, 25.781 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 685499, 34, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 224, 445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (249.77, 218.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (447, 531, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 906)
[0000][PE] mean and std.dev: (516.73, 119.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 767, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1064.79, 961.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (397, 438, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (910.20, 770.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 602.892 CPU sec, 25.543 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 685926, 31, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 342, 481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1113)
[0000][PE] mean and std.dev: (267.56, 148.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (435, 518, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (133, 888)
[0000][PE] mean and std.dev: (502.99, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1039)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 548, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5938)
[0000][PE] mean and std.dev: (1188.27, 1218.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7844)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 935, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (1210.54, 824.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 587.276 CPU sec, 24.714 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 686986, 16, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 181, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (269.53, 251.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 502, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 871)
[0000][PE] mean and std.dev: (485.17, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1022)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (179, 865, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (807.19, 645.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 587.056 CPU sec, 24.601 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 92763440, nseq: 626780
	[0000][ M::kt_pipeline] read 626780 sequences (92763440 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 686295, 31, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 323, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (299.76, 207.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (398, 485, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (84, 869)
[0000][PE] mean and std.dev: (468.90, 122.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 289, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (681.11, 783.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 1202, 5244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15076)
[0000][PE] mean and std.dev: (2778.50, 2718.17)
[0000][PE] low and high boundaries for proper pairs: (1, 19992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 587.292 CPU sec, 24.683 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 626780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 264518, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 237, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (306.80, 347.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (447, 529, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (149, 894)
[0000][PE] mean and std.dev: (515.52, 115.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 626780 reads in 234.232 CPU sec, 10.066 real sec
[0000] read_chunk: 240000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 24
Processor is running @2500.144945 MHz
Runtime profile:

	Time taken for main_mem function: 14951.73 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2594.17, (2594.17, 2594.17)
	Writing IO time (SAM) avg: 5810.46, (5810.46, 5810.46)
	Reading IO time (Reference Genome) avg: 62.67, (62.67, 62.67)
	Index read time avg: 98.90, (98.90, 98.90)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 14788.95
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 11589.60, (11589.60, 11589.60)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 3079.54, (3079.54, 3079.54)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 8397.17, (8397.17, 8397.17)
		SMEM compute avg: 3463.50, (3469.36, 3453.82)
		SAL compute avg: 991.88, (996.30, 988.83)
				MEM_SA avg: 679.84, (683.32, 678.09)

		BSW time, avg: 3659.02, (3660.87, 3651.11)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 16
	SIMD_WIDTH16 X: 8
	AVG_SEEDS_PER_READ: 64
[bam_sort_core] merging from 18 files and 4 in-memory blocks...
[W::sam_hrecs_update_hashes] PG line with multiple ID tags. The first encountered was preferred - ID:bwa-mem2
[W::sam_hrecs_update_hashes] PG line with multiple ID tags. The first encountered was preferred - ID:bwa-mem2
