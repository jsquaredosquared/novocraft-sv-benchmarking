Looking to launch executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx", simd = .avx
Launching executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx"
-----------------------------
Executing in AVX mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Entering FMI_search
* Index file found. Loading index from /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.bwt.2bit.64
* Reference seq len for bi-index = 6274909011
* sentinel-index: 2668688548
* Count:
0,	1
1,	1832527715
2,	3137454506
3,	4442381297
4,	6274909011

* Reading other elements of the index from files /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Index prefix: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.0123
* Reference genome size: 6274909010 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 3344.1250 MB
2. Memory pre-allocation for BSW: 5750.8086 MB
3. Memory pre-allocation for BWT: 1855.5402 MB
------------------------------------------
* Threads used (compute): 24
* No. of pipeline threads: 2

[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 668807, 38, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 471, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1490)
[0000][PE] mean and std.dev: (426.97, 256.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 580, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1067)
[0000][PE] mean and std.dev: (579.89, 157.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 1066, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1369.06, 1459.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1175, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1528.67, 1146.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.216 CPU sec, 28.377 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[W::sam_hrecs_update_hashes] PG line with multiple ID tags. The first encountered was preferred - ID:bwa-mem2
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 669340, 32, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 416, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (412.87, 213.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1048)
[0000][PE] mean and std.dev: (568.30, 155.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (258, 865, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (794.11, 745.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1097, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1002.85, 773.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.980 CPU sec, 28.433 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 668357, 25, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 414, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (402.03, 207.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1063)
[0000][PE] mean and std.dev: (578.59, 157.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1256)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 1694, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6776)
[0000][PE] mean and std.dev: (1757.25, 1777.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8909)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.864 CPU sec, 28.610 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 668339, 36, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 358, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (401.05, 249.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 1046)
[0000][PE] mean and std.dev: (566.23, 155.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (685, 1240, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1507.03, 1219.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 731, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (725.33, 480.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.284 CPU sec, 28.364 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 669005, 46, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 409, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1215)
[0000][PE] mean and std.dev: (402.22, 217.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.43, 152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 1199, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5360)
[0000][PE] mean and std.dev: (1113.41, 996.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.220 CPU sec, 28.430 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668695, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 427, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (416.03, 214.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1052)
[0000][PE] mean and std.dev: (574.96, 154.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (409, 801, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (982.09, 821.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.164 CPU sec, 27.906 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 669012, 38, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 413, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1254)
[0000][PE] mean and std.dev: (396.66, 240.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 1046)
[0000][PE] mean and std.dev: (565.87, 155.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 1095, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1258.26, 1006.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 937, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (806.23, 393.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.404 CPU sec, 28.629 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 668477, 35, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 420, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (381.24, 189.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1060)
[0000][PE] mean and std.dev: (578.11, 156.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (613, 1405, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1638.21, 1451.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 979, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7988)
[0000][PE] mean and std.dev: (1364.08, 1262.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.996 CPU sec, 27.630 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 668852, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 366, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 959)
[0000][PE] mean and std.dev: (377.30, 162.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1054)
[0000][PE] mean and std.dev: (571.63, 156.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (346, 1098, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1184.08, 935.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1306, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (1361.90, 932.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.600 CPU sec, 28.077 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 669247, 34, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 433, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (403.31, 205.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 578, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1059)
[0000][PE] mean and std.dev: (577.18, 156.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 637, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1489.18, 1518.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.472 CPU sec, 27.915 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 668832, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 428, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 973)
[0000][PE] mean and std.dev: (372.50, 178.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.27, 152.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 871, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (918.83, 933.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1334, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1140.78, 696.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.248 CPU sec, 28.507 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 667955, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 469, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (429.95, 213.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1043)
[0000][PE] mean and std.dev: (570.67, 153.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (319, 1127, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6058)
[0000][PE] mean and std.dev: (1311.32, 1267.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7971)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 1247, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7919)
[0000][PE] mean and std.dev: (1699.00, 1587.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.412 CPU sec, 28.774 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 668928, 37, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 412, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (381.53, 232.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 570, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1048)
[0000][PE] mean and std.dev: (568.01, 155.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (264, 886, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1634.19, 1727.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8543)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 1099, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9041)
[0000][PE] mean and std.dev: (2315.63, 2664.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 661.576 CPU sec, 27.766 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 668284, 33, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 441, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1245)
[0000][PE] mean and std.dev: (405.57, 249.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1055)
[0000][PE] mean and std.dev: (575.18, 155.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (454, 1483, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8164)
[0000][PE] mean and std.dev: (1448.97, 1253.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10734)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 907, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (836.50, 510.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.448 CPU sec, 28.068 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667784, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 410, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (381.25, 210.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1043)
[0000][PE] mean and std.dev: (565.27, 155.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (291, 629, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1045.81, 1131.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1000, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1134.50, 719.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.368 CPU sec, 28.174 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 667771, 49, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 468, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (442.11, 214.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 582, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1066)
[0000][PE] mean and std.dev: (581.83, 157.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1259)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 960, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (1232.89, 1148.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1199, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10103)
[0000][PE] mean and std.dev: (1658.19, 1441.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.968 CPU sec, 28.171 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668171, 47, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 447, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (428.82, 233.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1045)
[0000][PE] mean and std.dev: (572.96, 153.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (261, 738, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (996.26, 1074.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.464 CPU sec, 28.498 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 667537, 39, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 399, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (380.22, 179.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.80, 151.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (437, 1125, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1174.38, 878.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6993)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (416, 1308, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1495.33, 1393.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.884 CPU sec, 27.858 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 668300, 29, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 468, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (419.90, 204.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.44, 151.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 608, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1284.57, 1451.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 1037, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1006.56, 749.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.080 CPU sec, 27.876 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 669200, 28, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 414, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 963)
[0000][PE] mean and std.dev: (392.86, 191.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.38, 152.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (236, 515, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (767.19, 807.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 886, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8984)
[0000][PE] mean and std.dev: (1938.45, 2090.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.644 CPU sec, 28.064 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 669491, 40, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 414, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (394.97, 223.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1033)
[0000][PE] mean and std.dev: (565.59, 151.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 840, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1159.81, 1204.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.052 CPU sec, 27.934 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 667954, 35, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 395, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1201)
[0000][PE] mean and std.dev: (384.59, 195.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.95, 150.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 492, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (874.48, 1058.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.336 CPU sec, 28.859 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 668164, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 440, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (414.41, 238.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.43, 151.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1204, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6632)
[0000][PE] mean and std.dev: (1551.03, 1531.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8710)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1366, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1283.17, 1211.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.312 CPU sec, 28.490 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667153, 32, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 456, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1081)
[0000][PE] mean and std.dev: (426.47, 192.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1030)
[0000][PE] mean and std.dev: (562.74, 150.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (535, 1190, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1054.15, 992.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.096 CPU sec, 28.182 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 668219, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 416, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1153)
[0000][PE] mean and std.dev: (404.50, 229.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.65, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 876, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (1200.09, 1004.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.804 CPU sec, 28.087 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 668170, 34, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 424, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (391.76, 192.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (569.83, 150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (411, 1030, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1165.70, 884.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6699)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 948, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (924.71, 566.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.044 CPU sec, 28.078 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667286, 37, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 460, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1319)
[0000][PE] mean and std.dev: (442.30, 236.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.93, 151.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (379, 1220, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5995)
[0000][PE] mean and std.dev: (1661.14, 1543.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1178, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (194, 2264)
[0000][PE] mean and std.dev: (1087.78, 460.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.940 CPU sec, 28.955 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 668915, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 396, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (382.64, 210.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.45, 152.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 661, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1179.76, 1325.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1080, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (872.31, 525.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 657.304 CPU sec, 27.619 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 667907, 37, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 394, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (362.01, 206.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1032)
[0000][PE] mean and std.dev: (564.49, 151.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 886, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6885)
[0000][PE] mean and std.dev: (1554.70, 1586.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9052)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.488 CPU sec, 28.112 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667635, 35, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 387, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (354.87, 172.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.22, 149.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (203, 587, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5552)
[0000][PE] mean and std.dev: (980.91, 948.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7335)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.288 CPU sec, 28.482 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666750, 30, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 390, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1119)
[0000][PE] mean and std.dev: (355.50, 184.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 561, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.50, 149.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (449, 1272, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1348.57, 1278.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 586, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (608.20, 402.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.864 CPU sec, 28.616 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 667090, 36, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 403, 518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1198)
[0000][PE] mean and std.dev: (354.84, 198.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (567.01, 148.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (372, 1158, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6063)
[0000][PE] mean and std.dev: (1397.22, 1225.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7960)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 866, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (969.30, 629.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.524 CPU sec, 28.734 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 667117, 34, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 421, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (376.54, 201.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (556.67, 149.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (284, 1024, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1302.91, 1185.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.856 CPU sec, 28.011 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 667425, 36, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 360, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1058)
[0000][PE] mean and std.dev: (371.08, 188.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.73, 149.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (191, 600, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (953.00, 1017.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.504 CPU sec, 27.892 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 667361, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 346, 503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1131)
[0000][PE] mean and std.dev: (335.70, 203.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1025)
[0000][PE] mean and std.dev: (560.42, 149.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 754, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1239.84, 1354.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 1545, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1018.44, 894.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.012 CPU sec, 28.243 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 667820, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 358, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (353.51, 215.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.83, 150.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 1201, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (943.07, 753.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 502, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (616.42, 325.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.064 CPU sec, 27.982 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666619, 31, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 386, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (363.62, 207.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1031)
[0000][PE] mean and std.dev: (568.87, 149.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (297, 933, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (977.46, 957.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5953)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 817, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1231.85, 954.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.972 CPU sec, 28.752 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 666892, 34, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 323, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1261)
[0000][PE] mean and std.dev: (348.66, 208.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1016)
[0000][PE] mean and std.dev: (555.69, 148.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 747, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (977.70, 1031.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1200, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1362.33, 983.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.312 CPU sec, 28.107 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 666824, 25, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 375, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (387.92, 244.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (566.85, 149.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 1118, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1052.35, 806.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 761, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (864.08, 858.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.752 CPU sec, 28.065 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 666624, 37, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 374, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (349.91, 193.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.61, 149.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 582, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (968.77, 998.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.752 CPU sec, 28.319 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668055, 32, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 404, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (385.91, 257.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.68, 150.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1117, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1161.33, 1054.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6766)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.908 CPU sec, 27.867 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 665892, 24, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 401, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (382.05, 239.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1048)
[0000][PE] mean and std.dev: (569.72, 154.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (181, 344, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (851.57, 926.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.692 CPU sec, 28.997 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 665420, 34, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 398, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (369.28, 231.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.51, 154.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (386, 1237, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5783)
[0000][PE] mean and std.dev: (1538.00, 1476.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.920 CPU sec, 28.420 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 665172, 26, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 386, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1243)
[0000][PE] mean and std.dev: (374.34, 234.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1051)
[0000][PE] mean and std.dev: (573.02, 154.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 1193, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1354.15, 1116.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1292, 4356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10806)
[0000][PE] mean and std.dev: (2140.23, 1909.38)
[0000][PE] low and high boundaries for proper pairs: (1, 14031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.416 CPU sec, 28.971 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 664559, 30, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 403, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (395.92, 210.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (566.73, 153.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 592, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1169.87, 1350.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7443)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.620 CPU sec, 28.480 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (119, 664197, 37, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 377, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1296)
[0000][PE] mean and std.dev: (357.51, 215.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.41, 153.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 677, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1610.54, 1782.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9249)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1492, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9392)
[0000][PE] mean and std.dev: (2036.10, 1933.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.256 CPU sec, 28.447 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 663547, 29, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 389, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (362.43, 222.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1042)
[0000][PE] mean and std.dev: (563.55, 154.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (151, 338, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (551.69, 561.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1136, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6400)
[0000][PE] mean and std.dev: (1531.38, 1463.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 695.168 CPU sec, 29.292 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 664273, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 415, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (366.48, 205.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1048)
[0000][PE] mean and std.dev: (572.20, 154.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (250, 924, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1051.74, 925.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (455, 653, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (975.92, 847.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.628 CPU sec, 28.029 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 664515, 36, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 399, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (372.00, 220.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 1040)
[0000][PE] mean and std.dev: (561.36, 154.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (143, 1452, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8816)
[0000][PE] mean and std.dev: (1500.09, 1626.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11707)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.796 CPU sec, 28.586 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 664813, 34, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 431, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1351)
[0000][PE] mean and std.dev: (437.20, 242.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (576.47, 153.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 795, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (911.06, 703.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1229, 4235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11817)
[0000][PE] mean and std.dev: (2062.09, 1910.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.124 CPU sec, 28.358 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 665387, 29, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 437, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (411.64, 244.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1040)
[0000][PE] mean and std.dev: (564.16, 154.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (314, 893, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1411.52, 1356.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (527, 671, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1574)
[0000][PE] mean and std.dev: (652.60, 306.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 678.172 CPU sec, 28.506 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 663608, 40, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 405, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1173)
[0000][PE] mean and std.dev: (371.21, 193.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1051)
[0000][PE] mean and std.dev: (575.79, 154.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (491, 1546, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5612)
[0000][PE] mean and std.dev: (1386.76, 1173.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 557, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (982.40, 909.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 702.548 CPU sec, 29.651 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (116, 664868, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 360, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (360.32, 224.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (566.50, 153.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 898, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1119.10, 1126.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (435, 746, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (857.80, 642.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.964 CPU sec, 28.546 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 664892, 25, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 405, 568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1166)
[0000][PE] mean and std.dev: (403.08, 222.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (563.81, 152.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (342, 643, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (752.87, 559.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 1371, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1489.64, 1187.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.360 CPU sec, 28.533 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 664262, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 409, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1123)
[0000][PE] mean and std.dev: (386.74, 203.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (568.84, 153.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 1169, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1395.27, 1159.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 1179, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (1045.31, 674.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.120 CPU sec, 29.815 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 664324, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 379, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (357.99, 187.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1039)
[0000][PE] mean and std.dev: (562.83, 153.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (433, 1797, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6694)
[0000][PE] mean and std.dev: (1627.53, 1290.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 685.812 CPU sec, 28.663 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 664084, 31, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 396, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1134)
[0000][PE] mean and std.dev: (397.35, 218.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1046)
[0000][PE] mean and std.dev: (570.52, 153.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 1192, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6789)
[0000][PE] mean and std.dev: (1510.00, 1528.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1021, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 2203)
[0000][PE] mean and std.dev: (1053.50, 302.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.272 CPU sec, 29.102 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 664900, 40, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 399, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (381.53, 201.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1037)
[0000][PE] mean and std.dev: (561.13, 153.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 891, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6790)
[0000][PE] mean and std.dev: (1296.28, 1235.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 793, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1304.86, 1158.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.424 CPU sec, 28.325 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 667509, 25, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 402, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (373.35, 189.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.03, 151.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 697, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (772.00, 773.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1155, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (931.22, 596.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.568 CPU sec, 28.059 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 669626, 44, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 370, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (325.49, 197.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1026)
[0000][PE] mean and std.dev: (563.65, 149.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 826, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (853.79, 798.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 997, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (738.11, 367.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 663.976 CPU sec, 27.860 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (58, 670402, 36, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 419, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (373.09, 200.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1025)
[0000][PE] mean and std.dev: (562.76, 149.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 1009, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1210.18, 1054.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7139)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 1060, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (682.70, 489.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 665.200 CPU sec, 27.866 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670977, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 423, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1152)
[0000][PE] mean and std.dev: (394.85, 205.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.60, 150.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 871, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1380.06, 1493.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (445, 603, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1011.67, 841.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.544 CPU sec, 28.357 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (59, 670835, 54, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 379, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (367.81, 218.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.87, 150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (496, 1128, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1291.94, 1117.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 969, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1220.50, 1262.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.096 CPU sec, 27.973 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 670151, 35, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 382, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1011)
[0000][PE] mean and std.dev: (409.58, 192.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.71, 149.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 456, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (857.62, 859.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1223, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1533.53, 981.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.292 CPU sec, 27.933 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (52, 669359, 24, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 389, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (390.12, 211.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (563.47, 149.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 1214, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (957.68, 894.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.948 CPU sec, 27.973 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (56, 669901, 30, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 377, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (369.74, 269.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (561.20, 148.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 1268, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5673)
[0000][PE] mean and std.dev: (1321.62, 1174.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.040 CPU sec, 27.982 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 670742, 31, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 527, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (487.36, 215.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (570.33, 150.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 634, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1177.60, 1173.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1416, 3241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7535)
[0000][PE] mean and std.dev: (2026.33, 1820.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 674.376 CPU sec, 28.547 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 670179, 46, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 365, 483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (362.23, 193.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.89, 150.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (194, 506, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (824.86, 872.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5282)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1459, 7473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20981)
[0000][PE] mean and std.dev: (3200.10, 3443.53)
[0000][PE] low and high boundaries for proper pairs: (1, 27735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.628 CPU sec, 28.162 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 668548, 35, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 402, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (415.62, 243.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1044)
[0000][PE] mean and std.dev: (574.82, 151.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 871, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6954)
[0000][PE] mean and std.dev: (1316.75, 1401.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9168)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 687, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (594.36, 484.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.232 CPU sec, 27.961 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 666752, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 408, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1284)
[0000][PE] mean and std.dev: (376.47, 221.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.15, 151.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (377, 1020, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (1347.14, 1184.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7893)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 671.064 CPU sec, 28.147 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
[0000] 2. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 667411, 31, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 334, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (348.89, 198.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.22, 152.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 1193, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6902)
[0000][PE] mean and std.dev: (1681.57, 1860.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9125)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 669.332 CPU sec, 27.908 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 668192, 41, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 361, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (356.73, 210.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.79, 151.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (282, 703, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1089.72, 1038.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1251, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6819)
[0000][PE] mean and std.dev: (1435.38, 1148.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 682.192 CPU sec, 28.951 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (125, 668334, 40, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 423, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1241)
[0000][PE] mean and std.dev: (418.98, 230.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1055)
[0000][PE] mean and std.dev: (583.19, 153.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (505, 970, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (997.19, 707.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 670.552 CPU sec, 28.253 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 664004, 40, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 415, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (400.57, 190.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.28, 150.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 834, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1474.90, 1567.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7746)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1214, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (1572.18, 1181.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 690.580 CPU sec, 28.923 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 666529, 31, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 428, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1021)
[0000][PE] mean and std.dev: (408.53, 194.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.94, 151.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (280, 610, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1172.77, 1259.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (487, 1200, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (1046.00, 698.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.580 CPU sec, 28.370 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 666480, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 350, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1014)
[0000][PE] mean and std.dev: (342.23, 153.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1046)
[0000][PE] mean and std.dev: (573.78, 151.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 1231, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5857)
[0000][PE] mean and std.dev: (1307.49, 1054.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7670)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 398, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1725)
[0000][PE] mean and std.dev: (512.20, 272.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.380 CPU sec, 28.332 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 667177, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 408, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (405.03, 262.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1043)
[0000][PE] mean and std.dev: (573.09, 151.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1243, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1281.34, 1229.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1069, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (1252.00, 878.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.436 CPU sec, 28.189 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 667644, 40, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 393, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1147)
[0000][PE] mean and std.dev: (396.15, 203.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (576.65, 152.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 875, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1210.14, 1253.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (556, 890, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1220.87, 883.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.808 CPU sec, 28.724 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 667939, 35, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 421, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1079)
[0000][PE] mean and std.dev: (405.63, 217.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1053)
[0000][PE] mean and std.dev: (581.57, 152.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (367, 1003, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (1478.29, 1492.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9007)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 395, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1525)
[0000][PE] mean and std.dev: (351.12, 162.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.136 CPU sec, 28.331 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 663174, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 424, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (417.08, 229.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.12, 149.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 996, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1436.31, 1527.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7852)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1095, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (801.69, 516.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 699.336 CPU sec, 29.298 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 667472, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 373, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (351.67, 227.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (464, 559, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1019)
[0000][PE] mean and std.dev: (554.03, 150.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 800, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7077)
[0000][PE] mean and std.dev: (1298.90, 1455.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9380)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 894, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1000.18, 640.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 679.016 CPU sec, 28.470 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 661590, 46, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 384, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (365.86, 218.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1031)
[0000][PE] mean and std.dev: (568.74, 149.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 445, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (822.13, 850.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6192)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1233, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6423)
[0000][PE] mean and std.dev: (1402.42, 1403.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.716 CPU sec, 28.841 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 662280, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 425, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1121)
[0000][PE] mean and std.dev: (385.75, 187.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1026)
[0000][PE] mean and std.dev: (563.91, 149.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (455, 1565, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1289.86, 887.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 1037, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1093.00, 874.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 698.524 CPU sec, 29.528 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 663418, 38, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 312, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1162)
[0000][PE] mean and std.dev: (328.59, 209.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 563, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1022)
[0000][PE] mean and std.dev: (559.25, 149.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (347, 920, 3806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10724)
[0000][PE] mean and std.dev: (2123.42, 2431.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14183)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.716 CPU sec, 28.441 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 663173, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 431, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (410.84, 244.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1038)
[0000][PE] mean and std.dev: (573.48, 150.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 897, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (919.21, 789.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 781, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (774.78, 873.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 683.208 CPU sec, 28.552 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 663826, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 391, 515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (365.01, 198.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1033)
[0000][PE] mean and std.dev: (565.60, 150.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (317, 754, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1228.83, 1263.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6989)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 687.060 CPU sec, 28.895 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 664685, 32, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 416, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (353.27, 197.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (562.14, 150.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (502, 978, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (961.58, 714.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.024 CPU sec, 28.412 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 663340, 30, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 367, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1358)
[0000][PE] mean and std.dev: (355.63, 231.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.55, 149.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (357, 982, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6549)
[0000][PE] mean and std.dev: (1494.32, 1574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8613)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 893, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (867.91, 482.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 700.052 CPU sec, 29.643 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 662257, 25, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 412, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (378.68, 187.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1030)
[0000][PE] mean and std.dev: (568.05, 149.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (249, 882, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1431.92, 1488.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8333)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.552 CPU sec, 28.622 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 662750, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 435, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1352)
[0000][PE] mean and std.dev: (425.26, 236.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.57, 150.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (262, 547, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1184.50, 1262.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 713, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (731.69, 403.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 688.776 CPU sec, 28.948 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 663317, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 421, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (393.15, 187.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.84, 150.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 484, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (727.00, 710.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 978, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1228.90, 692.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 686.408 CPU sec, 28.610 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 666405, 34, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 458, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1363)
[0000][PE] mean and std.dev: (446.47, 277.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (572.07, 151.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (286, 1219, 2942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1817.21, 2022.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10910)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 491, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (586.60, 467.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 673.012 CPU sec, 28.242 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 668645, 37, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 342, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (337.57, 210.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1030)
[0000][PE] mean and std.dev: (559.41, 152.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (382, 999, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5425)
[0000][PE] mean and std.dev: (1216.57, 1235.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 836, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (771.36, 546.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.120 CPU sec, 28.379 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 668987, 39, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 264, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (305.20, 197.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1033)
[0000][PE] mean and std.dev: (560.69, 152.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (705, 1254, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1431.89, 1152.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 566, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (742.18, 551.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 653.848 CPU sec, 27.484 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 670253, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 450, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (385.48, 197.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.09, 152.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 881, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5496)
[0000][PE] mean and std.dev: (1165.16, 1124.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.936 CPU sec, 27.786 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 669779, 48, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 418, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (397.07, 207.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (564.78, 153.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 566, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1303.15, 1399.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 872, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (820.36, 520.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 664.544 CPU sec, 27.881 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 669276, 27, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 388, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1280)
[0000][PE] mean and std.dev: (395.80, 236.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.23, 152.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (544, 1132, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1125.67, 943.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5804)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.996 CPU sec, 27.974 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (51, 668453, 49, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 306, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (298.27, 186.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1029)
[0000][PE] mean and std.dev: (559.06, 152.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (231, 1060, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7722)
[0000][PE] mean and std.dev: (1807.20, 1949.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10219)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.488 CPU sec, 28.600 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 668775, 33, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 438, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1264)
[0000][PE] mean and std.dev: (411.53, 214.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 561, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1028)
[0000][PE] mean and std.dev: (557.74, 152.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (258, 659, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1068.72, 1062.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 585, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (754.92, 543.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 659.204 CPU sec, 27.829 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (66, 669832, 37, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 400, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (377.80, 208.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.74, 153.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 1357, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1506.14, 1252.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 566, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (626.14, 511.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 660.588 CPU sec, 27.688 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 668683, 28, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 406, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1100)
[0000][PE] mean and std.dev: (385.36, 201.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (564.96, 152.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 1294, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1368.39, 1143.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1219, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1217.89, 967.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 672.032 CPU sec, 28.179 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 667788, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 425, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1115)
[0000][PE] mean and std.dev: (406.83, 190.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1047)
[0000][PE] mean and std.dev: (580.00, 151.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (431, 1616, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1531.20, 1211.88)
[0000][PE] low and high boundaries for proper pairs: (1, 10067)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1187, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1422.00, 1050.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 675.516 CPU sec, 28.251 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 668352, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 428, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1213)
[0000][PE] mean and std.dev: (419.45, 235.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 583, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1050)
[0000][PE] mean and std.dev: (583.33, 151.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (388, 1199, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (1436.89, 1372.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10236)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (451, 1038, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1434.00, 1585.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 676.948 CPU sec, 28.627 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (54, 668293, 35, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 462, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1280)
[0000][PE] mean and std.dev: (379.69, 234.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.90, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 634, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (783.58, 724.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 662.000 CPU sec, 27.814 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
[0000] 2. Calling kt_for - worker_aln
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 668281, 37, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 353, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1259)
[0000][PE] mean and std.dev: (385.92, 284.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (574.73, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (408, 1033, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1132.66, 907.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.100 CPU sec, 27.798 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 668087, 34, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 438, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1062)
[0000][PE] mean and std.dev: (397.31, 173.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1036)
[0000][PE] mean and std.dev: (571.19, 150.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 1486, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1375.71, 1179.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8781)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 667.268 CPU sec, 27.915 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 669252, 22, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 432, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1144)
[0000][PE] mean and std.dev: (403.89, 207.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.89, 150.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 854, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (859.20, 656.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 668.692 CPU sec, 28.002 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 668848, 36, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 479, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1224)
[0000][PE] mean and std.dev: (421.59, 225.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1024)
[0000][PE] mean and std.dev: (561.00, 150.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 494, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5031)
[0000][PE] mean and std.dev: (953.80, 1060.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 720, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (777.84, 608.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 681.244 CPU sec, 28.875 real sec
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 668530, 38, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 466, 610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (423.75, 200.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (574.34, 151.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 803, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1196.27, 1161.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1169, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1181.80, 472.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 677.296 CPU sec, 28.390 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 240000000, work_chunk_size: 240000056, nseq: 1621622
	[0000][ M::kt_pipeline] read 1621622 sequences (240000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 1621622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (65, 667898, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 440, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1168)
[0000][PE] mean and std.dev: (401.84, 204.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 1053)
[0000][PE] mean and std.dev: (584.09, 152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (172, 671, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1094.11, 1188.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1621622 reads in 666.132 CPU sec, 27.966 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
