Looking to launch executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx", simd = .avx
Launching executable "/export/home/jeffrey/Documents/sv-benchmarking/workflow/rules/.snakemake/conda/18f90908a2ea392db940975d1cadf1c1_/bin/bwa-mem2.avx"
-----------------------------
Executing in AVX mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Entering FMI_search
* Index file found. Loading index from /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.bwt.2bit.64
* Reference seq len for bi-index = 6274909011
* sentinel-index: 2668688548
* Count:
0,	1
1,	1832527715
2,	3137454506
3,	4442381297
4,	6274909011

* Reading other elements of the index from files /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Index prefix: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh37/hs37d5.fa.0123
* Reference genome size: 6274909010 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 4180.1515 MB
2. Memory pre-allocation for BSW: 7188.5107 MB
3. Memory pre-allocation for BWT: 2319.4253 MB
------------------------------------------
* Threads used (compute): 30
* No. of pipeline threads: 2

[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 836475, 42, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 453, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (435.35, 257.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 580, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1064)
[0000][PE] mean and std.dev: (579.53, 157.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1257)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 1066, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6129)
[0000][PE] mean and std.dev: (1334.58, 1414.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1786, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1623.41, 1123.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 960.608 CPU sec, 32.236 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 835754, 45, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 395, 522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (393.25, 201.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 1049)
[0000][PE] mean and std.dev: (568.62, 155.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 671, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (934.66, 1015.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6826)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 862, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (799.69, 491.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 983.328 CPU sec, 33.113 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 835414, 31, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 416, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1413)
[0000][PE] mean and std.dev: (426.52, 243.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 576, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1057)
[0000][PE] mean and std.dev: (575.16, 156.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1249)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (796, 1370, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1973.52, 1643.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (306, 1045, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1470.70, 1490.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 992.508 CPU sec, 33.450 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 836206, 59, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 388, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1234)
[0000][PE] mean and std.dev: (386.77, 210.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1038)
[0000][PE] mean and std.dev: (568.20, 152.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (368, 1092, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1148.43, 987.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6208)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 432, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (677.25, 533.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.124 CPU sec, 33.150 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 835950, 45, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 427, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1109)
[0000][PE] mean and std.dev: (411.20, 219.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 576, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1054)
[0000][PE] mean and std.dev: (574.38, 155.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (420, 1010, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (1085.00, 860.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1139, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (1210.50, 867.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.748 CPU sec, 32.728 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 836102, 46, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 413, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1225)
[0000][PE] mean and std.dev: (387.40, 216.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1051)
[0000][PE] mean and std.dev: (571.37, 156.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1242)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (288, 1095, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1123.48, 938.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 981, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7988)
[0000][PE] mean and std.dev: (1499.75, 1324.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.024 CPU sec, 32.637 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 835643, 49, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 367, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1028)
[0000][PE] mean and std.dev: (376.76, 184.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 571, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 1051)
[0000][PE] mean and std.dev: (568.89, 156.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 1189, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1433.43, 1232.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 979, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (945.71, 500.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.352 CPU sec, 32.857 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 836589, 39, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 433, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1273)
[0000][PE] mean and std.dev: (412.56, 217.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 580, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1064)
[0000][PE] mean and std.dev: (579.61, 157.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1257)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (303, 941, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1492.51, 1455.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7635)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.780 CPU sec, 32.673 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 835843, 39, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 431, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (394.05, 191.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.96, 151.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 541, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (943.74, 1009.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7010)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1247, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1345.92, 1040.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 986.364 CPU sec, 33.259 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 835361, 46, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 444, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1196)
[0000][PE] mean and std.dev: (399.51, 206.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 575, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1051)
[0000][PE] mean and std.dev: (574.13, 155.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 1127, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1432.09, 1348.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7854)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1662, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8581)
[0000][PE] mean and std.dev: (1989.65, 1755.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.664 CPU sec, 32.829 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 835547, 42, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 435, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1286)
[0000][PE] mean and std.dev: (416.72, 258.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 572, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1050)
[0000][PE] mean and std.dev: (570.00, 155.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (345, 1483, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7560)
[0000][PE] mean and std.dev: (1594.54, 1529.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9965)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 664, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2255)
[0000][PE] mean and std.dev: (766.00, 489.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.600 CPU sec, 32.906 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 835032, 47, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 402, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1183)
[0000][PE] mean and std.dev: (372.74, 212.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 570, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1045)
[0000][PE] mean and std.dev: (567.18, 155.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (307, 643, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1040.36, 1074.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 967, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (975.13, 719.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.232 CPU sec, 32.852 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 834590, 62, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 464, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1177)
[0000][PE] mean and std.dev: (438.70, 220.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 580, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1061)
[0000][PE] mean and std.dev: (578.96, 157.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1253)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (359, 960, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5816)
[0000][PE] mean and std.dev: (1246.98, 1217.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7635)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (480, 739, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6099)
[0000][PE] mean and std.dev: (1490.35, 1363.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.884 CPU sec, 32.777 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (104, 835544, 46, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 447, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1194)
[0000][PE] mean and std.dev: (405.55, 194.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.40, 151.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 755, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (872.70, 816.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1275, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6359)
[0000][PE] mean and std.dev: (1747.55, 1391.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.016 CPU sec, 32.578 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 834795, 50, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 416, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1137)
[0000][PE] mean and std.dev: (394.79, 194.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.93, 151.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1277, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1305.02, 1078.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7534)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1030, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (908.33, 498.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.188 CPU sec, 32.909 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 836050, 34, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 432, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 980)
[0000][PE] mean and std.dev: (401.98, 192.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.74, 152.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (203, 515, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2147)
[0000][PE] mean and std.dev: (577.03, 524.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 886, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9174)
[0000][PE] mean and std.dev: (1997.79, 2201.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.776 CPU sec, 32.720 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (120, 836964, 47, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 408, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1222)
[0000][PE] mean and std.dev: (385.10, 214.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.57, 151.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (325, 840, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5938)
[0000][PE] mean and std.dev: (1223.07, 1264.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7809)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 546, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (749.25, 483.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 967.768 CPU sec, 33.609 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 834802, 50, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 453, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1268)
[0000][PE] mean and std.dev: (425.07, 222.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.65, 150.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 565, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (852.46, 962.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 1366, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (922.88, 496.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.012 CPU sec, 33.038 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 834293, 40, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 424, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1316)
[0000][PE] mean and std.dev: (422.36, 259.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (561.31, 149.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (453, 1204, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1446.49, 1481.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8545)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1542, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (1247.45, 827.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 990.424 CPU sec, 33.425 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 834925, 42, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 432, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1049)
[0000][PE] mean and std.dev: (405.53, 200.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (569.06, 151.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 1038, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1317.05, 1218.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7296)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.748 CPU sec, 32.844 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 834898, 43, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 433, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1286)
[0000][PE] mean and std.dev: (408.98, 217.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.57, 150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (533, 1030, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1254.85, 1022.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 948, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (894.12, 560.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 976.868 CPU sec, 32.957 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 835435, 43, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 449, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1002)
[0000][PE] mean and std.dev: (410.10, 189.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1040)
[0000][PE] mean and std.dev: (570.33, 152.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (374, 1150, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1451.53, 1377.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7458)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (495, 1105, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2952)
[0000][PE] mean and std.dev: (921.67, 455.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.944 CPU sec, 32.915 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 835187, 47, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 367, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1297)
[0000][PE] mean and std.dev: (372.91, 234.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1035)
[0000][PE] mean and std.dev: (567.50, 151.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (384, 708, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5697)
[0000][PE] mean and std.dev: (1357.27, 1419.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1223, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (1684.85, 1364.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.048 CPU sec, 32.840 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 834394, 46, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 388, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (358.63, 183.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (565.41, 149.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (188, 556, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5582)
[0000][PE] mean and std.dev: (1120.61, 1271.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 988.336 CPU sec, 33.279 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 833742, 39, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 387, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (352.43, 186.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.93, 148.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (485, 1272, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1353.83, 1166.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7033)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 586, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (608.20, 402.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 994.204 CPU sec, 33.505 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 833511, 45, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 410, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (366.39, 196.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.89, 149.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (345, 1163, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6642)
[0000][PE] mean and std.dev: (1381.34, 1161.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8741)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (378, 866, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (911.23, 644.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.960 CPU sec, 32.748 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 834440, 41, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 386, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (370.22, 204.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.30, 149.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (164, 511, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (848.95, 952.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5792)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 736, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (754.64, 445.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.080 CPU sec, 32.900 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 834050, 51, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 346, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 993)
[0000][PE] mean and std.dev: (332.17, 173.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.95, 149.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 794, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5993)
[0000][PE] mean and std.dev: (1280.27, 1333.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 1545, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1018.44, 894.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.924 CPU sec, 32.940 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 834525, 38, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 368, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (355.69, 222.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1034)
[0000][PE] mean and std.dev: (569.33, 149.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 1212, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (998.00, 766.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 700, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (765.53, 625.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.008 CPU sec, 32.831 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 832984, 46, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 386, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1161)
[0000][PE] mean and std.dev: (361.32, 191.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1026)
[0000][PE] mean and std.dev: (563.66, 149.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 933, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (863.45, 845.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4743)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 1200, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (1106.53, 800.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 976.904 CPU sec, 32.926 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 834016, 34, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 365, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1330)
[0000][PE] mean and std.dev: (382.72, 245.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1025)
[0000][PE] mean and std.dev: (562.84, 148.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1209)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 522, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (866.45, 844.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 802, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (1070.55, 959.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.008 CPU sec, 33.055 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 833255, 43, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 357, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (343.96, 190.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 562, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1022)
[0000][PE] mean and std.dev: (559.19, 149.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 896, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1125.29, 1132.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.148 CPU sec, 33.031 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 834656, 38, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 404, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1353)
[0000][PE] mean and std.dev: (380.61, 242.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.88, 151.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1117, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1209.83, 1068.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6766)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.216 CPU sec, 32.793 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 832247, 36, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 428, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (398.84, 250.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1040)
[0000][PE] mean and std.dev: (563.75, 153.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (232, 818, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1136.06, 1220.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7880)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (430, 633, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (967.92, 785.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 982.124 CPU sec, 33.081 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (124, 831486, 34, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 381, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (355.26, 213.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 581, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1054)
[0000][PE] mean and std.dev: (578.54, 154.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (334, 1205, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1486.41, 1334.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7326)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1292, 4356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11800)
[0000][PE] mean and std.dev: (2102.77, 2004.88)
[0000][PE] low and high boundaries for proper pairs: (1, 15522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 997.528 CPU sec, 33.645 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 830710, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 396, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (392.77, 233.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (566.56, 153.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 591, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1125.42, 1297.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7443)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 1021, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (951.33, 795.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1001.112 CPU sec, 33.731 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (142, 830189, 40, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 354, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1270)
[0000][PE] mean and std.dev: (353.21, 216.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1044)
[0000][PE] mean and std.dev: (568.52, 153.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 677, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1560.60, 1748.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9001)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1464, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9308)
[0000][PE] mean and std.dev: (1954.27, 1861.14)
[0000][PE] low and high boundaries for proper pairs: (1, 12251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 987.696 CPU sec, 33.373 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (124, 829417, 43, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 395, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1275)
[0000][PE] mean and std.dev: (366.69, 232.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1045)
[0000][PE] mean and std.dev: (569.00, 154.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (184, 659, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (814.29, 873.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4988)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 736, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (941.50, 757.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 994.288 CPU sec, 33.472 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (125, 830512, 47, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 409, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (380.62, 209.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1038)
[0000][PE] mean and std.dev: (561.95, 154.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 1452, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8612)
[0000][PE] mean and std.dev: (1716.49, 1822.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11401)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 993.004 CPU sec, 33.510 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 831227, 40, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 413, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1273)
[0000][PE] mean and std.dev: (419.15, 222.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1051)
[0000][PE] mean and std.dev: (575.68, 153.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 684, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (922.84, 826.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 1793, 4235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11817)
[0000][PE] mean and std.dev: (2076.25, 1829.98)
[0000][PE] low and high boundaries for proper pairs: (1, 15608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 990.144 CPU sec, 33.373 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 831491, 37, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 428, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (393.47, 234.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1040)
[0000][PE] mean and std.dev: (563.88, 153.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1403, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1424.64, 1259.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7544)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 671, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1684)
[0000][PE] mean and std.dev: (718.18, 358.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 991.236 CPU sec, 33.401 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (121, 830112, 49, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 406, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1206)
[0000][PE] mean and std.dev: (399.23, 221.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1052)
[0000][PE] mean and std.dev: (576.81, 154.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 861, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1235.41, 1290.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 557, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (934.21, 854.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1007.884 CPU sec, 33.985 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 831232, 35, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 359, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1247)
[0000][PE] mean and std.dev: (352.10, 220.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 1033)
[0000][PE] mean and std.dev: (560.07, 152.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (386, 705, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1039.75, 1017.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1294, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1463.94, 1135.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 997.484 CPU sec, 33.627 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (137, 830182, 40, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 409, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (389.39, 199.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 575, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1044)
[0000][PE] mean and std.dev: (570.61, 153.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (659, 1169, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1353.28, 1089.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 1179, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (950.69, 688.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 987.732 CPU sec, 33.259 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (117, 830320, 42, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 378, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1159)
[0000][PE] mean and std.dev: (378.17, 207.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1039)
[0000][PE] mean and std.dev: (565.28, 153.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (424, 1797, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6712)
[0000][PE] mean and std.dev: (1634.29, 1287.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8808)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 997.004 CPU sec, 33.598 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (120, 830699, 41, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 377, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1248)
[0000][PE] mean and std.dev: (365.35, 202.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1040)
[0000][PE] mean and std.dev: (564.31, 153.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (360, 1194, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6534)
[0000][PE] mean and std.dev: (1482.28, 1477.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8592)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1274, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (1125.21, 619.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 988.620 CPU sec, 33.283 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (120, 832310, 44, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 416, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 997)
[0000][PE] mean and std.dev: (385.71, 183.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1046)
[0000][PE] mean and std.dev: (573.40, 153.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (215, 697, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1016.59, 1043.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7071)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 663, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (949.67, 808.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 987.544 CPU sec, 33.354 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (64, 837118, 49, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 364, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (353.70, 225.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (565.10, 149.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (124, 585, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (818.09, 776.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 997, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (1103.00, 794.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.220 CPU sec, 32.566 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 837915, 42, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 428, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (387.07, 183.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.34, 150.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (383, 926, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1145.26, 1021.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7067)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 544, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6156)
[0000][PE] mean and std.dev: (1330.29, 1476.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 967.856 CPU sec, 32.601 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 838860, 59, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 365, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (353.64, 216.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.33, 150.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 966, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1363.59, 1342.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (603, 990, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1415.00, 1186.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.896 CPU sec, 32.594 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 838185, 52, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 389, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (415.93, 225.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (570.03, 150.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 803, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1054.36, 1025.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (366, 1036, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1015.42, 855.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.876 CPU sec, 33.002 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 836763, 30, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 389, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1105)
[0000][PE] mean and std.dev: (400.05, 204.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.45, 149.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 1214, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (975.33, 915.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1240, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (1292.75, 991.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.456 CPU sec, 32.839 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 837353, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 405, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1456)
[0000][PE] mean and std.dev: (405.27, 285.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.84, 149.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 1268, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5673)
[0000][PE] mean and std.dev: (1363.77, 1248.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7459)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1292, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1215.00, 859.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.300 CPU sec, 32.695 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (57, 838475, 43, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 439, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1198)
[0000][PE] mean and std.dev: (452.43, 226.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1035)
[0000][PE] mean and std.dev: (567.96, 150.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (303, 606, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (901.77, 856.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1416, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8248)
[0000][PE] mean and std.dev: (2577.91, 2486.07)
[0000][PE] low and high boundaries for proper pairs: (1, 12522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.472 CPU sec, 32.572 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 836882, 49, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 374, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1273)
[0000][PE] mean and std.dev: (401.37, 234.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (572.55, 150.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (186, 871, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7206)
[0000][PE] mean and std.dev: (1167.09, 1275.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9546)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 719, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (757.89, 677.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.328 CPU sec, 33.303 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (119, 833410, 53, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 408, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1252)
[0000][PE] mean and std.dev: (378.52, 220.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.69, 151.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 718, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6107)
[0000][PE] mean and std.dev: (1270.44, 1205.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8057)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1014, 6105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17311)
[0000][PE] mean and std.dev: (2544.82, 2720.14)
[0000][PE] low and high boundaries for proper pairs: (1, 22914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.164 CPU sec, 32.980 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 834522, 44, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 346, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1165)
[0000][PE] mean and std.dev: (367.56, 209.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.46, 152.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 1194, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1347.07, 1312.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1251, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7063)
[0000][PE] mean and std.dev: (1823.92, 1756.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.232 CPU sec, 33.076 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (123, 835644, 49, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 408, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1289)
[0000][PE] mean and std.dev: (386.74, 217.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1051)
[0000][PE] mean and std.dev: (579.14, 152.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1239)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (463, 970, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1154.89, 965.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6011)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (402, 561, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6831)
[0000][PE] mean and std.dev: (1294.40, 1163.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.476 CPU sec, 33.094 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (125, 831674, 51, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 404, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1341)
[0000][PE] mean and std.dev: (385.09, 216.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.32, 151.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 549, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (986.96, 1111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1083, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1520.09, 1202.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1003.536 CPU sec, 33.854 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 832630, 39, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 434, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 948)
[0000][PE] mean and std.dev: (413.68, 188.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1040)
[0000][PE] mean and std.dev: (570.65, 151.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (335, 638, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1275.03, 1284.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1200, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (1089.79, 661.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 991.000 CPU sec, 33.413 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 833454, 51, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 350, 498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (351.33, 182.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1044)
[0000][PE] mean and std.dev: (574.20, 151.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (418, 1320, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (1524.82, 1341.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 748, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (649.71, 474.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.780 CPU sec, 33.258 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (128, 834412, 53, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 411, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1236)
[0000][PE] mean and std.dev: (412.98, 241.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (577.07, 152.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (200, 832, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5621)
[0000][PE] mean and std.dev: (1092.71, 1098.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 863, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1175.08, 920.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 978.368 CPU sec, 32.979 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (123, 834593, 51, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 411, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (398.72, 204.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 580, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1048)
[0000][PE] mean and std.dev: (578.41, 152.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 875, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1341.58, 1343.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (537, 890, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1142.79, 852.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 990.800 CPU sec, 33.416 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 829960, 42, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 398, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (412.95, 237.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.20, 150.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 1194, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (1517.38, 1598.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7911)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 565, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3323)
[0000][PE] mean and std.dev: (686.06, 499.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1013.600 CPU sec, 34.156 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 832820, 44, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 385, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1256)
[0000][PE] mean and std.dev: (365.24, 236.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 562, 654)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1026)
[0000][PE] mean and std.dev: (558.30, 150.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 515, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (971.24, 1133.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7200)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 894, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (922.57, 627.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 995.292 CPU sec, 33.527 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 828009, 50, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 406, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1240)
[0000][PE] mean and std.dev: (363.81, 200.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1024)
[0000][PE] mean and std.dev: (561.78, 149.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (234, 597, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5019)
[0000][PE] mean and std.dev: (978.79, 899.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6614)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1233, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (1126.82, 634.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1003.308 CPU sec, 33.812 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 827876, 52, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 347, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1155)
[0000][PE] mean and std.dev: (354.69, 200.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.06, 150.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (421, 1138, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5866)
[0000][PE] mean and std.dev: (1589.94, 1548.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7785)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1036, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6732)
[0000][PE] mean and std.dev: (1471.62, 1458.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1002.460 CPU sec, 33.839 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 829228, 48, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 426, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (393.18, 239.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1034)
[0000][PE] mean and std.dev: (569.39, 150.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 970, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1071.95, 1091.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6669)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 421, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (710.33, 802.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 999.600 CPU sec, 33.626 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 830976, 46, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 417, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (381.41, 217.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1031)
[0000][PE] mean and std.dev: (563.62, 150.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 718, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1034.20, 1010.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 584, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (839.27, 514.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 998.840 CPU sec, 33.690 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 828634, 29, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 369, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1204)
[0000][PE] mean and std.dev: (332.39, 195.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.22, 150.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (502, 1077, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1465.18, 1423.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8082)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 923, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5293)
[0000][PE] mean and std.dev: (1233.62, 1042.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 999.280 CPU sec, 33.632 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 828565, 38, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 412, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1389)
[0000][PE] mean and std.dev: (391.20, 234.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (563.42, 149.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (337, 759, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5698)
[0000][PE] mean and std.dev: (1347.24, 1441.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1039, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (975.22, 475.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1005.792 CPU sec, 33.927 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 828683, 45, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 446, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (407.49, 208.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.95, 149.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (256, 697, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1241.00, 1316.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 713, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (856.94, 571.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1004.652 CPU sec, 33.881 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 828563, 40, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 416, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (395.39, 239.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (564.44, 150.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 536, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (982.74, 1047.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 978, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (1115.46, 664.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1003.976 CPU sec, 33.899 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 835514, 42, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 453, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1331)
[0000][PE] mean and std.dev: (441.11, 242.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1037)
[0000][PE] mean and std.dev: (567.07, 152.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 824, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5297)
[0000][PE] mean and std.dev: (1203.72, 1310.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 606, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (698.65, 541.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.552 CPU sec, 32.653 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 836439, 49, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 302, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1072)
[0000][PE] mean and std.dev: (296.49, 177.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 566, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1035)
[0000][PE] mean and std.dev: (562.23, 152.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (497, 1304, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1650.65, 1501.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7656)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 746, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (745.73, 560.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.492 CPU sec, 32.638 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 837093, 46, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 433, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (363.86, 214.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1038)
[0000][PE] mean and std.dev: (565.53, 152.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (400, 1123, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1163.90, 1011.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6936)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 566, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (563.00, 443.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.188 CPU sec, 32.659 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (109, 837174, 56, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 410, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (397.01, 212.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 569, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1041)
[0000][PE] mean and std.dev: (565.94, 153.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 635, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1315.56, 1383.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (413, 813, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (797.17, 503.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.676 CPU sec, 32.743 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 835972, 45, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 306, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1174)
[0000][PE] mean and std.dev: (356.56, 230.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 567, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1034)
[0000][PE] mean and std.dev: (563.86, 152.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (251, 982, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1626.34, 1791.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8790)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.732 CPU sec, 32.740 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 836313, 48, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 409, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1269)
[0000][PE] mean and std.dev: (396.40, 218.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1029)
[0000][PE] mean and std.dev: (561.16, 152.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (279, 1060, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1184.27, 1140.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 585, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (829.72, 686.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.408 CPU sec, 32.657 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 836656, 45, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 393, 561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1197)
[0000][PE] mean and std.dev: (381.12, 211.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1038)
[0000][PE] mean and std.dev: (565.44, 153.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (401, 1357, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1457.78, 1206.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 390, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (564.24, 487.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.368 CPU sec, 32.593 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (110, 836103, 42, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 385, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1082)
[0000][PE] mean and std.dev: (380.09, 196.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1038)
[0000][PE] mean and std.dev: (565.55, 152.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 1469, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1465.27, 1193.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1189, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1240.69, 944.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.420 CPU sec, 33.029 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 834136, 42, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 464, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (426.89, 229.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (493, 584, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 1051)
[0000][PE] mean and std.dev: (584.12, 151.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (366, 1041, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1243.28, 1132.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7014)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1187, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1333.67, 1008.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.412 CPU sec, 32.948 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 835984, 49, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 396, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1129)
[0000][PE] mean and std.dev: (366.64, 196.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 581, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1045)
[0000][PE] mean and std.dev: (580.68, 150.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (300, 1084, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1252.96, 1266.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8808)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.036 CPU sec, 32.852 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 835177, 45, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 406, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (392.04, 262.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1040)
[0000][PE] mean and std.dev: (575.23, 150.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (394, 1033, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1138.95, 948.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.076 CPU sec, 32.741 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 835463, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 438, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1055)
[0000][PE] mean and std.dev: (409.98, 186.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.55, 151.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 1480, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5740)
[0000][PE] mean and std.dev: (1300.66, 1144.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1465, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (1549.00, 1084.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.004 CPU sec, 32.794 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 836512, 40, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 434, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1294)
[0000][PE] mean and std.dev: (406.81, 229.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1027)
[0000][PE] mean and std.dev: (564.11, 150.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (143, 639, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1096.70, 1172.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1042, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (920.06, 603.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.384 CPU sec, 32.781 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835712, 40, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 474, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1181)
[0000][PE] mean and std.dev: (409.66, 188.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.09, 151.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (272, 574, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1043.08, 1036.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1008, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (966.64, 567.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 989.092 CPU sec, 33.334 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 834928, 48, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 443, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (410.00, 201.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 584, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1056)
[0000][PE] mean and std.dev: (584.51, 152.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (221, 803, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (1180.55, 1251.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6889)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 790, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (1707.64, 1796.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.240 CPU sec, 32.756 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 836480, 47, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 400, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1316)
[0000][PE] mean and std.dev: (393.94, 253.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.68, 151.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 739, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1232.84, 1237.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 1208, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7862)
[0000][PE] mean and std.dev: (1859.79, 1499.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 967.548 CPU sec, 32.651 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 836044, 47, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 393, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1169)
[0000][PE] mean and std.dev: (374.57, 187.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1042)
[0000][PE] mean and std.dev: (574.65, 151.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (407, 968, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1178.75, 1129.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 578, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1996)
[0000][PE] mean and std.dev: (719.21, 452.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.628 CPU sec, 32.676 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 835747, 47, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 407, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (388.59, 234.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (567.61, 151.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (247, 918, 3592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10282)
[0000][PE] mean and std.dev: (1975.62, 2308.52)
[0000][PE] low and high boundaries for proper pairs: (1, 13627)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 1311, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (1462.75, 1392.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.356 CPU sec, 32.922 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 835545, 46, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 411, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1414)
[0000][PE] mean and std.dev: (400.32, 245.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (561.98, 150.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (332, 868, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (1159.09, 1028.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6668)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 722, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (933.90, 691.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.688 CPU sec, 33.188 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 835530, 35, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 429, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (392.31, 202.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (575.51, 151.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (306, 654, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (1268.03, 1193.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6762)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 2007, 3514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8124)
[0000][PE] mean and std.dev: (2194.50, 1566.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 988.088 CPU sec, 33.370 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 835699, 47, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 458, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1351)
[0000][PE] mean and std.dev: (438.99, 224.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (495, 587, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 1059)
[0000][PE] mean and std.dev: (587.32, 152.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1247)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (466, 1334, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1337.48, 1008.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7134)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1561, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1495.60, 881.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.988 CPU sec, 32.816 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 836013, 30, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 414, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1416)
[0000][PE] mean and std.dev: (432.16, 240.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1051)
[0000][PE] mean and std.dev: (581.73, 152.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (544, 1874, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5731)
[0000][PE] mean and std.dev: (1651.14, 1295.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7460)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 797, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7827)
[0000][PE] mean and std.dev: (1367.29, 1256.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.324 CPU sec, 32.899 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 837288, 31, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 463, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1300)
[0000][PE] mean and std.dev: (431.09, 248.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.53, 151.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (378, 993, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1275.45, 1142.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1268, 5477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14783)
[0000][PE] mean and std.dev: (2336.77, 2203.33)
[0000][PE] low and high boundaries for proper pairs: (1, 19436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.556 CPU sec, 32.861 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (68, 836913, 43, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 453, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1376)
[0000][PE] mean and std.dev: (410.14, 227.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.29, 151.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (470, 1285, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1538.93, 1524.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7734)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1823, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1823.92, 1364.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.792 CPU sec, 32.679 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 836877, 53, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 418, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (360.85, 186.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.56, 150.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (294, 784, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1445.77, 1491.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8426)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 810, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1804)
[0000][PE] mean and std.dev: (594.38, 258.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.312 CPU sec, 32.804 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 836481, 55, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 430, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (395.20, 211.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1050)
[0000][PE] mean and std.dev: (580.37, 152.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 737, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1566.11, 1662.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1299, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (1316.54, 619.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.884 CPU sec, 33.012 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (73, 836583, 42, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 530, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (506.79, 312.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (494, 586, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1061)
[0000][PE] mean and std.dev: (587.16, 153.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1250)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (257, 1115, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5795)
[0000][PE] mean and std.dev: (1298.63, 1384.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7641)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1105, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1316.74, 1292.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 996.792 CPU sec, 33.556 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 835982, 40, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 389, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1199)
[0000][PE] mean and std.dev: (367.71, 212.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1051)
[0000][PE] mean and std.dev: (582.06, 152.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (248, 1342, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7541)
[0000][PE] mean and std.dev: (1792.55, 1946.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9972)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 931, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (941.10, 715.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.912 CPU sec, 32.850 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 836425, 41, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 440, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1211)
[0000][PE] mean and std.dev: (414.57, 224.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.02, 152.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 1290, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9087)
[0000][PE] mean and std.dev: (1834.12, 1958.65)
[0000][PE] low and high boundaries for proper pairs: (1, 12021)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 899, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (899.90, 540.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1019.060 CPU sec, 34.174 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 836375, 34, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 441, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1324)
[0000][PE] mean and std.dev: (386.58, 247.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1037)
[0000][PE] mean and std.dev: (569.70, 151.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1223)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (241, 661, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (877.33, 999.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1367, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5263)
[0000][PE] mean and std.dev: (1630.00, 1338.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 978.812 CPU sec, 33.015 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (67, 835958, 42, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 393, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (345.18, 183.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.80, 151.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (127, 649, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1032.68, 1148.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 779, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (681.88, 467.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 985.696 CPU sec, 33.245 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (69, 835374, 42, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 417, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1432)
[0000][PE] mean and std.dev: (383.83, 223.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 581, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1045)
[0000][PE] mean and std.dev: (580.59, 150.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (290, 918, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1206.98, 1180.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6914)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 843, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (751.45, 534.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 980.252 CPU sec, 33.039 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 835922, 39, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 428, 595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1367)
[0000][PE] mean and std.dev: (378.56, 215.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1047)
[0000][PE] mean and std.dev: (580.35, 151.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 773, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (1358.84, 1470.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8392)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1194, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6554)
[0000][PE] mean and std.dev: (1781.75, 1692.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.464 CPU sec, 32.710 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835850, 41, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 429, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1193)
[0000][PE] mean and std.dev: (407.26, 235.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1043)
[0000][PE] mean and std.dev: (576.26, 151.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (579, 1301, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5244)
[0000][PE] mean and std.dev: (1398.33, 1049.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 684, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (767.00, 717.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 976.356 CPU sec, 33.525 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 835494, 41, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 379, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1315)
[0000][PE] mean and std.dev: (373.99, 220.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (570.09, 151.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (329, 871, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (1202.90, 1159.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 2212, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5938)
[0000][PE] mean and std.dev: (1893.38, 1433.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.696 CPU sec, 33.048 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 835280, 32, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 462, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (433.56, 240.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.41, 150.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 582, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (891.59, 1020.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1075, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5475)
[0000][PE] mean and std.dev: (968.89, 610.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 986.504 CPU sec, 33.212 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (60, 836489, 48, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 316, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1267)
[0000][PE] mean and std.dev: (353.26, 251.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1023)
[0000][PE] mean and std.dev: (559.99, 149.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (167, 571, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (778.95, 836.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (390, 569, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (845.73, 698.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 987.552 CPU sec, 33.287 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (62, 833962, 42, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 404, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (392.47, 228.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 583, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 1050)
[0000][PE] mean and std.dev: (583.38, 151.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (310, 742, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (832.92, 778.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 717, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (855.70, 555.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 980.440 CPU sec, 33.054 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835524, 43, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 475, 600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1238)
[0000][PE] mean and std.dev: (448.60, 232.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.92, 151.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 677, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5760)
[0000][PE] mean and std.dev: (1135.40, 1199.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7619)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1192, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1252.92, 859.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.104 CPU sec, 32.820 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 835330, 45, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 389, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1091)
[0000][PE] mean and std.dev: (377.57, 178.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1039)
[0000][PE] mean and std.dev: (574.30, 150.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (209, 804, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (1213.05, 1344.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 450, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2036)
[0000][PE] mean and std.dev: (603.36, 376.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.460 CPU sec, 33.014 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835653, 42, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 418, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (406.89, 202.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (567.72, 150.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (278, 824, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1103.08, 1145.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 913, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (938.07, 718.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 980.660 CPU sec, 33.071 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 835542, 37, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 383, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (351.08, 163.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1027)
[0000][PE] mean and std.dev: (561.92, 150.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1212)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 878, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5830)
[0000][PE] mean and std.dev: (1366.94, 1296.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 987, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6212)
[0000][PE] mean and std.dev: (1425.75, 1359.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 985.404 CPU sec, 33.208 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (55, 836511, 52, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 422, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1130)
[0000][PE] mean and std.dev: (377.32, 185.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (566.17, 150.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (286, 771, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1182.13, 1240.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 968, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1231.38, 1044.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.324 CPU sec, 33.159 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 834926, 43, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 396, 583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1357)
[0000][PE] mean and std.dev: (384.46, 243.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (495, 587, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1062)
[0000][PE] mean and std.dev: (588.03, 153.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1251)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (227, 759, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6062)
[0000][PE] mean and std.dev: (1252.67, 1258.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8007)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1278, 3146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8276)
[0000][PE] mean and std.dev: (2085.57, 2116.03)
[0000][PE] low and high boundaries for proper pairs: (1, 10841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.220 CPU sec, 33.149 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 836062, 39, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 417, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (403.26, 203.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (491, 583, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1055)
[0000][PE] mean and std.dev: (583.35, 152.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1243)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (468, 1278, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (1157.24, 706.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 996, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (982.81, 366.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.072 CPU sec, 32.664 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835682, 36, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 470, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (412.03, 182.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.94, 152.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (229, 1094, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6427)
[0000][PE] mean and std.dev: (1329.06, 1246.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8493)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (523, 959, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2860)
[0000][PE] mean and std.dev: (950.93, 631.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.400 CPU sec, 33.055 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (74, 835453, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 406, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1350)
[0000][PE] mean and std.dev: (423.87, 241.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1042)
[0000][PE] mean and std.dev: (572.06, 151.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (252, 816, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1017.89, 1016.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6196)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1113, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1419.75, 1429.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.816 CPU sec, 32.840 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 835974, 34, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 429, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1237)
[0000][PE] mean and std.dev: (415.96, 235.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1045)
[0000][PE] mean and std.dev: (578.07, 151.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1231)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 937, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (763.28, 673.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1000.004 CPU sec, 33.753 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 836388, 30, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 422, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (383.43, 203.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1038)
[0000][PE] mean and std.dev: (570.61, 151.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (531, 1095, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1205.48, 903.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1089, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1448.54, 1186.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 988.932 CPU sec, 33.345 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 835983, 46, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 413, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1076)
[0000][PE] mean and std.dev: (382.05, 168.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 567, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1029)
[0000][PE] mean and std.dev: (563.73, 150.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (282, 598, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (844.07, 842.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 950, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1093.82, 660.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 979.564 CPU sec, 33.039 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (70, 836203, 44, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 410, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (357.75, 219.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (472, 565, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1021)
[0000][PE] mean and std.dev: (560.53, 149.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 852, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (1217.93, 1041.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7582)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1315, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (999.29, 549.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 985.748 CPU sec, 33.187 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 835494, 44, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 383, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1382)
[0000][PE] mean and std.dev: (360.60, 236.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.81, 150.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (305, 1006, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1059.50, 914.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1549, 3974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11038)
[0000][PE] mean and std.dev: (2151.92, 2284.03)
[0000][PE] low and high boundaries for proper pairs: (1, 14570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 991.064 CPU sec, 33.445 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (71, 834797, 38, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 414, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (399.19, 185.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1046)
[0000][PE] mean and std.dev: (578.60, 150.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (203, 532, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1207.32, 1403.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 982.996 CPU sec, 33.112 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 835255, 37, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 443, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (407.08, 213.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (493, 585, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 1057)
[0000][PE] mean and std.dev: (585.39, 152.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1245)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (243, 873, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6108)
[0000][PE] mean and std.dev: (1245.86, 1279.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1505, 3814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8922)
[0000][PE] mean and std.dev: (2420.00, 2110.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 983.564 CPU sec, 33.246 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (81, 836787, 53, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 356, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1287)
[0000][PE] mean and std.dev: (336.50, 191.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1040)
[0000][PE] mean and std.dev: (572.63, 151.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1226, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6450)
[0000][PE] mean and std.dev: (1536.59, 1412.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8462)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 995, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1536.27, 1234.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1010.588 CPU sec, 34.060 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 836958, 37, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 366, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1187)
[0000][PE] mean and std.dev: (392.25, 225.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 559, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1018)
[0000][PE] mean and std.dev: (554.73, 150.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (311, 562, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1114.28, 1159.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (440, 519, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (835.14, 758.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 973.848 CPU sec, 32.815 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 837944, 43, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 427, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (408.78, 214.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1037)
[0000][PE] mean and std.dev: (572.21, 150.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (371, 915, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6299)
[0000][PE] mean and std.dev: (1353.85, 1295.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8275)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (497, 838, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (935.67, 587.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.360 CPU sec, 32.612 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 837582, 41, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 432, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1080)
[0000][PE] mean and std.dev: (373.97, 184.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 573, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1034)
[0000][PE] mean and std.dev: (571.71, 150.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 1222, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (1278.33, 1103.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1397, 3705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9007)
[0000][PE] mean and std.dev: (2017.18, 1823.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.452 CPU sec, 32.679 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 837585, 44, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 476, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1038)
[0000][PE] mean and std.dev: (438.14, 193.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 569, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1029)
[0000][PE] mean and std.dev: (566.42, 150.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (308, 539, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (880.83, 1057.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1940, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (1574.85, 801.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 961.784 CPU sec, 32.410 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 837141, 48, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 425, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1126)
[0000][PE] mean and std.dev: (413.13, 217.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.23, 150.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (230, 1095, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6155)
[0000][PE] mean and std.dev: (1211.96, 1281.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8130)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1364, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1477.21, 492.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 962.588 CPU sec, 32.482 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (111, 836408, 46, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 371, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (362.10, 207.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (465, 559, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1020)
[0000][PE] mean and std.dev: (554.05, 150.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (173, 574, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (1117.56, 1309.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6905)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 689, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (817.75, 437.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.360 CPU sec, 32.838 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 836768, 45, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 397, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1193)
[0000][PE] mean and std.dev: (388.00, 206.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.46, 150.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 891, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5271)
[0000][PE] mean and std.dev: (1266.14, 1277.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1044, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1310.12, 1055.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 977.884 CPU sec, 33.010 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (95, 837707, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 393, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (372.35, 203.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (483, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1041)
[0000][PE] mean and std.dev: (573.53, 151.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (204, 1058, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6255)
[0000][PE] mean and std.dev: (1376.68, 1505.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8272)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 957.808 CPU sec, 32.282 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 837909, 39, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 418, 551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (394.44, 191.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] (25, 50, 75) percentile: (478, 570, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1033)
[0000][PE] mean and std.dev: (568.31, 150.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (207, 1039, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5781)
[0000][PE] mean and std.dev: (1407.13, 1398.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1098, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (1194.08, 836.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 960.116 CPU sec, 32.355 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 837660, 43, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 342, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (351.16, 206.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1028)
[0000][PE] mean and std.dev: (562.32, 150.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1213)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 857, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8127)
[0000][PE] mean and std.dev: (1410.62, 1632.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10764)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (630, 761, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (821.33, 421.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 962.480 CPU sec, 32.396 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (96, 836746, 50, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 447, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 997)
[0000][PE] mean and std.dev: (414.01, 161.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1021)
[0000][PE] mean and std.dev: (555.52, 150.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (285, 650, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (886.88, 844.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 684, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (753.88, 601.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.056 CPU sec, 32.787 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 837356, 42, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 387, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (351.49, 193.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 563, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1025)
[0000][PE] mean and std.dev: (559.34, 150.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1210)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (348, 1279, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1230.80, 992.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (557, 1579, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5654)
[0000][PE] mean and std.dev: (1530.60, 988.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 980.636 CPU sec, 33.052 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 839041, 45, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 423, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1228)
[0000][PE] mean and std.dev: (411.50, 240.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] (25, 50, 75) percentile: (488, 580, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1049)
[0000][PE] mean and std.dev: (579.48, 151.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (178, 851, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6271)
[0000][PE] mean and std.dev: (1377.56, 1555.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (406, 1394, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1362.50, 822.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 959.352 CPU sec, 32.351 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 838464, 46, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 418, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (398.33, 184.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1371)
[0000][PE] analyzing insert size distribution for orientation FR...
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] (25, 50, 75) percentile: (483, 575, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1041)
[0000][PE] mean and std.dev: (573.74, 151.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1227)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (293, 1102, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1148.67, 1099.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1380, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1932.10, 1558.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.100 CPU sec, 32.548 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 839350, 33, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 448, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1281)
[0000][PE] mean and std.dev: (433.41, 241.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (479, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1034)
[0000][PE] mean and std.dev: (568.93, 150.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (160, 663, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7021)
[0000][PE] mean and std.dev: (1180.78, 1306.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1067, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1037.68, 683.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 962.656 CPU sec, 32.471 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 838579, 39, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 396, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1242)
[0000][PE] mean and std.dev: (375.23, 215.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 564, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1026)
[0000][PE] mean and std.dev: (560.81, 150.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1211)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 1182, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1320.78, 1201.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7024)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1010, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (977.44, 570.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 957.724 CPU sec, 32.309 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 837649, 50, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 423, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (361.65, 207.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (464, 557, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1013)
[0000][PE] mean and std.dev: (552.30, 149.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1196)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (219, 523, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (797.89, 833.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 963, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1081.18, 627.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.240 CPU sec, 32.908 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 838988, 37, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 367, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1221)
[0000][PE] mean and std.dev: (400.93, 253.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1048)
[0000][PE] mean and std.dev: (578.73, 152.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (312, 1042, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1356.80, 1312.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8940)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 566, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (891.00, 633.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 959.704 CPU sec, 32.346 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 838943, 39, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 447, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1154)
[0000][PE] mean and std.dev: (407.51, 229.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1046)
[0000][PE] mean and std.dev: (576.37, 152.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (186, 905, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1109.34, 1144.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7622)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 985.384 CPU sec, 33.260 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 838766, 48, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 430, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1068)
[0000][PE] mean and std.dev: (412.17, 195.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1039)
[0000][PE] mean and std.dev: (571.63, 151.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (427, 1056, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5425)
[0000][PE] mean and std.dev: (1198.94, 964.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7091)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1218, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1134.69, 720.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 964.472 CPU sec, 32.458 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 838024, 39, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 435, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (407.20, 193.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1034)
[0000][PE] mean and std.dev: (566.41, 151.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (549, 1223, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1375.11, 1158.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1106, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7459)
[0000][PE] mean and std.dev: (1660.33, 1619.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1004.012 CPU sec, 33.850 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 837674, 44, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 441, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1179)
[0000][PE] mean and std.dev: (428.91, 217.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1040)
[0000][PE] mean and std.dev: (575.46, 150.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (292, 703, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1381.00, 1454.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8800)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 1089, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5608)
[0000][PE] mean and std.dev: (1179.50, 818.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.020 CPU sec, 32.523 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 837212, 38, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 436, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (405.14, 176.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1035)
[0000][PE] mean and std.dev: (570.17, 150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (385, 927, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1301.03, 1249.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1185, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7189)
[0000][PE] mean and std.dev: (1606.92, 1673.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.736 CPU sec, 32.570 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 837063, 44, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 386, 556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1206)
[0000][PE] mean and std.dev: (391.89, 222.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (475, 568, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1030)
[0000][PE] mean and std.dev: (565.24, 150.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (222, 587, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1077.91, 1101.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 786, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4201)
[0000][PE] mean and std.dev: (984.83, 913.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.452 CPU sec, 32.582 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (106, 836403, 43, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 421, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1381)
[0000][PE] mean and std.dev: (381.41, 215.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1023)
[0000][PE] mean and std.dev: (558.09, 150.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1208)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (299, 893, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6068)
[0000][PE] mean and std.dev: (1292.86, 1341.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7991)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.164 CPU sec, 32.841 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 837102, 45, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 389, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1125)
[0000][PE] mean and std.dev: (385.46, 189.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1019)
[0000][PE] mean and std.dev: (555.67, 150.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1203)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (315, 883, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7038)
[0000][PE] mean and std.dev: (1409.19, 1495.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9279)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1163, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (904.91, 526.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.360 CPU sec, 32.717 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 836807, 52, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 406, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1078)
[0000][PE] mean and std.dev: (381.96, 194.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (462, 556, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1011)
[0000][PE] mean and std.dev: (550.36, 149.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1194)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (434, 927, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1100.92, 979.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 851, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1484.00, 1257.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 980.408 CPU sec, 33.104 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 836700, 46, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 361, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1244)
[0000][PE] mean and std.dev: (403.73, 234.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (462, 556, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1011)
[0000][PE] mean and std.dev: (550.32, 149.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1194)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (266, 722, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (1105.57, 1108.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7402)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1523, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (1667.07, 997.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 986.168 CPU sec, 33.212 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 836577, 47, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 411, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (405.32, 224.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 576, 670)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 1040)
[0000][PE] mean and std.dev: (575.42, 150.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (216, 863, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (958.05, 884.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1385, 2928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6900)
[0000][PE] mean and std.dev: (1726.31, 1137.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 967.040 CPU sec, 32.639 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (108, 837284, 39, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 441, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1274)
[0000][PE] mean and std.dev: (415.57, 220.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 572, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1032)
[0000][PE] mean and std.dev: (570.01, 150.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 596, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (978.32, 953.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1183, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1222.81, 876.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 964.696 CPU sec, 32.476 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (107, 836741, 46, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 437, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (409.60, 192.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.76, 150.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 734, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7446)
[0000][PE] mean and std.dev: (1341.27, 1444.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9846)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 530, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (720.55, 461.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.832 CPU sec, 32.686 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (114, 837433, 47, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 457, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (405.57, 200.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 561, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 1018)
[0000][PE] mean and std.dev: (557.56, 149.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (283, 655, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1219.82, 1253.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.168 CPU sec, 32.664 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 836087, 40, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 392, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1204)
[0000][PE] mean and std.dev: (404.10, 226.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (463, 557, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1015)
[0000][PE] mean and std.dev: (551.75, 149.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1199)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (262, 1247, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7729)
[0000][PE] mean and std.dev: (1646.49, 1712.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10218)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 862, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (1001.36, 577.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 981.872 CPU sec, 33.095 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (87, 837326, 39, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 433, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1160)
[0000][PE] mean and std.dev: (412.66, 208.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 571, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.74, 151.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (228, 605, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7035)
[0000][PE] mean and std.dev: (1256.59, 1299.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9304)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 687, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (928.92, 840.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 972.420 CPU sec, 32.817 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 838524, 48, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 476, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1254)
[0000][PE] mean and std.dev: (435.15, 252.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (486, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1047)
[0000][PE] mean and std.dev: (577.65, 151.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 1074, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5978)
[0000][PE] mean and std.dev: (1179.56, 1234.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7902)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 963.744 CPU sec, 32.481 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (98, 838056, 41, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 449, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (407.10, 255.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1037)
[0000][PE] mean and std.dev: (572.21, 151.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (353, 657, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6260)
[0000][PE] mean and std.dev: (1250.58, 1156.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8229)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 2007, 4131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11153)
[0000][PE] mean and std.dev: (2235.90, 1861.81)
[0000][PE] low and high boundaries for proper pairs: (1, 14664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.604 CPU sec, 32.517 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (91, 837501, 64, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 396, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (378.05, 205.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1031)
[0000][PE] mean and std.dev: (565.93, 151.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1216)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (261, 1006, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6975)
[0000][PE] mean and std.dev: (1342.58, 1439.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9213)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 924, 3500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9292)
[0000][PE] mean and std.dev: (1937.73, 1985.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 964.696 CPU sec, 32.488 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 837803, 52, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 368, 508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (361.08, 195.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.13, 150.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (213, 932, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6414)
[0000][PE] mean and std.dev: (1487.78, 1643.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8481)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1016, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (1172.29, 636.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.460 CPU sec, 32.500 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (88, 837452, 42, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 464, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (423.02, 224.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 562, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1021)
[0000][PE] mean and std.dev: (558.29, 149.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1205)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (657, 1206, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1342.55, 1141.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 791, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4560)
[0000][PE] mean and std.dev: (1150.29, 1072.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 982.896 CPU sec, 33.161 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 838216, 37, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 417, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1059)
[0000][PE] mean and std.dev: (404.45, 174.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (487, 579, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1048)
[0000][PE] mean and std.dev: (578.55, 151.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 863, 2159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (1294.00, 1454.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7994)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 874, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (783.43, 514.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 960.772 CPU sec, 32.383 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (101, 837659, 44, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 483, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (460.54, 224.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (482, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1040)
[0000][PE] mean and std.dev: (573.22, 151.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (422, 1181, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5240)
[0000][PE] mean and std.dev: (1297.21, 1141.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1222, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (1386.93, 1205.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1006.256 CPU sec, 33.900 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (105, 837580, 48, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 444, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1124)
[0000][PE] mean and std.dev: (431.57, 213.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 570, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1036)
[0000][PE] mean and std.dev: (568.52, 151.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (412, 1058, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5224)
[0000][PE] mean and std.dev: (1162.27, 999.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 987.680 CPU sec, 33.242 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (77, 837843, 26, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 441, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (428.01, 201.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 570, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 1032)
[0000][PE] mean and std.dev: (567.16, 151.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (302, 761, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1253.38, 1220.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 772, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (853.88, 745.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.488 CPU sec, 33.232 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 837288, 43, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 373, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1208)
[0000][PE] mean and std.dev: (394.02, 194.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 1051)
[0000][PE] mean and std.dev: (581.70, 152.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1238)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (268, 1124, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1494.52, 1410.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7768)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (345, 780, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1085.77, 819.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.552 CPU sec, 32.610 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 837928, 33, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 444, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (440.65, 182.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1046)
[0000][PE] mean and std.dev: (576.13, 152.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 814, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (934.60, 799.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 803, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (879.27, 670.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.800 CPU sec, 32.592 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (97, 837449, 36, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 488, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (438.60, 226.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 1041)
[0000][PE] mean and std.dev: (571.50, 152.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1253, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8153)
[0000][PE] mean and std.dev: (1603.35, 1571.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10738)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.972 CPU sec, 32.554 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 837823, 52, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 491, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (458.26, 252.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1035)
[0000][PE] mean and std.dev: (565.16, 152.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1222)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (414, 1186, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1490.76, 1391.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7402)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1165, 2782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7728)
[0000][PE] mean and std.dev: (1664.08, 1931.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 965.852 CPU sec, 32.565 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 837916, 51, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 390, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (386.45, 212.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1030)
[0000][PE] mean and std.dev: (559.61, 152.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (333, 1002, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1108.52, 953.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 551, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6793)
[0000][PE] mean and std.dev: (846.00, 817.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.680 CPU sec, 32.637 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 837400, 35, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 431, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (428.71, 176.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 570, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (100, 1040)
[0000][PE] mean and std.dev: (567.46, 152.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1228)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (246, 641, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1188.74, 1392.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7398)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 2112, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1470.22, 748.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 982.440 CPU sec, 33.125 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 837645, 44, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 438, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1026)
[0000][PE] mean and std.dev: (417.14, 210.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1053)
[0000][PE] mean and std.dev: (581.29, 153.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (275, 968, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1326.88, 1411.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8219)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 961.572 CPU sec, 32.406 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (89, 837546, 46, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 452, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (435.48, 221.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 576, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (110, 1045)
[0000][PE] mean and std.dev: (575.57, 152.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (146, 540, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (804.00, 923.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1346, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1116.36, 578.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 962.668 CPU sec, 32.493 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (103, 838842, 49, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 418, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (429.63, 214.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1044)
[0000][PE] mean and std.dev: (571.49, 153.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (443, 832, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1328.92, 1231.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7059)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1426, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1400.90, 783.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 959.780 CPU sec, 32.351 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (61, 838273, 36, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 422, 563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (384.73, 208.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 567, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1037)
[0000][PE] mean and std.dev: (564.49, 153.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (339, 727, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1015.12, 1037.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7859)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (452, 751, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (841.20, 528.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.924 CPU sec, 32.757 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (75, 837335, 44, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 483, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1428)
[0000][PE] mean and std.dev: (438.57, 227.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (468, 563, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 1032)
[0000][PE] mean and std.dev: (559.08, 152.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1220)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (220, 630, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (1272.36, 1509.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7464)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 1583, 4160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11326)
[0000][PE] mean and std.dev: (2584.47, 2429.72)
[0000][PE] low and high boundaries for proper pairs: (1, 14909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 978.704 CPU sec, 32.992 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 837868, 44, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 418, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1097)
[0000][PE] mean and std.dev: (400.87, 195.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 573, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1044)
[0000][PE] mean and std.dev: (571.52, 153.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 1023, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6841)
[0000][PE] mean and std.dev: (1400.70, 1329.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9057)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1341, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4601)
[0000][PE] mean and std.dev: (1757.40, 1338.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 982.672 CPU sec, 33.068 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 838739, 38, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1096)
[0000][PE] mean and std.dev: (394.48, 197.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (492, 585, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1062)
[0000][PE] mean and std.dev: (585.60, 154.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1252)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (278, 923, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8675)
[0000][PE] mean and std.dev: (1768.32, 1736.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11474)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 608, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5486)
[0000][PE] mean and std.dev: (966.08, 1040.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 964.448 CPU sec, 32.501 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (80, 838595, 35, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 478, 576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1150)
[0000][PE] mean and std.dev: (435.38, 209.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 580, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1052)
[0000][PE] mean and std.dev: (580.15, 153.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (206, 479, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1041.56, 1166.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.008 CPU sec, 32.572 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (82, 839538, 54, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 441, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (409.77, 204.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1048)
[0000][PE] mean and std.dev: (575.66, 153.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1236)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (211, 1014, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1331.29, 1462.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8267)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1290, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (1227.13, 786.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.508 CPU sec, 32.522 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 838615, 38, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 418, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1135)
[0000][PE] mean and std.dev: (413.01, 231.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (477, 571, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 1041)
[0000][PE] mean and std.dev: (568.68, 153.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (201, 657, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1195.30, 1367.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6877)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (425, 1123, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1160.75, 883.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.644 CPU sec, 32.900 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (78, 838623, 58, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 393, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1250)
[0000][PE] mean and std.dev: (387.14, 225.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (471, 565, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1029)
[0000][PE] mean and std.dev: (561.60, 151.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (273, 1186, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1241.62, 1233.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7525)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.288 CPU sec, 32.581 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (72, 838294, 57, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 435, 640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (428.58, 226.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.43, 153.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (214, 977, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6871)
[0000][PE] mean and std.dev: (1355.28, 1304.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9090)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1217, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1046.93, 559.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.924 CPU sec, 32.886 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 838026, 39, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 474, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (422.46, 179.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (493, 585, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1063)
[0000][PE] mean and std.dev: (586.04, 155.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1253)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (338, 1179, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (973.06, 756.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5774)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 849, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6106)
[0000][PE] mean and std.dev: (1218.62, 1241.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 986.828 CPU sec, 33.246 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (92, 838933, 40, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 401, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (406.91, 248.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (488, 581, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (108, 1058)
[0000][PE] mean and std.dev: (581.35, 154.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (284, 885, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1144.16, 1098.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7356)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1376, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1560.91, 1008.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 976.244 CPU sec, 32.861 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (102, 839444, 46, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 416, 531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1063)
[0000][PE] mean and std.dev: (388.13, 187.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (484, 578, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1054)
[0000][PE] mean and std.dev: (577.12, 154.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1244)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (262, 1433, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7864)
[0000][PE] mean and std.dev: (1687.61, 1696.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10398)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 919, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1089.90, 805.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.860 CPU sec, 32.683 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (83, 838787, 45, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 476, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (430.54, 189.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (478, 572, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1042)
[0000][PE] mean and std.dev: (569.81, 153.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1230)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (271, 695, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6073)
[0000][PE] mean and std.dev: (1347.66, 1383.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8007)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1173, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1754.64, 1448.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 1019.128 CPU sec, 34.334 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (90, 838074, 47, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 455, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1433)
[0000][PE] mean and std.dev: (420.33, 261.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (473, 566, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (99, 1034)
[0000][PE] mean and std.dev: (563.29, 152.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1221)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (364, 917, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1229.50, 1081.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6796)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1007, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8767)
[0000][PE] mean and std.dev: (2146.64, 2100.42)
[0000][PE] low and high boundaries for proper pairs: (1, 11432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.464 CPU sec, 32.538 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (63, 837971, 43, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 371, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (365.75, 183.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (466, 560, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1021)
[0000][PE] mean and std.dev: (555.31, 150.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (432, 665, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (819.36, 621.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4336)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 966, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1059.78, 734.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 984.820 CPU sec, 33.213 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 836827, 43, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 429, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1344)
[0000][PE] mean and std.dev: (455.39, 245.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (490, 582, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 1057)
[0000][PE] mean and std.dev: (582.53, 153.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1246)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 527, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (802.33, 818.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 911, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1219.62, 1015.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.784 CPU sec, 32.782 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (93, 837832, 47, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 403, 500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 968)
[0000][PE] mean and std.dev: (380.30, 184.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 578, 673)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1049)
[0000][PE] mean and std.dev: (577.28, 153.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1237)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (301, 1087, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5953)
[0000][PE] mean and std.dev: (1406.80, 1349.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7837)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 968.484 CPU sec, 32.681 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (113, 837173, 47, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 456, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1418)
[0000][PE] mean and std.dev: (440.07, 238.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (481, 574, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (105, 1045)
[0000][PE] mean and std.dev: (573.04, 152.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 705, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1132.93, 1182.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 978, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (935.77, 696.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 969.976 CPU sec, 32.696 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (85, 837329, 38, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 435, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1082)
[0000][PE] mean and std.dev: (403.18, 190.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (476, 569, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 1037)
[0000][PE] mean and std.dev: (566.63, 152.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (245, 726, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (664.29, 590.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 1031, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6544)
[0000][PE] mean and std.dev: (1614.36, 1739.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.868 CPU sec, 32.858 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 837772, 47, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 408, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1359)
[0000][PE] mean and std.dev: (388.31, 201.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (470, 564, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 1031)
[0000][PE] mean and std.dev: (560.56, 152.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1218)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (263, 492, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (865.61, 844.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 984, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1058.53, 720.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 975.160 CPU sec, 32.844 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 837568, 52, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 389, 574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (392.39, 195.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 561, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1022)
[0000][PE] mean and std.dev: (556.37, 150.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (411, 982, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1148.22, 980.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1017, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (830.55, 549.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 985.800 CPU sec, 33.217 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 836626, 42, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 420, 587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1231)
[0000][PE] mean and std.dev: (428.27, 223.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 581, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1053)
[0000][PE] mean and std.dev: (581.39, 152.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1241)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 940, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5284)
[0000][PE] mean and std.dev: (1215.95, 1147.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1139, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9145)
[0000][PE] mean and std.dev: (2049.58, 2562.89)
[0000][PE] low and high boundaries for proper pairs: (1, 12301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.456 CPU sec, 32.688 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (94, 837929, 50, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 416, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1047)
[0000][PE] mean and std.dev: (394.76, 179.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (485, 577, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 1046)
[0000][PE] mean and std.dev: (576.49, 152.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1233)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (256, 717, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7918)
[0000][PE] mean and std.dev: (1345.62, 1492.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10472)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 859, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (926.00, 740.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 966.952 CPU sec, 32.603 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (99, 837369, 45, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 448, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1295)
[0000][PE] mean and std.dev: (441.60, 225.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (480, 574, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 1044)
[0000][PE] mean and std.dev: (572.01, 152.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1232)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (310, 1013, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (1237.02, 1090.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 426, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2689)
[0000][PE] mean and std.dev: (689.64, 530.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 971.392 CPU sec, 32.705 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (84, 836953, 45, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 448, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1263)
[0000][PE] mean and std.dev: (440.89, 209.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (474, 568, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (98, 1038)
[0000][PE] mean and std.dev: (565.72, 152.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (267, 632, 3192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9042)
[0000][PE] mean and std.dev: (1688.58, 1934.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11967)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.868 CPU sec, 32.922 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (79, 837960, 36, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 400, 539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (380.65, 188.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (469, 563, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 1030)
[0000][PE] mean and std.dev: (559.87, 152.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (295, 773, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (940.12, 884.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1049, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5992)
[0000][PE] mean and std.dev: (1334.94, 986.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 974.008 CPU sec, 32.830 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (76, 837831, 43, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 464, 578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1170)
[0000][PE] mean and std.dev: (430.14, 196.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (467, 561, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 1022)
[0000][PE] mean and std.dev: (556.26, 150.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (358, 670, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1355.33, 1388.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7230)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (363, 958, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (830.93, 592.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 986.844 CPU sec, 33.302 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (86, 837202, 40, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 470, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1285)
[0000][PE] mean and std.dev: (447.98, 243.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (494, 586, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 1064)
[0000][PE] mean and std.dev: (587.10, 154.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1254)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (330, 862, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1107.90, 1081.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1057, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (1000.85, 467.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.632 CPU sec, 32.735 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 300000000, work_chunk_size: 300000144, nseq: 2027028
	[0000][ M::kt_pipeline] read 2027028 sequences (300000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3137454505, n: 2027028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (100, 837520, 40, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 425, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1176)
[0000][PE] mean and std.dev: (418.15, 201.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (489, 582, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 1059)
[0000][PE] mean and std.dev: (582.31, 154.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1249)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 877, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1040.14, 951.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6826)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (607, 1251, 3913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10525)
[0000][PE] mean and std.dev: (2028.46, 1712.14)
[0000][PE] low and high boundaries for proper pairs: (1, 13831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2027028 reads in 970.736 CPU sec, 32.730 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
