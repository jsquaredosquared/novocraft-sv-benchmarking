Looking to launch executable "/usr/local/bin/bwa-mem2.avx", simd = .avx
Launching executable "/usr/local/bin/bwa-mem2.avx"
-----------------------------
Executing in AVX mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh38_GIABv3_no_alt_analysis_set_maskedGRC_decoys_MAP2K3_KMT2C_KCNJ18.fasta
* Entering FMI_search
* Index file found. Loading index from /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh38_GIABv3_no_alt_analysis_set_maskedGRC_decoys_MAP2K3_KMT2C_KCNJ18.fasta.bwt.2bit.64
* Reference seq len for bi-index = 6201770307
* sentinel-index: 2638079714
* Count:
0,	1
1,	1818448184
2,	3100885154
3,	4383322124
4,	6201770307

* Reading other elements of the index from files /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh38_GIABv3_no_alt_analysis_set_maskedGRC_decoys_MAP2K3_KMT2C_KCNJ18.fasta
* Index prefix: /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh38_GIABv3_no_alt_analysis_set_maskedGRC_decoys_MAP2K3_KMT2C_KCNJ18.fasta
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = /export/home/jeffrey/Documents/sv-benchmarking/resources/reference-genome/GRCh38_GIABv3_no_alt_analysis_set_maskedGRC_decoys_MAP2K3_KMT2C_KCNJ18.fasta.0123
* Reference genome size: 6201770306 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 7802.9344 MB
2. Memory pre-allocation for BSW: 13418.5533 MB
3. Memory pre-allocation for BWT: 4329.5939 MB
------------------------------------------
* Threads used (compute): 56
* No. of pipeline threads: 2

[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2380, 1552762, 172, 1769)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 252, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (252.16, 94.67)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.49, 87.45)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 41, 132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 358)
[0000][PE] mean and std.dev: (52.27, 61.40)
[0000][PE] low and high boundaries for proper pairs: (1, 471)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (259.93, 97.81)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3058.327 CPU sec, 58.698 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2387, 1551187, 155, 1897)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (250.21, 93.87)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.77, 87.19)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 35, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 195)
[0000][PE] mean and std.dev: (36.77, 33.92)
[0000][PE] low and high boundaries for proper pairs: (1, 255)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 256, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (256.03, 92.88)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3091.547 CPU sec, 60.527 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2352, 1551185, 167, 1843)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (250.41, 95.57)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.57, 87.07)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 38, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 257)
[0000][PE] mean and std.dev: (42.21, 45.22)
[0000][PE] low and high boundaries for proper pairs: (1, 337)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 254, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (258.18, 95.44)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3102.315 CPU sec, 57.458 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2325, 1551932, 151, 1768)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (247.69, 94.96)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.77, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 33, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 192)
[0000][PE] mean and std.dev: (38.62, 35.89)
[0000][PE] low and high boundaries for proper pairs: (1, 250)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (256.72, 94.94)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3032.710 CPU sec, 55.961 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2373, 1551941, 172, 1815)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 567)
[0000][PE] mean and std.dev: (247.94, 92.51)
[0000][PE] low and high boundaries for proper pairs: (1, 694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.67, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 31, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 171)
[0000][PE] mean and std.dev: (33.51, 30.69)
[0000][PE] low and high boundaries for proper pairs: (1, 223)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (261.54, 99.76)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3057.293 CPU sec, 56.401 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2431, 1552230, 176, 1726)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (249.39, 95.36)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.25, 87.34)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 36, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 177)
[0000][PE] mean and std.dev: (40.73, 32.77)
[0000][PE] low and high boundaries for proper pairs: (1, 229)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 252, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (256.56, 97.22)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3000.657 CPU sec, 55.225 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2418, 1551522, 163, 1765)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 243, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 569)
[0000][PE] mean and std.dev: (244.86, 92.54)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.58, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 313)
[0000][PE] mean and std.dev: (49.50, 53.52)
[0000][PE] low and high boundaries for proper pairs: (1, 411)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 252, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (253.87, 94.92)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3026.000 CPU sec, 55.571 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2349, 1550579, 181, 1785)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (248.23, 95.95)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.36, 87.46)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 43, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 301)
[0000][PE] mean and std.dev: (46.62, 48.16)
[0000][PE] low and high boundaries for proper pairs: (1, 396)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 252, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (255.21, 96.72)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3047.653 CPU sec, 55.950 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2370, 1552898, 171, 1837)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 247, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (249.32, 96.14)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.53, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 272)
[0000][PE] mean and std.dev: (42.28, 44.39)
[0000][PE] low and high boundaries for proper pairs: (1, 357)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (256.44, 95.17)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3023.858 CPU sec, 55.832 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2371, 1551525, 189, 1842)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (250.06, 97.77)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.70, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 179)
[0000][PE] mean and std.dev: (38.10, 32.70)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 257, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (258.46, 96.31)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3038.100 CPU sec, 56.319 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2349, 1552769, 184, 1796)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 244, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (245.56, 94.86)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.74, 87.38)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 39, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 298)
[0000][PE] mean and std.dev: (45.38, 46.38)
[0000][PE] low and high boundaries for proper pairs: (1, 392)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (255.42, 92.50)
[0000][PE] low and high boundaries for proper pairs: (1, 704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3071.012 CPU sec, 56.604 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2285, 1550555, 172, 1712)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (249.80, 95.94)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.53, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 31, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 251)
[0000][PE] mean and std.dev: (44.74, 50.38)
[0000][PE] low and high boundaries for proper pairs: (1, 329)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 254, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (251.70, 94.39)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3149.163 CPU sec, 57.799 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2333, 1550461, 164, 1871)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 244, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (248.16, 94.14)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.30, 87.15)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 41, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 186)
[0000][PE] mean and std.dev: (41.40, 36.68)
[0000][PE] low and high boundaries for proper pairs: (1, 242)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 251, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (256.53, 98.50)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3210.123 CPU sec, 58.853 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2307, 1548970, 160, 1834)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 247, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (248.08, 96.73)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.36, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 32, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 243)
[0000][PE] mean and std.dev: (37.11, 39.50)
[0000][PE] low and high boundaries for proper pairs: (1, 319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 250, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (255.74, 98.49)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3173.687 CPU sec, 58.092 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2339, 1550422, 175, 1829)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 248, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (248.65, 94.51)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.30, 87.42)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 42, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 230)
[0000][PE] mean and std.dev: (43.04, 38.58)
[0000][PE] low and high boundaries for proper pairs: (1, 301)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 252, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (258.06, 92.40)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3205.809 CPU sec, 59.249 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2414, 1551808, 173, 1824)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 247, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (247.77, 98.11)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.36, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 271)
[0000][PE] mean and std.dev: (49.55, 51.62)
[0000][PE] low and high boundaries for proper pairs: (1, 355)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (257.08, 93.67)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3208.065 CPU sec, 59.235 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2309, 1552554, 179, 1804)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 243, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (245.38, 96.29)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.57, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 39, 120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 320)
[0000][PE] mean and std.dev: (51.81, 56.46)
[0000][PE] low and high boundaries for proper pairs: (1, 420)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (258.68, 99.04)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3235.834 CPU sec, 59.048 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2339, 1551824, 165, 1860)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 245, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 570)
[0000][PE] mean and std.dev: (247.17, 94.04)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.51, 87.37)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 36, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 195)
[0000][PE] mean and std.dev: (41.29, 38.48)
[0000][PE] low and high boundaries for proper pairs: (1, 254)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (260.51, 98.07)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3261.725 CPU sec, 59.393 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2288, 1552234, 191, 1780)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (251.48, 97.44)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.35, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 37, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (39.01, 34.67)
[0000][PE] low and high boundaries for proper pairs: (1, 316)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (259.52, 94.96)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3279.863 CPU sec, 59.984 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2370, 1551914, 192, 1891)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (246.53, 95.80)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.36, 87.41)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 36, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 222)
[0000][PE] mean and std.dev: (35.28, 35.28)
[0000][PE] low and high boundaries for proper pairs: (1, 291)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 252, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (256.45, 95.33)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3289.099 CPU sec, 60.363 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2290, 1548995, 181, 1895)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 245, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (248.08, 97.35)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.06, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 40, 120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 324)
[0000][PE] mean and std.dev: (47.49, 52.57)
[0000][PE] low and high boundaries for proper pairs: (1, 426)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 254, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (255.05, 94.27)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3285.782 CPU sec, 59.856 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2351, 1551929, 162, 1857)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 243, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (248.40, 98.51)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.16, 87.32)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 31, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 240)
[0000][PE] mean and std.dev: (39.12, 41.30)
[0000][PE] low and high boundaries for proper pairs: (1, 316)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (259.32, 95.01)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3269.372 CPU sec, 59.761 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2331, 1551404, 184, 1843)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 245, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (246.46, 94.71)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.93, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 46, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 212)
[0000][PE] mean and std.dev: (45.57, 35.57)
[0000][PE] low and high boundaries for proper pairs: (1, 276)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (258.23, 96.58)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3303.468 CPU sec, 60.276 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2313, 1552380, 160, 1865)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 243, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 564)
[0000][PE] mean and std.dev: (245.83, 94.36)
[0000][PE] low and high boundaries for proper pairs: (1, 691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.72, 87.52)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 42, 106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 280)
[0000][PE] mean and std.dev: (47.69, 49.86)
[0000][PE] low and high boundaries for proper pairs: (1, 367)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 250, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (248.92, 89.76)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3245.381 CPU sec, 59.406 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2295, 1551334, 169, 1819)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 248, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (249.11, 94.43)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.90, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 32, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 301)
[0000][PE] mean and std.dev: (42.33, 48.49)
[0000][PE] low and high boundaries for proper pairs: (1, 396)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 255, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (258.20, 94.34)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3250.801 CPU sec, 59.598 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2266, 1551009, 218, 1807)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (247.40, 94.91)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.04, 87.54)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 45, 103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 267)
[0000][PE] mean and std.dev: (50.42, 49.83)
[0000][PE] low and high boundaries for proper pairs: (1, 349)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (258.11, 98.08)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3238.404 CPU sec, 58.962 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2319, 1550193, 170, 1795)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 249, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (251.49, 98.50)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.53, 87.41)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 247)
[0000][PE] mean and std.dev: (41.69, 45.55)
[0000][PE] low and high boundaries for proper pairs: (1, 324)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (255.20, 95.43)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3264.525 CPU sec, 59.845 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2327, 1551452, 174, 1805)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (248.67, 93.93)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.17, 87.49)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 31, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 196)
[0000][PE] mean and std.dev: (33.01, 28.55)
[0000][PE] low and high boundaries for proper pairs: (1, 256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (259.47, 95.16)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3216.467 CPU sec, 59.424 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2316, 1549687, 174, 1810)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 251, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (251.44, 95.66)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.74, 87.44)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 42, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 270)
[0000][PE] mean and std.dev: (48.78, 50.20)
[0000][PE] low and high boundaries for proper pairs: (1, 355)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (259.76, 94.90)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3288.227 CPU sec, 60.358 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2376, 1549557, 175, 1895)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 246, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (250.00, 93.91)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.68, 87.47)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 286)
[0000][PE] mean and std.dev: (46.34, 50.57)
[0000][PE] low and high boundaries for proper pairs: (1, 376)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 258, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (259.91, 96.61)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3262.073 CPU sec, 60.142 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2352, 1550552, 164, 1831)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (249.59, 97.07)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.63, 87.45)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 36, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 170)
[0000][PE] mean and std.dev: (34.04, 24.40)
[0000][PE] low and high boundaries for proper pairs: (1, 221)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 261, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 620)
[0000][PE] mean and std.dev: (259.77, 98.67)
[0000][PE] low and high boundaries for proper pairs: (1, 763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3198.937 CPU sec, 58.353 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2260, 1548787, 186, 1773)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 575)
[0000][PE] mean and std.dev: (246.60, 93.89)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.45, 87.43)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 39, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 240)
[0000][PE] mean and std.dev: (40.97, 37.00)
[0000][PE] low and high boundaries for proper pairs: (1, 313)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 256, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (257.75, 96.23)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3290.173 CPU sec, 60.009 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2288, 1550451, 149, 1923)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 252, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (250.30, 91.05)
[0000][PE] low and high boundaries for proper pairs: (1, 690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.82, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 283)
[0000][PE] mean and std.dev: (47.63, 50.91)
[0000][PE] low and high boundaries for proper pairs: (1, 372)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (257.63, 94.12)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3326.817 CPU sec, 60.971 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2280, 1550954, 149, 1827)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 244, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 570)
[0000][PE] mean and std.dev: (247.32, 93.79)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.03, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 31, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 177)
[0000][PE] mean and std.dev: (33.93, 31.00)
[0000][PE] low and high boundaries for proper pairs: (1, 231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (257.06, 100.23)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3301.679 CPU sec, 60.738 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2307, 1547886, 190, 1895)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (252.47, 97.77)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.56, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 324)
[0000][PE] mean and std.dev: (48.70, 57.80)
[0000][PE] low and high boundaries for proper pairs: (1, 426)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (256.23, 97.54)
[0000][PE] low and high boundaries for proper pairs: (1, 759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3383.594 CPU sec, 62.419 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2282, 1548772, 170, 1856)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 243, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (245.91, 94.62)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.57, 87.37)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 39, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 256)
[0000][PE] mean and std.dev: (40.49, 38.35)
[0000][PE] low and high boundaries for proper pairs: (1, 335)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 259, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (259.42, 98.05)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3355.040 CPU sec, 61.422 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2266, 1551706, 187, 1814)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 251, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (251.06, 93.70)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.02, 87.54)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 370)
[0000][PE] mean and std.dev: (51.77, 60.69)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 263, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (263.59, 97.35)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3247.363 CPU sec, 59.420 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2308, 1549042, 211, 1809)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 250, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (253.09, 95.31)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.84, 87.57)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 41, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 226)
[0000][PE] mean and std.dev: (44.42, 39.53)
[0000][PE] low and high boundaries for proper pairs: (1, 296)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 259, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (260.29, 95.27)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3305.114 CPU sec, 61.608 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2273, 1549666, 159, 1854)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 254, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (253.46, 92.60)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.34, 87.58)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 29, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (33.58, 31.61)
[0000][PE] low and high boundaries for proper pairs: (1, 249)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 259, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (263.46, 97.19)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3343.631 CPU sec, 61.019 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2349, 1546119, 191, 1856)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 252, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (255.37, 99.31)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.77, 87.47)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 42, 108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 290)
[0000][PE] mean and std.dev: (47.78, 52.83)
[0000][PE] low and high boundaries for proper pairs: (1, 381)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 259, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (262.30, 94.62)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3715.721 CPU sec, 67.849 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2126, 1543361, 195, 1848)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (249.93, 96.37)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.53, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 37, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 173)
[0000][PE] mean and std.dev: (36.40, 30.69)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 255, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (262.17, 97.97)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 4713.199 CPU sec, 85.916 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2325, 1547566, 176, 1782)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 250, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (253.58, 99.69)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.53, 87.19)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 38, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 236)
[0000][PE] mean and std.dev: (46.28, 43.18)
[0000][PE] low and high boundaries for proper pairs: (1, 308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 257, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (257.96, 95.98)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3733.973 CPU sec, 68.259 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2241, 1548999, 168, 1882)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 251, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (253.44, 94.98)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.40, 87.69)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (52.05, 63.28)
[0000][PE] low and high boundaries for proper pairs: (1, 479)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (263.09, 97.81)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3359.766 CPU sec, 61.396 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2023, 1552243, 171, 1907)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 252, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (252.07, 94.46)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.38, 87.53)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 32, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 224)
[0000][PE] mean and std.dev: (38.21, 39.07)
[0000][PE] low and high boundaries for proper pairs: (1, 294)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (258.92, 97.69)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3311.636 CPU sec, 60.416 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2293, 1551645, 161, 1722)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 249, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (253.97, 95.14)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.92, 86.96)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 36, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 188)
[0000][PE] mean and std.dev: (38.42, 32.03)
[0000][PE] low and high boundaries for proper pairs: (1, 245)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 254, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (256.29, 96.61)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3292.371 CPU sec, 60.232 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2344, 1550230, 176, 1809)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 243, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (247.55, 98.07)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.45, 86.92)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 340)
[0000][PE] mean and std.dev: (41.73, 45.83)
[0000][PE] low and high boundaries for proper pairs: (1, 448)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 254, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (256.60, 99.02)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3309.213 CPU sec, 60.960 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2328, 1549855, 190, 1789)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 243, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (245.29, 94.67)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.14, 87.11)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 39, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (37.51, 31.19)
[0000][PE] low and high boundaries for proper pairs: (1, 240)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 259, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (261.13, 97.44)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3275.513 CPU sec, 59.967 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2285, 1550856, 179, 1781)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (248.43, 94.58)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.31, 87.04)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 33, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 173)
[0000][PE] mean and std.dev: (37.13, 34.11)
[0000][PE] low and high boundaries for proper pairs: (1, 226)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (256.22, 96.58)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3278.436 CPU sec, 60.414 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2241, 1550553, 161, 1744)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (251.05, 97.43)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.05, 87.07)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 64)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 156)
[0000][PE] mean and std.dev: (36.58, 32.32)
[0000][PE] low and high boundaries for proper pairs: (1, 202)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (255.15, 93.09)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3227.484 CPU sec, 59.133 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2339, 1549415, 175, 1725)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 245, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (247.50, 93.89)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.45, 86.94)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 264)
[0000][PE] mean and std.dev: (47.23, 48.16)
[0000][PE] low and high boundaries for proper pairs: (1, 346)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 257, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (255.83, 93.19)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3304.212 CPU sec, 60.694 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2292, 1549929, 157, 1738)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (248.39, 97.02)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.86, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 31, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 231)
[0000][PE] mean and std.dev: (41.45, 42.35)
[0000][PE] low and high boundaries for proper pairs: (1, 303)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (256.13, 96.34)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3263.539 CPU sec, 59.479 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2340, 1550148, 173, 1762)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 247, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 560)
[0000][PE] mean and std.dev: (248.63, 91.98)
[0000][PE] low and high boundaries for proper pairs: (1, 684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.87, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 48, 112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 288)
[0000][PE] mean and std.dev: (51.16, 50.55)
[0000][PE] low and high boundaries for proper pairs: (1, 376)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 257, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (258.10, 99.26)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3250.619 CPU sec, 59.268 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2164, 1551014, 175, 1783)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (248.50, 96.82)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.81, 87.26)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 409)
[0000][PE] mean and std.dev: (62.26, 84.31)
[0000][PE] low and high boundaries for proper pairs: (1, 540)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 255, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (258.28, 98.99)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3225.591 CPU sec, 58.915 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2203, 1549669, 158, 1802)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 244, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (247.64, 96.15)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.26, 87.03)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 184)
[0000][PE] mean and std.dev: (37.72, 30.79)
[0000][PE] low and high boundaries for proper pairs: (1, 240)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (253.24, 91.72)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3305.849 CPU sec, 60.409 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2321, 1550017, 190, 1790)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (246.88, 94.94)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.48, 86.99)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 44, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 254)
[0000][PE] mean and std.dev: (44.16, 37.84)
[0000][PE] low and high boundaries for proper pairs: (1, 332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (257.36, 93.94)
[0000][PE] low and high boundaries for proper pairs: (1, 704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3246.732 CPU sec, 59.290 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2234, 1549906, 174, 1813)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 244, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (248.00, 94.44)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.60, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 37, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 236)
[0000][PE] mean and std.dev: (43.46, 41.38)
[0000][PE] low and high boundaries for proper pairs: (1, 309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (257.37, 93.05)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3256.464 CPU sec, 59.521 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2340, 1550070, 176, 1851)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (250.14, 95.66)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.85, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 42, 107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 285)
[0000][PE] mean and std.dev: (47.64, 45.55)
[0000][PE] low and high boundaries for proper pairs: (1, 374)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 259, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (261.25, 99.39)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3223.403 CPU sec, 58.800 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2342, 1550385, 158, 1772)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 246, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (247.87, 93.95)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.00, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 40, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 234)
[0000][PE] mean and std.dev: (41.36, 34.36)
[0000][PE] low and high boundaries for proper pairs: (1, 306)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 254, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (254.96, 97.74)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3237.590 CPU sec, 59.228 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2323, 1550674, 180, 1747)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 245, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (250.43, 94.60)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.14, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 40, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 234)
[0000][PE] mean and std.dev: (45.76, 39.74)
[0000][PE] low and high boundaries for proper pairs: (1, 305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 255, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (259.36, 96.35)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3191.004 CPU sec, 58.699 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2334, 1550957, 155, 1809)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (252.58, 94.36)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.90, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 38, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 176)
[0000][PE] mean and std.dev: (39.75, 32.08)
[0000][PE] low and high boundaries for proper pairs: (1, 228)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (256.74, 97.10)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3250.562 CPU sec, 59.283 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2326, 1550984, 192, 1793)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 245, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (247.82, 97.78)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.16, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 40, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 296)
[0000][PE] mean and std.dev: (44.91, 48.82)
[0000][PE] low and high boundaries for proper pairs: (1, 389)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (257.60, 96.93)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3262.187 CPU sec, 59.565 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2290, 1550636, 174, 1834)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (252.62, 97.48)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.97, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 41, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 234)
[0000][PE] mean and std.dev: (44.47, 38.11)
[0000][PE] low and high boundaries for proper pairs: (1, 305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (258.09, 95.95)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3238.620 CPU sec, 59.289 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2172, 1550141, 174, 1841)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 244, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (246.08, 92.39)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.57, 86.99)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 38, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 222)
[0000][PE] mean and std.dev: (43.83, 42.92)
[0000][PE] low and high boundaries for proper pairs: (1, 291)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (260.86, 99.42)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3330.693 CPU sec, 60.843 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2288, 1551844, 153, 1799)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 250, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (250.56, 95.19)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.41, 87.50)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 34, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 177)
[0000][PE] mean and std.dev: (31.43, 26.69)
[0000][PE] low and high boundaries for proper pairs: (1, 231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 257, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (259.15, 94.49)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3219.366 CPU sec, 59.268 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2236, 1551067, 164, 1780)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (250.59, 96.31)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.47, 87.40)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 38, 81)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 203)
[0000][PE] mean and std.dev: (40.40, 34.81)
[0000][PE] low and high boundaries for proper pairs: (1, 264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (264.14, 99.31)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3226.030 CPU sec, 58.954 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2278, 1552145, 171, 1770)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (249.43, 94.06)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.67, 87.49)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 42, 114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 306)
[0000][PE] mean and std.dev: (43.34, 45.14)
[0000][PE] low and high boundaries for proper pairs: (1, 402)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 259, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (258.05, 97.22)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3204.208 CPU sec, 58.847 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2224, 1550990, 165, 1761)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (251.36, 95.27)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.65, 87.56)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 208)
[0000][PE] mean and std.dev: (41.60, 37.11)
[0000][PE] low and high boundaries for proper pairs: (1, 272)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (257.51, 97.65)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3231.467 CPU sec, 59.069 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2211, 1550800, 164, 1794)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 245, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (248.59, 96.27)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.80, 87.41)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 35, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 214)
[0000][PE] mean and std.dev: (38.14, 37.43)
[0000][PE] low and high boundaries for proper pairs: (1, 280)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 256, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (258.19, 96.19)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3208.114 CPU sec, 58.687 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2312, 1550947, 169, 1793)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 243, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (246.90, 95.36)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.07, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 36, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 192)
[0000][PE] mean and std.dev: (38.13, 32.43)
[0000][PE] low and high boundaries for proper pairs: (1, 251)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (257.77, 95.19)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3292.629 CPU sec, 59.881 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2295, 1549434, 168, 1755)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 252, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (252.39, 95.99)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.47, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 34, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 222)
[0000][PE] mean and std.dev: (39.07, 38.57)
[0000][PE] low and high boundaries for proper pairs: (1, 290)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 252, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (254.97, 94.91)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3300.882 CPU sec, 60.355 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2358, 1545727, 177, 1791)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 244, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (248.16, 96.88)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.99, 87.11)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 42, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 278)
[0000][PE] mean and std.dev: (48.30, 52.79)
[0000][PE] low and high boundaries for proper pairs: (1, 365)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 254, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (257.02, 94.00)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3350.600 CPU sec, 61.209 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2261, 1549351, 197, 1764)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (248.44, 92.46)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.26, 87.40)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 226)
[0000][PE] mean and std.dev: (43.20, 44.45)
[0000][PE] low and high boundaries for proper pairs: (1, 296)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (258.94, 96.93)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3287.280 CPU sec, 59.954 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2314, 1547608, 166, 1788)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (246.68, 95.56)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.49, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 33, 81)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 207)
[0000][PE] mean and std.dev: (43.10, 40.04)
[0000][PE] low and high boundaries for proper pairs: (1, 270)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (258.64, 98.26)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3331.125 CPU sec, 60.989 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2190, 1548551, 179, 1725)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (253.02, 97.07)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.82, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 43, 119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 315)
[0000][PE] mean and std.dev: (50.68, 53.63)
[0000][PE] low and high boundaries for proper pairs: (1, 413)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (259.94, 97.10)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3267.089 CPU sec, 59.947 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2291, 1547752, 158, 1877)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (251.13, 96.80)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.07, 86.95)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 38, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 212)
[0000][PE] mean and std.dev: (44.65, 41.76)
[0000][PE] low and high boundaries for proper pairs: (1, 276)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 261, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (257.30, 90.98)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3366.485 CPU sec, 61.431 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2189, 1546114, 175, 1813)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (252.65, 97.49)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.26, 87.04)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 79)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 205)
[0000][PE] mean and std.dev: (40.36, 36.96)
[0000][PE] low and high boundaries for proper pairs: (1, 268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (257.71, 98.06)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3367.004 CPU sec, 61.585 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2234, 1533275, 157, 1755)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 250, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (253.56, 99.74)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.40, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 32, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 187)
[0000][PE] mean and std.dev: (34.48, 32.46)
[0000][PE] low and high boundaries for proper pairs: (1, 244)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 257, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (259.69, 98.34)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3509.833 CPU sec, 64.264 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2280, 1548283, 175, 1866)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 250, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (248.70, 93.04)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.98, 87.09)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 49, 126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 336)
[0000][PE] mean and std.dev: (58.95, 60.58)
[0000][PE] low and high boundaries for proper pairs: (1, 441)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 260, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (260.15, 96.11)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3361.024 CPU sec, 61.294 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2263, 1547432, 170, 1810)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 254, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (255.10, 98.04)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.98, 87.26)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (23, 43, 116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 302)
[0000][PE] mean and std.dev: (52.34, 53.87)
[0000][PE] low and high boundaries for proper pairs: (1, 395)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (253.64, 92.45)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3350.691 CPU sec, 61.320 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2187, 1546308, 164, 1822)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (252.59, 94.97)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.48, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 37, 108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 288)
[0000][PE] mean and std.dev: (43.16, 46.93)
[0000][PE] low and high boundaries for proper pairs: (1, 378)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (257.86, 95.75)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3399.128 CPU sec, 62.616 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2246, 1550368, 169, 1778)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (250.71, 94.93)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.81, 87.58)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 32, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 178)
[0000][PE] mean and std.dev: (37.75, 33.21)
[0000][PE] low and high boundaries for proper pairs: (1, 231)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (257.92, 94.96)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3253.530 CPU sec, 59.331 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2161, 1549345, 150, 1821)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 254, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 603)
[0000][PE] mean and std.dev: (256.49, 98.21)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.80, 87.47)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 31, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 285)
[0000][PE] mean and std.dev: (43.55, 48.93)
[0000][PE] low and high boundaries for proper pairs: (1, 375)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (258.35, 94.32)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3322.572 CPU sec, 60.598 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2318, 1550596, 187, 1822)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 252, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (253.01, 96.80)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 661)
[0000][PE] mean and std.dev: (376.11, 87.74)
[0000][PE] low and high boundaries for proper pairs: (1, 775)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 38, 107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 281)
[0000][PE] mean and std.dev: (46.17, 47.08)
[0000][PE] low and high boundaries for proper pairs: (1, 368)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 251, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (256.86, 94.87)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3239.951 CPU sec, 59.119 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2203, 1548276, 178, 1820)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 246, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (251.08, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.74, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 252)
[0000][PE] mean and std.dev: (42.78, 43.98)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (260.55, 98.44)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3374.227 CPU sec, 61.768 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2260, 1544467, 167, 1865)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (251.82, 94.36)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.37, 86.94)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 33, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 158)
[0000][PE] mean and std.dev: (39.17, 33.75)
[0000][PE] low and high boundaries for proper pairs: (1, 204)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 256, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (256.63, 93.62)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3762.737 CPU sec, 68.388 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2255, 1549288, 178, 1835)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 251, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (253.04, 97.52)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.47, 87.44)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 35, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 226)
[0000][PE] mean and std.dev: (40.24, 40.98)
[0000][PE] low and high boundaries for proper pairs: (1, 296)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (259.16, 92.61)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3385.800 CPU sec, 62.037 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2178, 1547295, 188, 1769)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 254, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (254.89, 94.72)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.97, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 33, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 214)
[0000][PE] mean and std.dev: (38.38, 38.88)
[0000][PE] low and high boundaries for proper pairs: (1, 281)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (259.18, 97.57)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3400.460 CPU sec, 62.555 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2108, 1548468, 171, 1764)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 253, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (256.08, 97.46)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (376.05, 87.51)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 39, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 292)
[0000][PE] mean and std.dev: (54.72, 58.79)
[0000][PE] low and high boundaries for proper pairs: (1, 383)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (259.99, 93.00)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3330.427 CPU sec, 61.040 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2372, 1549475, 168, 1828)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (249.71, 94.10)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.29, 86.78)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 43, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (47.85, 44.38)
[0000][PE] low and high boundaries for proper pairs: (1, 316)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 256, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (255.27, 90.76)
[0000][PE] low and high boundaries for proper pairs: (1, 697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3366.195 CPU sec, 61.428 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2398, 1548485, 174, 1870)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 245, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (248.56, 94.52)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.08, 86.88)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 41, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 245)
[0000][PE] mean and std.dev: (46.21, 42.44)
[0000][PE] low and high boundaries for proper pairs: (1, 320)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 253, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (256.49, 96.41)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3306.172 CPU sec, 60.433 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2333, 1547362, 209, 1869)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 246, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (249.02, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.79, 87.02)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 240)
[0000][PE] mean and std.dev: (44.66, 44.29)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (255.94, 94.24)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3342.365 CPU sec, 61.149 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2358, 1549487, 178, 1792)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 244, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (247.93, 94.39)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.11, 87.25)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 37, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (44.24, 47.01)
[0000][PE] low and high boundaries for proper pairs: (1, 317)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (259.92, 99.27)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3251.973 CPU sec, 59.408 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2308, 1548675, 190, 1774)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 251, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (250.64, 95.58)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.44, 86.97)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 37, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 277)
[0000][PE] mean and std.dev: (43.17, 46.85)
[0000][PE] low and high boundaries for proper pairs: (1, 363)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 255, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (255.34, 92.77)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3311.864 CPU sec, 60.568 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2318, 1547654, 189, 1896)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 243, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (246.09, 93.18)
[0000][PE] low and high boundaries for proper pairs: (1, 693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.22, 86.68)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 49, 135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 361)
[0000][PE] mean and std.dev: (54.44, 60.27)
[0000][PE] low and high boundaries for proper pairs: (1, 474)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 254, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (255.48, 94.46)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3350.711 CPU sec, 61.093 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2351, 1549093, 173, 1859)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (248.62, 96.87)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.63, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 34, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 260)
[0000][PE] mean and std.dev: (41.93, 41.33)
[0000][PE] low and high boundaries for proper pairs: (1, 341)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 260, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (257.64, 98.27)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3259.180 CPU sec, 59.726 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2351, 1534960, 159, 1743)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 250, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (253.34, 95.16)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.30, 87.09)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 44, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 235)
[0000][PE] mean and std.dev: (46.55, 39.99)
[0000][PE] low and high boundaries for proper pairs: (1, 307)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (255.08, 93.29)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3324.835 CPU sec, 62.071 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2277, 1550177, 159, 1772)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 249, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (251.51, 97.68)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.01, 87.08)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 39, 79)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 199)
[0000][PE] mean and std.dev: (39.84, 32.18)
[0000][PE] low and high boundaries for proper pairs: (1, 259)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (256.82, 93.84)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3319.109 CPU sec, 61.079 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2349, 1549869, 204, 1771)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 245, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (247.61, 92.09)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.16, 87.10)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 34, 112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 306)
[0000][PE] mean and std.dev: (45.57, 52.31)
[0000][PE] low and high boundaries for proper pairs: (1, 403)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (256.81, 94.65)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3269.067 CPU sec, 60.354 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2319, 1548185, 190, 1825)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (248.69, 94.74)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.43, 87.12)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 37, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 233)
[0000][PE] mean and std.dev: (43.69, 41.02)
[0000][PE] low and high boundaries for proper pairs: (1, 304)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 265, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (264.36, 96.52)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3242.031 CPU sec, 59.231 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2380, 1547715, 177, 1739)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (251.37, 97.00)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.86, 86.95)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 39, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 208)
[0000][PE] mean and std.dev: (42.66, 40.73)
[0000][PE] low and high boundaries for proper pairs: (1, 272)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 251, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (256.76, 98.38)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3307.765 CPU sec, 60.487 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2296, 1543817, 198, 1765)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (248.66, 96.13)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.32, 86.78)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 36, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 230)
[0000][PE] mean and std.dev: (37.36, 38.28)
[0000][PE] low and high boundaries for proper pairs: (1, 302)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 252, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (257.19, 99.33)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3346.928 CPU sec, 61.155 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2320, 1540226, 171, 1754)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 243, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (245.50, 95.97)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.20, 86.97)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 275)
[0000][PE] mean and std.dev: (45.92, 42.07)
[0000][PE] low and high boundaries for proper pairs: (1, 361)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (256.57, 91.69)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3294.642 CPU sec, 60.353 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2352, 1550118, 142, 1766)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 247, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (248.16, 93.42)
[0000][PE] low and high boundaries for proper pairs: (1, 689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.80, 87.17)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 31, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 156)
[0000][PE] mean and std.dev: (32.79, 27.95)
[0000][PE] low and high boundaries for proper pairs: (1, 203)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 259, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (261.80, 101.37)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3240.148 CPU sec, 59.271 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2394, 1549594, 182, 1823)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 244, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (250.99, 98.85)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.72, 87.17)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 37, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 252)
[0000][PE] mean and std.dev: (45.08, 47.57)
[0000][PE] low and high boundaries for proper pairs: (1, 331)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 256, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (256.06, 90.99)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3262.220 CPU sec, 59.563 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2343, 1547512, 164, 1887)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (249.03, 92.18)
[0000][PE] low and high boundaries for proper pairs: (1, 688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.16, 86.95)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 38, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (38.75, 37.82)
[0000][PE] low and high boundaries for proper pairs: (1, 318)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 261, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (262.37, 94.34)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3386.562 CPU sec, 61.880 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2185, 1551124, 184, 1801)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 250, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (250.00, 97.90)
[0000][PE] low and high boundaries for proper pairs: (1, 753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.35, 87.00)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 34, 89)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 239)
[0000][PE] mean and std.dev: (40.32, 39.86)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 260, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (260.15, 93.69)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3281.686 CPU sec, 60.261 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2275, 1548801, 201, 1813)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (246.10, 93.10)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.31, 86.98)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 44, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 244)
[0000][PE] mean and std.dev: (45.39, 39.69)
[0000][PE] low and high boundaries for proper pairs: (1, 319)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (256.24, 95.29)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3381.796 CPU sec, 61.756 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2242, 1549687, 183, 1796)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (249.31, 95.78)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.66, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 40, 118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 326)
[0000][PE] mean and std.dev: (47.50, 60.15)
[0000][PE] low and high boundaries for proper pairs: (1, 430)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (260.02, 97.16)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3301.159 CPU sec, 60.912 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2357, 1544769, 170, 1873)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (248.94, 97.68)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.97, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 48, 123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 333)
[0000][PE] mean and std.dev: (52.59, 54.61)
[0000][PE] low and high boundaries for proper pairs: (1, 438)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 255, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (258.24, 98.92)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3276.841 CPU sec, 60.472 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2270, 1550156, 182, 1798)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (247.68, 96.11)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.16, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 37, 126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 346)
[0000][PE] mean and std.dev: (48.50, 61.46)
[0000][PE] low and high boundaries for proper pairs: (1, 456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (252.66, 94.13)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3317.114 CPU sec, 61.048 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2207, 1551391, 170, 1698)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 249, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (250.97, 100.84)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.19, 87.19)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 41, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 266)
[0000][PE] mean and std.dev: (45.12, 42.27)
[0000][PE] low and high boundaries for proper pairs: (1, 348)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (261.16, 99.51)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3299.209 CPU sec, 61.388 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2301, 1550596, 203, 1774)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (251.67, 95.19)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.16, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 34, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 210)
[0000][PE] mean and std.dev: (36.39, 32.59)
[0000][PE] low and high boundaries for proper pairs: (1, 274)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (258.68, 98.61)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3298.382 CPU sec, 60.568 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2177, 1547414, 172, 1860)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 244, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (245.90, 97.18)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.71, 87.00)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 41, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 258)
[0000][PE] mean and std.dev: (48.65, 49.42)
[0000][PE] low and high boundaries for proper pairs: (1, 338)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 251, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (253.47, 96.62)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3390.626 CPU sec, 64.395 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2236, 1548908, 184, 1854)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (249.72, 96.79)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.75, 87.00)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 226)
[0000][PE] mean and std.dev: (46.97, 45.70)
[0000][PE] low and high boundaries for proper pairs: (1, 296)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (258.38, 97.28)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3338.365 CPU sec, 60.751 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2238, 1550749, 174, 1797)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (247.42, 94.51)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.94, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 33, 78)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 204)
[0000][PE] mean and std.dev: (34.15, 31.21)
[0000][PE] low and high boundaries for proper pairs: (1, 267)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 252, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (254.03, 93.85)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3281.979 CPU sec, 60.090 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2274, 1549410, 174, 1791)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (250.25, 95.69)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.89, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 45, 99)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 253)
[0000][PE] mean and std.dev: (48.81, 46.39)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (255.77, 98.66)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3283.898 CPU sec, 60.360 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2220, 1549816, 152, 1836)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 252, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (253.57, 96.00)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.06, 87.40)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 44, 181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 503)
[0000][PE] mean and std.dev: (62.24, 79.82)
[0000][PE] low and high boundaries for proper pairs: (1, 664)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 253, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (260.09, 103.61)
[0000][PE] low and high boundaries for proper pairs: (1, 778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3224.493 CPU sec, 58.898 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2277, 1549364, 182, 1841)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (249.14, 95.30)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.53, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 44, 133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 359)
[0000][PE] mean and std.dev: (52.47, 61.75)
[0000][PE] low and high boundaries for proper pairs: (1, 472)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (261.26, 99.20)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3296.050 CPU sec, 60.307 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2193, 1547418, 192, 1766)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (255.24, 95.53)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.90, 87.18)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 37, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 214)
[0000][PE] mean and std.dev: (37.96, 33.90)
[0000][PE] low and high boundaries for proper pairs: (1, 280)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 260, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (259.55, 96.66)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3362.229 CPU sec, 61.297 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2259, 1545404, 161, 1737)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (250.09, 97.76)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.51, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 43, 113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 295)
[0000][PE] mean and std.dev: (47.02, 45.10)
[0000][PE] low and high boundaries for proper pairs: (1, 386)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (255.85, 95.42)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3287.491 CPU sec, 59.897 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2334, 1549073, 180, 1825)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (249.55, 94.30)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.93, 87.33)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 36, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 195)
[0000][PE] mean and std.dev: (41.99, 34.61)
[0000][PE] low and high boundaries for proper pairs: (1, 254)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 256, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (259.90, 95.18)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3291.384 CPU sec, 59.981 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2285, 1549540, 188, 1790)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 250, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (251.49, 96.97)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.52, 87.33)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 43, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 240)
[0000][PE] mean and std.dev: (45.10, 40.82)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 251, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (253.98, 95.69)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3328.752 CPU sec, 61.118 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2285, 1550204, 177, 1737)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (249.88, 94.86)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.04, 87.32)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 44, 136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 364)
[0000][PE] mean and std.dev: (58.43, 68.32)
[0000][PE] low and high boundaries for proper pairs: (1, 478)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (263.33, 98.59)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3298.893 CPU sec, 60.108 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2306, 1547930, 186, 1793)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (252.19, 98.61)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.51, 86.96)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 35, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 214)
[0000][PE] mean and std.dev: (40.01, 40.25)
[0000][PE] low and high boundaries for proper pairs: (1, 280)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 257, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (257.83, 91.49)
[0000][PE] low and high boundaries for proper pairs: (1, 697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3374.534 CPU sec, 61.385 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2222, 1549595, 200, 1833)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (250.48, 96.36)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.69, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 33, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 183)
[0000][PE] mean and std.dev: (34.18, 30.72)
[0000][PE] low and high boundaries for proper pairs: (1, 238)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 259, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (261.08, 97.02)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3328.880 CPU sec, 60.812 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2333, 1548839, 170, 1814)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (254.58, 96.68)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.38, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 33, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 196)
[0000][PE] mean and std.dev: (37.59, 34.61)
[0000][PE] low and high boundaries for proper pairs: (1, 257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 258, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (260.19, 96.56)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3306.436 CPU sec, 60.524 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2266, 1545565, 175, 1917)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 252, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 605)
[0000][PE] mean and std.dev: (255.15, 97.36)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.67, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 235)
[0000][PE] mean and std.dev: (38.62, 35.72)
[0000][PE] low and high boundaries for proper pairs: (1, 307)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 257, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (258.78, 98.87)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3333.674 CPU sec, 61.591 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2286, 1547864, 195, 1861)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 245, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (247.62, 95.61)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.96, 87.08)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 36, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 179)
[0000][PE] mean and std.dev: (38.04, 33.53)
[0000][PE] low and high boundaries for proper pairs: (1, 233)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 259, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (260.66, 97.99)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3395.143 CPU sec, 62.173 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2214, 1547584, 186, 1742)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 247, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (250.90, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.99, 87.03)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 43, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 276)
[0000][PE] mean and std.dev: (45.12, 42.77)
[0000][PE] low and high boundaries for proper pairs: (1, 362)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 258, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (261.62, 96.56)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3466.364 CPU sec, 63.506 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2347, 1547285, 179, 1858)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (253.05, 98.77)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.31, 87.00)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 34, 97)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 261)
[0000][PE] mean and std.dev: (41.23, 42.39)
[0000][PE] low and high boundaries for proper pairs: (1, 343)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 253, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (255.36, 93.04)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3440.431 CPU sec, 62.951 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2196, 1550077, 175, 1797)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 253, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (253.32, 94.32)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.82, 87.49)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 33, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 178)
[0000][PE] mean and std.dev: (32.72, 26.92)
[0000][PE] low and high boundaries for proper pairs: (1, 232)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 255, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (256.47, 94.60)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3289.452 CPU sec, 60.535 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2236, 1546242, 200, 1791)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (253.78, 97.57)
[0000][PE] low and high boundaries for proper pairs: (1, 754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.14, 87.46)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 39, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (38.92, 38.34)
[0000][PE] low and high boundaries for proper pairs: (1, 316)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (259.21, 95.34)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3404.035 CPU sec, 62.327 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2372, 1549773, 177, 1816)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 252, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (253.25, 97.71)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.89, 86.97)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 40, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 300)
[0000][PE] mean and std.dev: (48.29, 51.27)
[0000][PE] low and high boundaries for proper pairs: (1, 395)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 252, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (255.11, 94.30)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3363.581 CPU sec, 61.452 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2329, 1545773, 192, 1781)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 244, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (246.28, 96.55)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.92, 86.97)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 83)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 217)
[0000][PE] mean and std.dev: (39.42, 36.12)
[0000][PE] low and high boundaries for proper pairs: (1, 284)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (256.15, 92.25)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3417.317 CPU sec, 62.566 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2307, 1548572, 158, 1818)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (249.33, 95.45)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.55, 87.01)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 35, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 204)
[0000][PE] mean and std.dev: (38.71, 38.45)
[0000][PE] low and high boundaries for proper pairs: (1, 268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 259, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (259.69, 92.87)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3431.588 CPU sec, 63.837 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2304, 1549354, 153, 1888)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 244, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (249.12, 95.41)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.07, 87.19)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 37, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 220)
[0000][PE] mean and std.dev: (35.86, 32.01)
[0000][PE] low and high boundaries for proper pairs: (1, 288)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (255.50, 97.94)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3362.855 CPU sec, 62.634 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2383, 1547879, 205, 1846)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 242, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (245.80, 94.21)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.28, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 38, 79)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 203)
[0000][PE] mean and std.dev: (39.37, 32.86)
[0000][PE] low and high boundaries for proper pairs: (1, 265)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 260, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (260.64, 96.84)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3409.192 CPU sec, 63.453 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2313, 1549255, 187, 1916)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 247, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (249.56, 99.22)
[0000][PE] low and high boundaries for proper pairs: (1, 757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.34, 87.03)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 32, 74)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 192)
[0000][PE] mean and std.dev: (39.38, 38.32)
[0000][PE] low and high boundaries for proper pairs: (1, 251)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (255.12, 95.46)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3278.237 CPU sec, 60.126 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2395, 1550461, 187, 1789)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 250, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (253.11, 99.09)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.37, 87.03)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 33, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 174)
[0000][PE] mean and std.dev: (36.30, 32.12)
[0000][PE] low and high boundaries for proper pairs: (1, 227)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 252, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (253.53, 94.84)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3265.844 CPU sec, 59.861 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2358, 1549047, 157, 1819)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (245.77, 93.00)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.31, 86.94)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 51, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 237)
[0000][PE] mean and std.dev: (46.84, 37.30)
[0000][PE] low and high boundaries for proper pairs: (1, 308)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 257, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (257.90, 97.47)
[0000][PE] low and high boundaries for proper pairs: (1, 754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3277.273 CPU sec, 59.990 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2389, 1548222, 203, 1830)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (252.31, 94.71)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.19, 86.88)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 33, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 243)
[0000][PE] mean and std.dev: (40.17, 37.77)
[0000][PE] low and high boundaries for proper pairs: (1, 318)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 251, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (253.89, 96.43)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3357.018 CPU sec, 61.390 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2297, 1549392, 170, 1759)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 248, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (250.58, 91.94)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.27, 86.84)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 37, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 176)
[0000][PE] mean and std.dev: (37.90, 30.79)
[0000][PE] low and high boundaries for proper pairs: (1, 228)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (257.71, 96.71)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3314.154 CPU sec, 60.619 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2327, 1549146, 199, 1741)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (250.40, 93.99)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.86, 87.04)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 42, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (40.42, 34.16)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (257.13, 90.91)
[0000][PE] low and high boundaries for proper pairs: (1, 704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3347.134 CPU sec, 61.486 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2395, 1547599, 182, 1767)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 247, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (249.50, 96.18)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (373.02, 87.04)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 44, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 241)
[0000][PE] mean and std.dev: (47.30, 42.26)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (262.27, 97.68)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3366.987 CPU sec, 61.703 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2306, 1548052, 209, 1791)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 242, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (244.07, 93.51)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.01, 86.73)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 40, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 226)
[0000][PE] mean and std.dev: (42.95, 40.60)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 254, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (256.25, 97.99)
[0000][PE] low and high boundaries for proper pairs: (1, 752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3370.315 CPU sec, 61.713 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2378, 1548879, 163, 1830)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 245, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (248.83, 95.49)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.97, 87.08)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 41, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 224)
[0000][PE] mean and std.dev: (39.22, 35.03)
[0000][PE] low and high boundaries for proper pairs: (1, 293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 251, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (254.48, 94.87)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3366.899 CPU sec, 62.056 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2372, 1549181, 162, 1835)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 253, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (257.18, 99.04)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.55, 87.15)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 35, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 176)
[0000][PE] mean and std.dev: (37.68, 33.03)
[0000][PE] low and high boundaries for proper pairs: (1, 229)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 257, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (259.71, 101.62)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3312.742 CPU sec, 60.542 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2381, 1549521, 177, 1841)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 251, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (251.92, 96.31)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.39, 87.12)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 42, 130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 352)
[0000][PE] mean and std.dev: (58.29, 68.84)
[0000][PE] low and high boundaries for proper pairs: (1, 463)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 257, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (259.31, 92.62)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3305.243 CPU sec, 60.428 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2401, 1545534, 195, 1821)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 242, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (245.28, 95.31)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 368, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 651)
[0000][PE] mean and std.dev: (371.18, 86.66)
[0000][PE] low and high boundaries for proper pairs: (1, 763)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 239)
[0000][PE] mean and std.dev: (43.01, 45.49)
[0000][PE] low and high boundaries for proper pairs: (1, 313)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 251, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (254.80, 94.65)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3425.935 CPU sec, 62.687 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2463, 1547631, 157, 1804)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (252.13, 99.54)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.36, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 41, 109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 287)
[0000][PE] mean and std.dev: (45.92, 46.02)
[0000][PE] low and high boundaries for proper pairs: (1, 376)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 259, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (260.78, 96.29)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3404.937 CPU sec, 62.284 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2404, 1550974, 152, 1805)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 575)
[0000][PE] mean and std.dev: (249.34, 93.52)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.99, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 37, 106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 280)
[0000][PE] mean and std.dev: (46.11, 45.86)
[0000][PE] low and high boundaries for proper pairs: (1, 367)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 252, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (254.22, 96.83)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3284.953 CPU sec, 61.432 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2379, 1549173, 169, 1897)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 246, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (248.70, 94.78)
[0000][PE] low and high boundaries for proper pairs: (1, 696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.60, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 38, 89)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 237)
[0000][PE] mean and std.dev: (41.82, 44.91)
[0000][PE] low and high boundaries for proper pairs: (1, 311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 254, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (258.79, 97.05)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3352.890 CPU sec, 61.335 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2326, 1547934, 179, 1819)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (249.41, 92.33)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 368, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 651)
[0000][PE] mean and std.dev: (371.40, 86.60)
[0000][PE] low and high boundaries for proper pairs: (1, 763)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 62)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 148)
[0000][PE] mean and std.dev: (37.36, 28.11)
[0000][PE] low and high boundaries for proper pairs: (1, 191)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 260, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (259.48, 94.75)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3461.222 CPU sec, 63.674 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2418, 1548209, 178, 1762)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 243, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (246.05, 95.17)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 368, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 651)
[0000][PE] mean and std.dev: (371.56, 86.65)
[0000][PE] low and high boundaries for proper pairs: (1, 763)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 45, 109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 287)
[0000][PE] mean and std.dev: (51.78, 53.66)
[0000][PE] low and high boundaries for proper pairs: (1, 376)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 254, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (256.75, 95.14)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3422.647 CPU sec, 63.045 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2280, 1548203, 167, 1801)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 245, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (245.62, 97.95)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.77, 86.93)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 34, 79)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 197)
[0000][PE] mean and std.dev: (40.36, 39.42)
[0000][PE] low and high boundaries for proper pairs: (1, 256)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (259.26, 97.76)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3419.810 CPU sec, 63.832 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2394, 1549569, 184, 1789)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 245, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (248.04, 95.14)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.83, 87.15)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 75)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 193)
[0000][PE] mean and std.dev: (37.33, 33.05)
[0000][PE] low and high boundaries for proper pairs: (1, 252)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 260, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (257.36, 95.20)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3419.325 CPU sec, 62.995 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2322, 1550044, 193, 1861)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (249.48, 93.86)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.21, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 45, 106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 282)
[0000][PE] mean and std.dev: (48.13, 47.19)
[0000][PE] low and high boundaries for proper pairs: (1, 370)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (258.06, 92.37)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3374.953 CPU sec, 65.700 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2384, 1548519, 171, 1904)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (249.85, 94.43)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.70, 87.09)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 39, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (46.44, 44.74)
[0000][PE] low and high boundaries for proper pairs: (1, 311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 257, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (258.76, 98.50)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3370.586 CPU sec, 61.913 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2321, 1548470, 183, 1782)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (251.68, 95.30)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.56, 86.82)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 42, 83)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 213)
[0000][PE] mean and std.dev: (44.07, 39.13)
[0000][PE] low and high boundaries for proper pairs: (1, 278)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 254, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 623)
[0000][PE] mean and std.dev: (258.99, 102.13)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3400.813 CPU sec, 62.295 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2314, 1551230, 178, 1802)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 244, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (246.87, 97.07)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.84, 87.18)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 35, 63)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 157)
[0000][PE] mean and std.dev: (34.49, 28.34)
[0000][PE] low and high boundaries for proper pairs: (1, 204)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 260, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (260.94, 94.63)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3322.936 CPU sec, 60.586 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2359, 1548390, 173, 1860)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (252.03, 94.99)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.05, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 43, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 279)
[0000][PE] mean and std.dev: (47.92, 48.57)
[0000][PE] low and high boundaries for proper pairs: (1, 366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 254, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (255.25, 98.57)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3346.311 CPU sec, 61.006 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2366, 1549492, 186, 1797)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (249.96, 96.05)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.90, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 42, 103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 275)
[0000][PE] mean and std.dev: (49.84, 53.20)
[0000][PE] low and high boundaries for proper pairs: (1, 361)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (253.33, 96.43)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3324.997 CPU sec, 60.634 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2380, 1545728, 172, 1909)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (250.38, 96.91)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.64, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 38, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 224)
[0000][PE] mean and std.dev: (41.00, 37.44)
[0000][PE] low and high boundaries for proper pairs: (1, 293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 258, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 616)
[0000][PE] mean and std.dev: (262.37, 98.24)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3561.582 CPU sec, 65.150 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2400, 1547133, 180, 1870)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (249.76, 97.68)
[0000][PE] low and high boundaries for proper pairs: (1, 727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.68, 87.06)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 36, 135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 365)
[0000][PE] mean and std.dev: (55.24, 67.33)
[0000][PE] low and high boundaries for proper pairs: (1, 480)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 259, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 621)
[0000][PE] mean and std.dev: (259.37, 98.39)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3426.063 CPU sec, 62.477 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2276, 1547489, 164, 1901)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 247, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (249.89, 96.11)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.60, 86.75)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 38, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 239)
[0000][PE] mean and std.dev: (41.91, 43.77)
[0000][PE] low and high boundaries for proper pairs: (1, 313)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (258.56, 94.73)
[0000][PE] low and high boundaries for proper pairs: (1, 698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3397.359 CPU sec, 62.385 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2292, 1547354, 164, 1931)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 243, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (247.36, 95.03)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.82, 87.12)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 33, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 187)
[0000][PE] mean and std.dev: (34.94, 31.61)
[0000][PE] low and high boundaries for proper pairs: (1, 245)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (256.15, 93.67)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3433.851 CPU sec, 62.610 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2364, 1545814, 183, 1833)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 251, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (251.97, 98.49)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (372.51, 86.75)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 27, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 189)
[0000][PE] mean and std.dev: (34.19, 35.01)
[0000][PE] low and high boundaries for proper pairs: (1, 248)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 259, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 622)
[0000][PE] mean and std.dev: (258.04, 99.03)
[0000][PE] low and high boundaries for proper pairs: (1, 767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3477.852 CPU sec, 63.828 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2327, 1544037, 197, 1840)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 246, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (249.10, 96.02)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 368, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 648)
[0000][PE] mean and std.dev: (370.89, 86.40)
[0000][PE] low and high boundaries for proper pairs: (1, 759)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 82)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 214)
[0000][PE] mean and std.dev: (40.87, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 280)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (254.54, 96.14)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3589.428 CPU sec, 67.071 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2302, 1548709, 187, 1792)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 250, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (251.29, 98.65)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.53, 87.16)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 229)
[0000][PE] mean and std.dev: (38.61, 33.67)
[0000][PE] low and high boundaries for proper pairs: (1, 300)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (255.87, 97.82)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3392.804 CPU sec, 62.091 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2345, 1547571, 187, 1826)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (253.61, 98.96)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.76, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 32, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 171)
[0000][PE] mean and std.dev: (32.18, 24.95)
[0000][PE] low and high boundaries for proper pairs: (1, 223)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 619)
[0000][PE] mean and std.dev: (265.15, 100.69)
[0000][PE] low and high boundaries for proper pairs: (1, 760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3423.913 CPU sec, 62.601 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2336, 1548903, 174, 1853)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 251, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (254.04, 95.25)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.88, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 47, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 252)
[0000][PE] mean and std.dev: (47.33, 41.93)
[0000][PE] low and high boundaries for proper pairs: (1, 329)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (259.05, 93.34)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3382.693 CPU sec, 61.993 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2299, 1545427, 164, 1926)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 248, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (251.46, 98.90)
[0000][PE] low and high boundaries for proper pairs: (1, 747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 368, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 652)
[0000][PE] mean and std.dev: (371.84, 86.63)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 34, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 225)
[0000][PE] mean and std.dev: (43.17, 41.83)
[0000][PE] low and high boundaries for proper pairs: (1, 294)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 260, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (261.10, 96.25)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3549.229 CPU sec, 64.688 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2368, 1547647, 191, 1758)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (255.02, 94.75)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.83, 87.13)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 43, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 220)
[0000][PE] mean and std.dev: (39.14, 34.23)
[0000][PE] low and high boundaries for proper pairs: (1, 287)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 259, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (259.93, 96.93)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3481.435 CPU sec, 63.537 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2306, 1548960, 167, 1805)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 244, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (251.08, 97.99)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.73, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 42, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 224)
[0000][PE] mean and std.dev: (44.64, 40.64)
[0000][PE] low and high boundaries for proper pairs: (1, 292)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 255, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (259.66, 99.01)
[0000][PE] low and high boundaries for proper pairs: (1, 746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3395.496 CPU sec, 62.154 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2293, 1546284, 187, 1848)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 252, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (256.96, 101.17)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.56, 87.50)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 283)
[0000][PE] mean and std.dev: (49.01, 56.45)
[0000][PE] low and high boundaries for proper pairs: (1, 371)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (260.40, 97.15)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3434.759 CPU sec, 62.717 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2246, 1549517, 176, 1762)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (256.12, 94.70)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.90, 87.25)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 39, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 255)
[0000][PE] mean and std.dev: (42.37, 42.98)
[0000][PE] low and high boundaries for proper pairs: (1, 335)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (256.76, 98.17)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3363.262 CPU sec, 61.442 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2359, 1549468, 166, 1856)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 248, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (249.04, 95.66)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.44, 87.13)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 38, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 200)
[0000][PE] mean and std.dev: (38.83, 34.80)
[0000][PE] low and high boundaries for proper pairs: (1, 262)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (260.22, 93.70)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3288.239 CPU sec, 60.154 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2317, 1549489, 167, 1800)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (250.16, 96.70)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.97, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 51, 124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 328)
[0000][PE] mean and std.dev: (55.28, 60.34)
[0000][PE] low and high boundaries for proper pairs: (1, 430)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 254, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (256.74, 98.94)
[0000][PE] low and high boundaries for proper pairs: (1, 753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3318.378 CPU sec, 60.581 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2393, 1549730, 174, 1766)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 251, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (251.69, 93.14)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.54, 87.18)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 71)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 177)
[0000][PE] mean and std.dev: (37.93, 32.68)
[0000][PE] low and high boundaries for proper pairs: (1, 230)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 266, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (264.68, 96.12)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3318.700 CPU sec, 60.415 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2322, 1549985, 167, 1805)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 251, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (253.06, 96.17)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.74, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 43, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 268)
[0000][PE] mean and std.dev: (42.77, 39.34)
[0000][PE] low and high boundaries for proper pairs: (1, 352)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 256, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (259.21, 97.68)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3299.781 CPU sec, 60.175 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2381, 1549750, 178, 1782)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 246, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (249.51, 100.00)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.62, 87.15)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 42, 116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (49.68, 54.49)
[0000][PE] low and high boundaries for proper pairs: (1, 413)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (255.68, 94.15)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3311.149 CPU sec, 60.544 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2504, 1550708, 183, 1766)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 249, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (252.33, 97.79)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.96, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 49, 172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (61.80, 77.49)
[0000][PE] low and high boundaries for proper pairs: (1, 628)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (259.45, 98.46)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3222.923 CPU sec, 58.858 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2396, 1549975, 168, 1770)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (247.58, 96.47)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.57, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 47, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 240)
[0000][PE] mean and std.dev: (46.96, 43.13)
[0000][PE] low and high boundaries for proper pairs: (1, 313)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (258.15, 95.91)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3235.428 CPU sec, 59.570 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2430, 1549978, 191, 1805)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 566)
[0000][PE] mean and std.dev: (247.82, 93.21)
[0000][PE] low and high boundaries for proper pairs: (1, 693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.14, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 39, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 202)
[0000][PE] mean and std.dev: (41.09, 38.73)
[0000][PE] low and high boundaries for proper pairs: (1, 263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 254, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (256.96, 94.41)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3264.280 CPU sec, 59.650 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2338, 1549068, 175, 1904)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 241, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (244.41, 94.85)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.02, 87.15)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 39, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 249)
[0000][PE] mean and std.dev: (49.22, 50.08)
[0000][PE] low and high boundaries for proper pairs: (1, 326)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (258.53, 93.24)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3276.892 CPU sec, 60.015 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2271, 1549222, 158, 1799)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (250.76, 95.62)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.04, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 36, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 212)
[0000][PE] mean and std.dev: (38.65, 34.78)
[0000][PE] low and high boundaries for proper pairs: (1, 276)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 254, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (258.13, 97.02)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3297.880 CPU sec, 60.484 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2403, 1550208, 194, 1802)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 244, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (247.08, 98.28)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.24, 87.09)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 34, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 242)
[0000][PE] mean and std.dev: (37.48, 38.79)
[0000][PE] low and high boundaries for proper pairs: (1, 318)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 257, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (257.62, 94.97)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3253.281 CPU sec, 61.100 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2369, 1549527, 176, 1789)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (252.68, 98.64)
[0000][PE] low and high boundaries for proper pairs: (1, 740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.19, 87.12)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 45, 117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 311)
[0000][PE] mean and std.dev: (47.18, 52.29)
[0000][PE] low and high boundaries for proper pairs: (1, 408)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 257, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (257.75, 97.29)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3280.462 CPU sec, 60.391 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2382, 1549365, 199, 1784)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (248.91, 95.50)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.63, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 40, 92)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (47.58, 48.48)
[0000][PE] low and high boundaries for proper pairs: (1, 311)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (187, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (255.56, 96.17)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3266.670 CPU sec, 59.596 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2275, 1550520, 178, 1835)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 247, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (251.55, 98.27)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.68, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 32, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 232)
[0000][PE] mean and std.dev: (38.05, 39.27)
[0000][PE] low and high boundaries for proper pairs: (1, 305)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 259, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (257.42, 99.55)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3246.056 CPU sec, 59.454 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2377, 1549622, 193, 1742)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 248, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (250.79, 98.44)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.10, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 33, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 243)
[0000][PE] mean and std.dev: (42.88, 46.13)
[0000][PE] low and high boundaries for proper pairs: (1, 318)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (254.85, 95.33)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3264.939 CPU sec, 59.508 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2311, 1551295, 176, 1856)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (249.34, 94.43)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.26, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 38, 114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 314)
[0000][PE] mean and std.dev: (43.72, 49.63)
[0000][PE] low and high boundaries for proper pairs: (1, 414)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 260, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (258.82, 96.67)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3234.980 CPU sec, 59.195 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2458, 1550414, 186, 1840)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 249, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (251.32, 94.53)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.47, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 262)
[0000][PE] mean and std.dev: (46.25, 45.51)
[0000][PE] low and high boundaries for proper pairs: (1, 344)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 254, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (256.51, 94.16)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3288.778 CPU sec, 60.279 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2290, 1551693, 180, 1831)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 247, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (250.98, 97.60)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.00, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 35, 79)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 205)
[0000][PE] mean and std.dev: (38.76, 36.10)
[0000][PE] low and high boundaries for proper pairs: (1, 268)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 259, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (258.74, 93.24)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3243.127 CPU sec, 59.189 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2284, 1552931, 149, 1767)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 251, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (251.02, 93.60)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.64, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 36, 114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 308)
[0000][PE] mean and std.dev: (49.24, 60.11)
[0000][PE] low and high boundaries for proper pairs: (1, 405)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 256, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (259.24, 95.01)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3202.972 CPU sec, 58.607 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2368, 1551537, 188, 1751)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 250, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (252.93, 94.91)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.24, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 270)
[0000][PE] mean and std.dev: (44.24, 44.01)
[0000][PE] low and high boundaries for proper pairs: (1, 354)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (257.11, 95.95)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3260.652 CPU sec, 59.777 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2415, 1542479, 179, 1870)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 250, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (252.44, 98.51)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.97, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 44, 149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 411)
[0000][PE] mean and std.dev: (54.26, 65.05)
[0000][PE] low and high boundaries for proper pairs: (1, 542)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 260, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (258.14, 95.92)
[0000][PE] low and high boundaries for proper pairs: (1, 722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3270.570 CPU sec, 59.973 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2340, 1545213, 174, 1848)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 247, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (249.78, 97.58)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.46, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 36, 104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 276)
[0000][PE] mean and std.dev: (41.74, 41.75)
[0000][PE] low and high boundaries for proper pairs: (1, 362)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (257.56, 95.06)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3266.828 CPU sec, 59.703 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2379, 1549673, 183, 1830)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (249.22, 94.96)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 369, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.89, 86.97)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 36, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 254)
[0000][PE] mean and std.dev: (48.42, 51.03)
[0000][PE] low and high boundaries for proper pairs: (1, 332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 254, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (253.94, 92.27)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3375.693 CPU sec, 61.810 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2303, 1550547, 174, 1874)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (246.80, 96.02)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.71, 87.08)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 34, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 167)
[0000][PE] mean and std.dev: (36.92, 30.98)
[0000][PE] low and high boundaries for proper pairs: (1, 217)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (258.12, 95.14)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3313.985 CPU sec, 60.452 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2302, 1550046, 180, 1893)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 245, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (248.21, 95.01)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.48, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 72)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 180)
[0000][PE] mean and std.dev: (35.83, 28.64)
[0000][PE] low and high boundaries for proper pairs: (1, 234)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (255.80, 94.73)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3321.485 CPU sec, 61.237 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2388, 1550787, 191, 1762)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 245, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (247.99, 97.74)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.41, 87.26)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (22, 43, 99)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 253)
[0000][PE] mean and std.dev: (46.48, 39.59)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 261, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (263.19, 98.82)
[0000][PE] low and high boundaries for proper pairs: (1, 752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3282.698 CPU sec, 60.061 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2334, 1550378, 177, 1801)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (250.03, 96.89)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.77, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 40, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 233)
[0000][PE] mean and std.dev: (40.50, 40.76)
[0000][PE] low and high boundaries for proper pairs: (1, 306)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 257, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (258.87, 98.07)
[0000][PE] low and high boundaries for proper pairs: (1, 747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3270.228 CPU sec, 60.002 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2376, 1549624, 189, 1827)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (248.98, 96.32)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.40, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 43, 110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 302)
[0000][PE] mean and std.dev: (43.00, 45.40)
[0000][PE] low and high boundaries for proper pairs: (1, 398)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 257, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (257.21, 95.45)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3301.569 CPU sec, 60.083 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2326, 1551318, 187, 1824)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 246, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (250.03, 95.56)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.61, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 34, 81)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 209)
[0000][PE] mean and std.dev: (39.66, 36.05)
[0000][PE] low and high boundaries for proper pairs: (1, 273)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 253, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (256.31, 94.81)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3256.237 CPU sec, 59.471 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2388, 1549906, 190, 1844)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 251, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 569)
[0000][PE] mean and std.dev: (248.36, 93.63)
[0000][PE] low and high boundaries for proper pairs: (1, 697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.58, 87.48)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 308)
[0000][PE] mean and std.dev: (50.22, 58.23)
[0000][PE] low and high boundaries for proper pairs: (1, 405)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 257, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 619)
[0000][PE] mean and std.dev: (259.78, 99.72)
[0000][PE] low and high boundaries for proper pairs: (1, 761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3278.510 CPU sec, 59.805 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2361, 1549065, 178, 1792)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (248.75, 96.87)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.14, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 51, 207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (81.61, 112.01)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 251, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (257.41, 96.76)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3304.498 CPU sec, 60.620 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2327, 1550581, 180, 1774)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (249.84, 96.30)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.80, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 36, 109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 291)
[0000][PE] mean and std.dev: (43.64, 41.87)
[0000][PE] low and high boundaries for proper pairs: (1, 382)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 253, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (257.93, 96.66)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3294.850 CPU sec, 60.144 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2357, 1547848, 152, 1842)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 251, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (251.85, 94.88)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.91, 87.02)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 208)
[0000][PE] mean and std.dev: (37.02, 33.05)
[0000][PE] low and high boundaries for proper pairs: (1, 272)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 261, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (264.82, 96.03)
[0000][PE] low and high boundaries for proper pairs: (1, 739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3371.588 CPU sec, 61.766 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2342, 1547993, 171, 1846)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 242, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (246.33, 95.31)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.93, 87.11)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 33, 88)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 234)
[0000][PE] mean and std.dev: (39.85, 41.90)
[0000][PE] low and high boundaries for proper pairs: (1, 307)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 252, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (255.51, 96.50)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3369.085 CPU sec, 61.569 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2325, 1547181, 177, 1844)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (247.18, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.16, 86.85)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 35, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 202)
[0000][PE] mean and std.dev: (39.95, 35.48)
[0000][PE] low and high boundaries for proper pairs: (1, 263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 253, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (256.55, 95.27)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3394.007 CPU sec, 62.051 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2341, 1548101, 170, 1802)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (251.82, 95.31)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.91, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 34, 86)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 224)
[0000][PE] mean and std.dev: (42.57, 39.46)
[0000][PE] low and high boundaries for proper pairs: (1, 293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 575)
[0000][PE] mean and std.dev: (255.02, 92.22)
[0000][PE] low and high boundaries for proper pairs: (1, 701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3413.385 CPU sec, 62.679 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2340, 1550612, 202, 1782)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 252, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (251.49, 94.39)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.71, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 37, 98)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 256)
[0000][PE] mean and std.dev: (47.97, 49.86)
[0000][PE] low and high boundaries for proper pairs: (1, 335)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (258.75, 98.98)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3326.714 CPU sec, 60.859 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2350, 1548715, 156, 1810)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 245, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (251.14, 95.56)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.65, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 40, 128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 348)
[0000][PE] mean and std.dev: (46.90, 53.54)
[0000][PE] low and high boundaries for proper pairs: (1, 458)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 252, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (254.12, 95.79)
[0000][PE] low and high boundaries for proper pairs: (1, 724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3306.878 CPU sec, 60.479 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2347, 1547195, 167, 1900)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (249.53, 95.43)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.07, 87.25)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 99)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 259)
[0000][PE] mean and std.dev: (43.77, 41.69)
[0000][PE] low and high boundaries for proper pairs: (1, 339)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 259, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (259.40, 92.87)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3362.275 CPU sec, 61.523 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2288, 1549824, 181, 1856)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (251.68, 96.95)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.00, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 31, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 178)
[0000][PE] mean and std.dev: (35.02, 28.75)
[0000][PE] low and high boundaries for proper pairs: (1, 232)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 258, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (258.67, 99.14)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3314.568 CPU sec, 60.581 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2256, 1547583, 177, 1902)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 251, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (254.57, 96.62)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (375.29, 87.33)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 36, 84)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 218)
[0000][PE] mean and std.dev: (39.97, 37.48)
[0000][PE] low and high boundaries for proper pairs: (1, 285)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 261, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (259.90, 96.66)
[0000][PE] low and high boundaries for proper pairs: (1, 744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3360.769 CPU sec, 61.273 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2336, 1549819, 183, 1815)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 249, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (251.95, 98.76)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.85, 87.48)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 279)
[0000][PE] mean and std.dev: (40.47, 38.92)
[0000][PE] low and high boundaries for proper pairs: (1, 366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 257, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 618)
[0000][PE] mean and std.dev: (261.02, 99.58)
[0000][PE] low and high boundaries for proper pairs: (1, 760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3339.362 CPU sec, 61.221 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2300, 1548105, 179, 1785)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 249, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (252.53, 96.93)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.60, 87.59)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 36, 66)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 162)
[0000][PE] mean and std.dev: (38.47, 30.18)
[0000][PE] low and high boundaries for proper pairs: (1, 210)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 258, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (259.94, 97.25)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3387.593 CPU sec, 61.782 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2235, 1550015, 165, 1872)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 258, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (257.86, 94.87)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (376.09, 87.53)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 34, 121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 337)
[0000][PE] mean and std.dev: (45.36, 58.95)
[0000][PE] low and high boundaries for proper pairs: (1, 445)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 252, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 572)
[0000][PE] mean and std.dev: (253.76, 94.32)
[0000][PE] low and high boundaries for proper pairs: (1, 699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3342.844 CPU sec, 60.968 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2375, 1551240, 173, 1830)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (251.41, 97.10)
[0000][PE] low and high boundaries for proper pairs: (1, 735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 660)
[0000][PE] mean and std.dev: (375.39, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 774)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 46, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 238)
[0000][PE] mean and std.dev: (45.16, 42.79)
[0000][PE] low and high boundaries for proper pairs: (1, 312)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 251, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (252.68, 94.44)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3248.520 CPU sec, 59.455 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2452, 1551034, 196, 1870)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 246, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (248.78, 95.70)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.97, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 37, 85)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 225)
[0000][PE] mean and std.dev: (41.83, 42.11)
[0000][PE] low and high boundaries for proper pairs: (1, 295)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 254, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (257.13, 94.89)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3257.898 CPU sec, 59.512 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2356, 1551747, 177, 1857)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (250.39, 97.13)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.80, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 37, 80)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 210)
[0000][PE] mean and std.dev: (38.79, 33.51)
[0000][PE] low and high boundaries for proper pairs: (1, 275)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 255, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (255.66, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3241.740 CPU sec, 59.194 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2453, 1550776, 162, 1900)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 251, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (251.84, 95.83)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.40, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 43, 115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 311)
[0000][PE] mean and std.dev: (53.15, 61.18)
[0000][PE] low and high boundaries for proper pairs: (1, 409)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (253.62, 90.92)
[0000][PE] low and high boundaries for proper pairs: (1, 693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3275.017 CPU sec, 59.745 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2288, 1550563, 201, 1816)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (249.83, 96.68)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.46, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 83)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 217)
[0000][PE] mean and std.dev: (43.29, 39.94)
[0000][PE] low and high boundaries for proper pairs: (1, 284)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 258, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (260.01, 95.59)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3269.373 CPU sec, 59.689 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2356, 1552086, 199, 1791)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 244, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 575)
[0000][PE] mean and std.dev: (249.45, 97.32)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.65, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 37, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 197)
[0000][PE] mean and std.dev: (40.81, 36.96)
[0000][PE] low and high boundaries for proper pairs: (1, 257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 261, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (262.84, 99.56)
[0000][PE] low and high boundaries for proper pairs: (1, 751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3227.916 CPU sec, 58.883 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2440, 1550702, 165, 1878)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 248, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (250.08, 96.29)
[0000][PE] low and high boundaries for proper pairs: (1, 718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.06, 87.16)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 38, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 268)
[0000][PE] mean and std.dev: (45.83, 47.23)
[0000][PE] low and high boundaries for proper pairs: (1, 352)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 253, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (255.04, 94.23)
[0000][PE] low and high boundaries for proper pairs: (1, 713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3248.733 CPU sec, 59.261 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2415, 1550278, 176, 1834)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 244, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (245.57, 96.26)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.13, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 37, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 251)
[0000][PE] mean and std.dev: (41.86, 44.36)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 254, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (255.30, 94.60)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3197.677 CPU sec, 58.383 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2340, 1551044, 182, 1821)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 245, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (247.21, 95.47)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.28, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (11, 40, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 248)
[0000][PE] mean and std.dev: (40.47, 41.36)
[0000][PE] low and high boundaries for proper pairs: (1, 327)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 254, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 604)
[0000][PE] mean and std.dev: (258.11, 98.25)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3204.006 CPU sec, 58.414 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2425, 1549528, 190, 1858)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 240, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 562)
[0000][PE] mean and std.dev: (243.95, 92.43)
[0000][PE] low and high boundaries for proper pairs: (1, 689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.87, 87.11)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 38, 77)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 197)
[0000][PE] mean and std.dev: (40.55, 37.45)
[0000][PE] low and high boundaries for proper pairs: (1, 257)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (254.76, 95.77)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3243.837 CPU sec, 59.127 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2363, 1549633, 186, 1751)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (250.82, 96.37)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.46, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 45, 151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 413)
[0000][PE] mean and std.dev: (55.26, 68.93)
[0000][PE] low and high boundaries for proper pairs: (1, 544)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 251, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (258.78, 98.02)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3239.722 CPU sec, 59.271 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2379, 1550418, 157, 1769)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 249, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (248.98, 97.19)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.49, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 45, 105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 277)
[0000][PE] mean and std.dev: (48.45, 46.51)
[0000][PE] low and high boundaries for proper pairs: (1, 363)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 255, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (259.27, 97.40)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3242.744 CPU sec, 59.188 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2461, 1549036, 194, 1841)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 246, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (249.47, 97.92)
[0000][PE] low and high boundaries for proper pairs: (1, 730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (94, 654)
[0000][PE] mean and std.dev: (374.46, 87.13)
[0000][PE] low and high boundaries for proper pairs: (1, 766)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 37, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 252)
[0000][PE] mean and std.dev: (43.77, 43.35)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 256, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (256.45, 97.65)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3254.898 CPU sec, 59.457 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2404, 1550964, 176, 1891)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 571)
[0000][PE] mean and std.dev: (247.77, 92.61)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.32, 87.28)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 33, 67)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 169)
[0000][PE] mean and std.dev: (34.21, 27.51)
[0000][PE] low and high boundaries for proper pairs: (1, 220)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (255.94, 94.51)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3232.241 CPU sec, 58.979 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2432, 1551084, 186, 1868)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 247, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (248.94, 97.60)
[0000][PE] low and high boundaries for proper pairs: (1, 711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.10, 87.23)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (21, 39, 89)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 225)
[0000][PE] mean and std.dev: (41.13, 33.20)
[0000][PE] low and high boundaries for proper pairs: (1, 293)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 258, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (258.62, 98.95)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3262.033 CPU sec, 60.065 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2382, 1550966, 181, 1831)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (247.53, 97.12)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.26, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 37, 89)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 239)
[0000][PE] mean and std.dev: (42.59, 40.14)
[0000][PE] low and high boundaries for proper pairs: (1, 314)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 252, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (254.20, 96.33)
[0000][PE] low and high boundaries for proper pairs: (1, 750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3268.435 CPU sec, 59.705 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2321, 1552544, 167, 1936)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 245, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 599)
[0000][PE] mean and std.dev: (249.22, 97.61)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.56, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 36, 102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 278)
[0000][PE] mean and std.dev: (45.31, 47.46)
[0000][PE] low and high boundaries for proper pairs: (1, 366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 255, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (253.75, 93.24)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3225.630 CPU sec, 58.887 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2464, 1551705, 182, 1871)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 242, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 587)
[0000][PE] mean and std.dev: (247.47, 97.15)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.48, 87.30)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 34, 69)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 173)
[0000][PE] mean and std.dev: (39.27, 32.36)
[0000][PE] low and high boundaries for proper pairs: (1, 225)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (255.01, 94.73)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3269.308 CPU sec, 59.799 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2335, 1552314, 185, 1857)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 243, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (245.44, 95.76)
[0000][PE] low and high boundaries for proper pairs: (1, 705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.43, 87.35)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 38, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 252)
[0000][PE] mean and std.dev: (44.68, 43.37)
[0000][PE] low and high boundaries for proper pairs: (1, 330)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 259, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (258.66, 95.48)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3255.522 CPU sec, 59.617 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2461, 1553655, 165, 1832)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 250, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (249.93, 95.01)
[0000][PE] low and high boundaries for proper pairs: (1, 729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.71, 87.37)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 37, 96)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 254)
[0000][PE] mean and std.dev: (37.62, 36.45)
[0000][PE] low and high boundaries for proper pairs: (1, 333)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 259, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (262.89, 99.69)
[0000][PE] low and high boundaries for proper pairs: (1, 745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3218.378 CPU sec, 58.810 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2430, 1551722, 194, 1843)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 249, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 582)
[0000][PE] mean and std.dev: (252.02, 96.74)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.57, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 38, 81)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 213)
[0000][PE] mean and std.dev: (40.89, 37.64)
[0000][PE] low and high boundaries for proper pairs: (1, 279)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 253, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (255.97, 92.49)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3265.579 CPU sec, 59.486 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2354, 1553339, 171, 1849)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 244, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (247.75, 95.19)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.77, 87.41)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 89)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 231)
[0000][PE] mean and std.dev: (40.71, 38.36)
[0000][PE] low and high boundaries for proper pairs: (1, 302)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 257, 332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 606)
[0000][PE] mean and std.dev: (260.72, 98.13)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3195.493 CPU sec, 58.446 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2370, 1552098, 188, 1855)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 247, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 596)
[0000][PE] mean and std.dev: (250.73, 98.60)
[0000][PE] low and high boundaries for proper pairs: (1, 734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.31, 87.40)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (24, 44, 94)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 234)
[0000][PE] mean and std.dev: (46.32, 36.35)
[0000][PE] low and high boundaries for proper pairs: (1, 304)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 255, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (259.40, 98.58)
[0000][PE] low and high boundaries for proper pairs: (1, 754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3272.971 CPU sec, 59.687 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2341, 1551443, 177, 1853)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 244, 319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 595)
[0000][PE] mean and std.dev: (248.36, 97.01)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.27, 87.29)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 44, 127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 345)
[0000][PE] mean and std.dev: (52.84, 57.73)
[0000][PE] low and high boundaries for proper pairs: (1, 454)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 256, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (257.52, 95.15)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3313.668 CPU sec, 60.588 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2384, 1553007, 154, 1848)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (250.32, 95.02)
[0000][PE] low and high boundaries for proper pairs: (1, 716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.60, 87.36)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 33, 85)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 229)
[0000][PE] mean and std.dev: (35.04, 34.33)
[0000][PE] low and high boundaries for proper pairs: (1, 301)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 260, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 627)
[0000][PE] mean and std.dev: (262.19, 100.36)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3228.361 CPU sec, 58.967 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2374, 1550547, 196, 1936)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 248, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (251.16, 96.87)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.99, 87.31)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 35, 73)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 183)
[0000][PE] mean and std.dev: (35.43, 28.93)
[0000][PE] low and high boundaries for proper pairs: (1, 238)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 254, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 601)
[0000][PE] mean and std.dev: (255.99, 94.49)
[0000][PE] low and high boundaries for proper pairs: (1, 737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3287.516 CPU sec, 60.188 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2274, 1550303, 189, 1916)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 246, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (248.30, 95.68)
[0000][PE] low and high boundaries for proper pairs: (1, 721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.37, 86.96)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 40, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 253)
[0000][PE] mean and std.dev: (41.09, 36.84)
[0000][PE] low and high boundaries for proper pairs: (1, 332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 256, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (259.04, 95.98)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3339.729 CPU sec, 61.158 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2417, 1551255, 210, 1897)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 247, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (249.86, 93.07)
[0000][PE] low and high boundaries for proper pairs: (1, 706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.98, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 42, 76)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 190)
[0000][PE] mean and std.dev: (39.50, 33.02)
[0000][PE] low and high boundaries for proper pairs: (1, 247)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 259, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (258.73, 95.53)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3280.120 CPU sec, 60.296 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2346, 1549731, 180, 1831)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 249, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 565)
[0000][PE] mean and std.dev: (251.29, 94.59)
[0000][PE] low and high boundaries for proper pairs: (1, 691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.15, 87.25)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (13, 29, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 235)
[0000][PE] mean and std.dev: (40.80, 45.24)
[0000][PE] low and high boundaries for proper pairs: (1, 309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 255, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (255.02, 95.83)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3325.645 CPU sec, 60.850 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2472, 1549882, 191, 1827)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 244, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 577)
[0000][PE] mean and std.dev: (248.47, 94.91)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 659)
[0000][PE] mean and std.dev: (374.32, 87.43)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 36, 95)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 253)
[0000][PE] mean and std.dev: (43.09, 45.53)
[0000][PE] low and high boundaries for proper pairs: (1, 332)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (258.99, 94.54)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3355.088 CPU sec, 61.683 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2379, 1551496, 170, 1794)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (248.26, 96.75)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.25, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 33, 68)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 174)
[0000][PE] mean and std.dev: (38.40, 35.37)
[0000][PE] low and high boundaries for proper pairs: (1, 227)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 563)
[0000][PE] mean and std.dev: (249.23, 92.21)
[0000][PE] low and high boundaries for proper pairs: (1, 688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3329.231 CPU sec, 61.380 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2326, 1549408, 163, 1873)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 249, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (249.84, 95.29)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.02, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 40, 100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 264)
[0000][PE] mean and std.dev: (45.54, 50.27)
[0000][PE] low and high boundaries for proper pairs: (1, 346)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 259, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (259.39, 96.70)
[0000][PE] low and high boundaries for proper pairs: (1, 726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3343.695 CPU sec, 61.393 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2335, 1549636, 157, 1901)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 247, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 584)
[0000][PE] mean and std.dev: (251.19, 96.56)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 371, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (374.14, 87.27)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (12, 37, 138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 390)
[0000][PE] mean and std.dev: (52.33, 66.80)
[0000][PE] low and high boundaries for proper pairs: (1, 516)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 258, 329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (258.46, 97.01)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3363.381 CPU sec, 61.496 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2388, 1549673, 202, 1883)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 245, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (251.77, 97.72)
[0000][PE] low and high boundaries for proper pairs: (1, 725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.45, 87.22)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 42, 91)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 237)
[0000][PE] mean and std.dev: (45.18, 43.59)
[0000][PE] low and high boundaries for proper pairs: (1, 310)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 257, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 588)
[0000][PE] mean and std.dev: (258.31, 96.56)
[0000][PE] low and high boundaries for proper pairs: (1, 719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3311.573 CPU sec, 60.414 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2436, 1548633, 162, 1882)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 254, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 593)
[0000][PE] mean and std.dev: (253.02, 96.96)
[0000][PE] low and high boundaries for proper pairs: (1, 728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.64, 87.24)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (16, 41, 83)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 217)
[0000][PE] mean and std.dev: (40.41, 35.68)
[0000][PE] low and high boundaries for proper pairs: (1, 284)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 254, 321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 583)
[0000][PE] mean and std.dev: (253.02, 92.59)
[0000][PE] low and high boundaries for proper pairs: (1, 714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3336.918 CPU sec, 61.165 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2370, 1549919, 155, 1859)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 241, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (247.23, 94.52)
[0000][PE] low and high boundaries for proper pairs: (1, 710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.99, 87.39)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 41, 129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 347)
[0000][PE] mean and std.dev: (49.51, 56.07)
[0000][PE] low and high boundaries for proper pairs: (1, 456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 258, 330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 602)
[0000][PE] mean and std.dev: (259.23, 96.78)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3370.771 CPU sec, 61.899 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2324, 1548172, 150, 1859)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 248, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 586)
[0000][PE] mean and std.dev: (248.68, 96.39)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.80, 87.79)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (19, 38, 118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 316)
[0000][PE] mean and std.dev: (54.73, 66.26)
[0000][PE] low and high boundaries for proper pairs: (1, 415)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 256, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (259.38, 96.17)
[0000][PE] low and high boundaries for proper pairs: (1, 747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3357.313 CPU sec, 61.818 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2334, 1548184, 173, 1953)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 245, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 576)
[0000][PE] mean and std.dev: (245.25, 95.55)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (316, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (90, 655)
[0000][PE] mean and std.dev: (372.94, 87.18)
[0000][PE] low and high boundaries for proper pairs: (1, 768)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 40, 90)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 236)
[0000][PE] mean and std.dev: (40.57, 38.53)
[0000][PE] low and high boundaries for proper pairs: (1, 309)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 256, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (255.36, 95.39)
[0000][PE] low and high boundaries for proper pairs: (1, 723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3418.352 CPU sec, 62.836 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2409, 1545515, 159, 1895)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 243, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (246.82, 95.64)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (315, 369, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 654)
[0000][PE] mean and std.dev: (372.03, 87.14)
[0000][PE] low and high boundaries for proper pairs: (1, 767)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (18, 42, 87)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 225)
[0000][PE] mean and std.dev: (44.44, 41.23)
[0000][PE] low and high boundaries for proper pairs: (1, 294)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 252, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (255.02, 93.63)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3451.325 CPU sec, 63.297 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2421, 1549514, 195, 1941)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 244, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 579)
[0000][PE] mean and std.dev: (247.49, 96.77)
[0000][PE] low and high boundaries for proper pairs: (1, 712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 653)
[0000][PE] mean and std.dev: (373.33, 87.11)
[0000][PE] low and high boundaries for proper pairs: (1, 765)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (14, 35, 85)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 227)
[0000][PE] mean and std.dev: (37.70, 38.97)
[0000][PE] low and high boundaries for proper pairs: (1, 298)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 253, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (254.64, 94.89)
[0000][PE] low and high boundaries for proper pairs: (1, 738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3391.123 CPU sec, 62.200 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2464, 1544057, 177, 1901)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 246, 313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 573)
[0000][PE] mean and std.dev: (246.50, 94.41)
[0000][PE] low and high boundaries for proper pairs: (1, 703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.63, 87.21)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 39, 70)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 176)
[0000][PE] mean and std.dev: (40.25, 33.89)
[0000][PE] low and high boundaries for proper pairs: (1, 229)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 258, 335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 621)
[0000][PE] mean and std.dev: (260.11, 101.50)
[0000][PE] low and high boundaries for proper pairs: (1, 764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3463.790 CPU sec, 81.963 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2356, 1548073, 172, 1854)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 248, 318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (250.52, 95.27)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (317, 370, 430)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 656)
[0000][PE] mean and std.dev: (373.73, 87.19)
[0000][PE] low and high boundaries for proper pairs: (1, 769)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 45, 111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 299)
[0000][PE] mean and std.dev: (45.81, 47.45)
[0000][PE] low and high boundaries for proper pairs: (1, 393)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 250, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (253.96, 99.19)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3220.439 CPU sec, 75.017 real sec
[0000] read_chunk: 560000000, work_chunk_size: 560000120, nseq: 3612904
	[0000][ M::kt_pipeline] read 3612904 sequences (560000120 bp)...
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 3612904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2316, 1549753, 166, 1870)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 255, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (257.26, 99.45)
[0000][PE] low and high boundaries for proper pairs: (1, 733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (318, 371, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 657)
[0000][PE] mean and std.dev: (374.97, 87.49)
[0000][PE] low and high boundaries for proper pairs: (1, 770)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (15, 39, 93)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 249)
[0000][PE] mean and std.dev: (38.54, 36.00)
[0000][PE] low and high boundaries for proper pairs: (1, 327)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 260, 331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 609)
[0000][PE] mean and std.dev: (261.14, 98.40)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 3612904 reads in 3343.951 CPU sec, 62.016 real sec
[0000] read_chunk: 560000000, work_chunk_size: 450595540, nseq: 2907068
	[0000][ M::kt_pipeline] read 2907068 sequences (450595540 bp)...
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3100885153, n: 2907068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1817, 1245870, 155, 1533)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 250, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 568)
[0000][PE] mean and std.dev: (248.49, 92.84)
[0000][PE] low and high boundaries for proper pairs: (1, 696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (319, 372, 432)
[0000][PE] low and high boundaries for computing mean and std.dev: (93, 658)
[0000][PE] mean and std.dev: (375.66, 87.41)
[0000][PE] low and high boundaries for proper pairs: (1, 771)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (20, 39, 81)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 203)
[0000][PE] mean and std.dev: (45.27, 40.84)
[0000][PE] low and high boundaries for proper pairs: (1, 264)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 255, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 597)
[0000][PE] mean and std.dev: (258.52, 99.03)
[0000][PE] low and high boundaries for proper pairs: (1, 732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 2907068 reads in 2738.855 CPU sec, 51.210 real sec
[0000] read_chunk: 560000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 560000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 56
Processor is running @2200.454587 MHz
Runtime profile:

	Time taken for main_mem function: 22588.51 sec

	IO times (sec) :
	Reading IO time (reads) avg: 4687.48, (4687.48, 4687.48)
	Writing IO time (SAM) avg: 22327.59, (22327.59, 22327.59)
	Reading IO time (Reference Genome) avg: 43.15, (43.15, 43.15)
	Index read time avg: 86.99, (86.99, 86.99)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 22457.36
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 16052.35, (16052.35, 16052.35)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 4738.62, (4738.62, 4738.62)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 11121.00, (11121.00, 11121.00)
		SMEM compute avg: 3736.67, (3757.33, 3705.06)
		SAL compute avg: 956.25, (963.42, 949.22)
				MEM_SA avg: 525.18, (529.85, 516.57)

		BSW time, avg: 5537.64, (5542.81, 5531.20)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 16
	SIMD_WIDTH16 X: 8
	AVG_SEEDS_PER_READ: 64
